{
	"id": "d8e8956baed03ed796f55b1d9feb7346",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/common/BaseCordylineAccount.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\nimport {BaseAccount} from \"../core/BaseAccount.sol\";\nimport {SIG_VALIDATION_FAILED, SIG_VALIDATION_SUCCESS} from \"../helpers/Helpers.sol\";\nimport {IEntryPoint} from \"../interfaces/IEntryPoint.sol\";\nimport {PackedUserOperation} from \"../interfaces/PackedUserOperation.sol\";\nimport {TokenCallbackHandler} from \"../samples/callback/TokenCallbackHandler.sol\";\n\nimport {UUPSUpgradeable} from \"../external/solady/UUPSUpgradeable.sol\";\nimport {ERC1271} from \"./ERC1271.sol\";\n\nabstract contract BaseCordylineAccount is BaseAccount, TokenCallbackHandler, UUPSUpgradeable, ERC1271 {\n    IEntryPoint internal immutable _ENTRY_POINT;\n\n    /// @notice Signature types used for user operation validation and ERC-1271 signature validation.\n    enum SignatureType {\n        EOA,\n        CONTRACT,\n        CONTRACT_WITH_ADDR\n    }\n\n    error ArrayLengthMismatch();\n    error CreateFailed();\n    error InvalidSignatureType();\n    error NotAuthorized(address caller);\n    error ZeroAddressNotAllowed();\n\n    modifier onlyAuthorized() {\n        _onlyAuthorized();\n        _;\n    }\n\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable virtual {}\n\n    /// @notice Execute a transaction. This may only be called directly by an owner or by the entry point via a user\n    /// operation signed by an owner.\n    /// @param dest The target of the transaction.\n    /// @param value The amount of wei sent in the transaction.\n    /// @param func The transaction's calldata.\n    function execute(address dest, uint256 value, bytes calldata func) external override virtual onlyAuthorized {\n        _call(dest, value, func);\n    }\n\n    /// @notice Execute a sequence of transactions.\n    /// @param dest An array of the targets for each transaction in the sequence.\n    /// @param func An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with\n    /// corresponding elements representing the parameters for each transaction.\n    function executeBatch(address[] calldata dest, bytes[] calldata func) external virtual onlyAuthorized {\n        if (dest.length != func.length) {\n            revert ArrayLengthMismatch();\n        }\n        uint256 length = dest.length;\n        for (uint256 i = 0; i < length; ++i) {\n            _call(dest[i], 0, func[i]);\n        }\n    }\n\n    /// @notice Execute a sequence of transactions.\n    /// @param dest An array of the targets for each transaction in the sequence.\n    /// @param value An array of value for each transaction in the sequence.\n    /// @param func An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with\n    /// corresponding elements representing the parameters for each transaction.\n    function executeBatch(address[] calldata dest, uint256[] calldata value, bytes[] calldata func) external virtual onlyAuthorized {\n        if (dest.length != func.length || dest.length != value.length) {\n            revert ArrayLengthMismatch();\n        }\n        uint256 length = dest.length;\n        for (uint256 i = 0; i < length; ++i) {\n            _call(dest[i], value[i], func[i]);\n        }\n    }\n\n    /// @notice Creates a contract.\n    /// @param value The value to send to the new contract constructor.\n    /// @param initCode The initCode to deploy.\n    /// @return createdAddr The created contract address.\n    ///\n    /// @dev Assembly procedure:\n    ///     1. Load the free memory pointer.\n    ///     2. Get the initCode length.\n    ///     3. Copy the initCode from callata to memory at the free memory pointer.\n    ///     4. Create the contract.\n    ///     5. If creation failed (the address returned is zero), revert with CreateFailed().\n    function performCreate(uint256 value, bytes calldata initCode)\n        external\n        payable\n        virtual\n        onlyAuthorized\n        returns (address createdAddr)\n    {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            let len := initCode.length\n            calldatacopy(fmp, initCode.offset, len)\n\n            createdAddr := create(value, fmp, len)\n\n            if iszero(createdAddr) {\n                mstore(0x00, 0x7e16b8cd)\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @notice Creates a contract using create2 deterministic deployment.\n    /// @param value The value to send to the new contract constructor.\n    /// @param initCode The initCode to deploy.\n    /// @param salt The salt to use for the create2 operation.\n    /// @return createdAddr The created contract address.\n    ///\n    /// @dev Assembly procedure:\n    ///     1. Load the free memory pointer.\n    ///     2. Get the initCode length.\n    ///     3. Copy the initCode from callata to memory at the free memory pointer.\n    ///     4. Create the contract using Create2 with the passed salt parameter.\n    ///     5. If creation failed (the address returned is zero), revert with CreateFailed().\n    function performCreate2(uint256 value, bytes calldata initCode, bytes32 salt)\n        external\n        payable\n        virtual\n        onlyAuthorized\n        returns (address createdAddr)\n    {\n        assembly (\"memory-safe\") {\n            let fmp := mload(0x40)\n            let len := initCode.length\n            calldatacopy(fmp, initCode.offset, len)\n\n            createdAddr := create2(value, fmp, len, salt)\n\n            if iszero(createdAddr) {\n                mstore(0x00, 0x7e16b8cd)\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @notice Deposit more funds for this account in the entry point.\n    function addDeposit() external payable {\n        entryPoint().depositTo{value: msg.value}(address(this));\n    }\n\n    /// @notice Withdraw value from the account's deposit.\n    /// @param withdrawAddress Target to send to.\n    /// @param amount Amount to withdraw.\n    function withdrawDepositTo(address payable withdrawAddress, uint256 amount) external onlyAuthorized {\n        if (withdrawAddress == address(0)) {\n            revert ZeroAddressNotAllowed();\n        }\n        entryPoint().withdrawTo(withdrawAddress, amount);\n    }\n\n    /// @notice Check current account deposit in the entry point.\n    /// @return The current account deposit.\n    function getDeposit() external view returns (uint256) {\n        return entryPoint().balanceOf(address(this));\n    }\n\n    /// @inheritdoc BaseAccount\n    function entryPoint() public view virtual override returns (IEntryPoint) {\n        return _ENTRY_POINT;\n    }\n\n    /// @dev Must override to allow calls to protected functions.\n    function _isFromOwner() internal view virtual returns (bool);\n\n    /// @dev Revert if the caller is not any of:\n    /// 1. The entry point\n    /// 2. The account itself (when redirected through `execute`, etc.)\n    /// 3. An owner\n    function _onlyAuthorized() internal view {\n        if (msg.sender != address(entryPoint()) && msg.sender != address(this) && !_isFromOwner()) {\n            revert NotAuthorized(msg.sender);\n        }\n    }\n\n    /// @dev Convert a boolean success value to a validation data value.\n    /// @param success The success value to be converted.\n    /// @return validationData The validation data value. 0 if success is true, 1 (SIG_VALIDATION_FAILED) if\n    /// success is false.\n    function _successToValidationData(bool success) internal pure returns (uint256 validationData) {\n        return success ? SIG_VALIDATION_SUCCESS : SIG_VALIDATION_FAILED;\n    }\n\n    /// @dev Assembly procedure:\n    ///     1. Execute the call, passing:\n    ///         1. The gas\n    ///         2. The target address\n    ///         3. The call value\n    ///         4. The pointer to the start location of the callData in memory\n    ///         5. The length of the calldata\n    ///     2. If the call failed, bubble up the revert reason by doing the following:\n    ///         1. Load the free memory pointer\n    ///         2. Copy the return data (which is the revert reason) to memory at the free memory pointer\n    ///         3. Revert with the copied return data\n    function _call(address target, uint256 value, bytes memory data) internal {\n        assembly (\"memory-safe\") {\n            let succ := call(gas(), target, value, add(data, 0x20), mload(data), 0x00, 0)\n\n            if iszero(succ) {\n                let fmp := mload(0x40)\n                returndatacopy(fmp, 0x00, returndatasize())\n                revert(fmp, returndatasize())\n            }\n        }\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal view override onlyAuthorized {\n        (newImplementation);\n    }\n}\n"
			},
			"src/common/ERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\nimport {EIP712} from \"../external/solady/EIP712.sol\";\n\nabstract contract ERC1271 is EIP712 {\n    /// @dev bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n    bytes4 internal constant _1271_MAGIC_VALUE_SUCCESS = 0x1626ba7e;\n    bytes4 internal constant _1271_MAGIC_VALUE_FAILURE = 0xffffffff;\n    bytes32 internal constant _MESSAGE_TYPEHASH = keccak256(\"CordylineAccountMessage(bytes message)\");\n\n    /// @notice Returns the replay-safe hash of a message that can be signed by owners.\n    /// @param message Message that should be hashed.\n    /// @return The replay-safe message hash.\n    function getMessageHash(bytes memory message) public view returns (bytes32) {\n        bytes32 structHash = keccak256(abi.encode(_MESSAGE_TYPEHASH, keccak256(message)));\n        return _hashTypedData(structHash);\n    }\n\n    /// @dev The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is\n    /// a valid ERC-1271 signature from the owner (if the owner is a contract).\n    /// @param hash Hash of the data to be signed.\n    /// @param signature Signature byte array associated with the data.\n    /// @return Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`.\n    function isValidSignature(bytes32 hash, bytes calldata signature) public view virtual returns (bytes4) {\n        if (_isValidSignature(getMessageHash(abi.encode(hash)), signature)) {\n            return _1271_MAGIC_VALUE_SUCCESS;\n        }\n        return _1271_MAGIC_VALUE_FAILURE;\n    }\n\n    /// @dev Must override to provide the signature verification logic.\n    /// @param replaySafeHash The replay-safe hash that is derived from the original message.\n    /// @param signature The signature passed to `isValidSignature`.\n    /// @return Whether the signature is valid.\n    function _isValidSignature(bytes32 replaySafeHash, bytes calldata signature) internal view virtual returns (bool);\n}\n"
			},
			"src/external/solady/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice UUPS proxy mixin.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/UUPSUpgradeable.sol)\n/// @author Modified from OpenZeppelin\n/// (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol)\n///\n/// Note:\n/// - This implementation is intended to be used with ERC1967 proxies.\n/// See: `LibClone.deployERC1967` and related functions.\n/// - This implementation is NOT compatible with legacy OpenZeppelin proxies\n/// which do not store the implementation at `_ERC1967_IMPLEMENTATION_SLOT`.\nabstract contract UUPSUpgradeable {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The upgrade failed.\n    error UpgradeFailed();\n\n    /// @dev The call is from an unauthorized call context.\n    error UnauthorizedCallContext();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         IMMUTABLES                         */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev For checking if the context is a delegate call.\n    uint256 private immutable __self = uint256(uint160(address(this)));\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                           EVENTS                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Emitted when the proxy's implementation is upgraded.\n    event Upgraded(address indexed implementation);\n\n    /// @dev `keccak256(bytes(\"Upgraded(address)\"))`.\n    uint256 private constant _UPGRADED_EVENT_SIGNATURE =\n        0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                          STORAGE                           */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The ERC-1967 storage slot for the implementation in the proxy.\n    /// `uint256(keccak256(\"eip1967.proxy.implementation\")) - 1`.\n    bytes32 internal constant _ERC1967_IMPLEMENTATION_SLOT =\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                      UUPS OPERATIONS                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Please override this function to check if `msg.sender` is authorized\n    /// to upgrade the proxy to `newImplementation`, reverting if not.\n    /// ```\n    ///     function _authorizeUpgrade(address) internal override onlyOwner {}\n    /// ```\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /// @dev Returns the storage slot used by the implementation,\n    /// as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822).\n    ///\n    /// Note: The `notDelegated` modifier prevents accidental upgrades to\n    /// an implementation that is a proxy contract.\n    function proxiableUUID() public view virtual notDelegated returns (bytes32) {\n        // This function must always return `_ERC1967_IMPLEMENTATION_SLOT` to comply with ERC1967.\n        return _ERC1967_IMPLEMENTATION_SLOT;\n    }\n\n    /// @dev Upgrades the proxy's implementation to `newImplementation`.\n    /// Emits a {Upgraded} event.\n    ///\n    /// Note: Passing in empty `data` skips the delegatecall to `newImplementation`.\n    function upgradeToAndCall(address newImplementation, bytes calldata data)\n        public\n        payable\n        virtual\n        onlyProxy\n    {\n        _authorizeUpgrade(newImplementation);\n        /// @solidity memory-safe-assembly\n        assembly {\n            newImplementation := shr(96, shl(96, newImplementation)) // Clears upper 96 bits.\n            mstore(0x01, 0x52d1902d) // `proxiableUUID()`.\n            let s := _ERC1967_IMPLEMENTATION_SLOT\n            // Check if `newImplementation` implements `proxiableUUID` correctly.\n            if iszero(eq(mload(staticcall(gas(), newImplementation, 0x1d, 0x04, 0x01, 0x20)), s)) {\n                mstore(0x01, 0x55299b49) // `UpgradeFailed()`.\n                revert(0x1d, 0x04)\n            }\n            // Emit the {Upgraded} event.\n            log2(codesize(), 0x00, _UPGRADED_EVENT_SIGNATURE, newImplementation)\n            sstore(s, newImplementation) // Updates the implementation.\n\n            // Perform a delegatecall to `newImplementation` if `data` is non-empty.\n            if data.length {\n                // Forwards the `data` to `newImplementation` via delegatecall.\n                let m := mload(0x40)\n                calldatacopy(m, data.offset, data.length)\n                if iszero(delegatecall(gas(), newImplementation, m, data.length, codesize(), 0x00))\n                {\n                    // Bubble up the revert if the call reverts.\n                    returndatacopy(m, 0x00, returndatasize())\n                    revert(m, returndatasize())\n                }\n            }\n        }\n    }\n\n    /// @dev Requires that the execution is performed through a proxy.\n    modifier onlyProxy() {\n        uint256 s = __self;\n        /// @solidity memory-safe-assembly\n        assembly {\n            // To enable use cases with an immutable default implementation in the bytecode,\n            // (see: ERC6551Proxy), we don't require that the proxy address must match the\n            // value stored in the implementation slot, which may not be initialized.\n            if eq(s, address()) {\n                mstore(0x00, 0x9f03a026) // `UnauthorizedCallContext()`.\n                revert(0x1c, 0x04)\n            }\n        }\n        _;\n    }\n\n    /// @dev Requires that the execution is NOT performed via delegatecall.\n    /// This is the opposite of `onlyProxy`.\n    modifier notDelegated() {\n        uint256 s = __self;\n        /// @solidity memory-safe-assembly\n        assembly {\n            if iszero(eq(s, address())) {\n                mstore(0x00, 0x9f03a026) // `UnauthorizedCallContext()`.\n                revert(0x1c, 0x04)\n            }\n        }\n        _;\n    }\n}"
			},
			"src/samples/callback/TokenCallbackHandler.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-empty-blocks */\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\";\n\n/**\n * Token callback handler.\n *   Handles supported tokens' callbacks, allowing account receiving these tokens.\n */\nabstract contract TokenCallbackHandler is IERC721Receiver, IERC1155Receiver {\n\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155Receiver.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] calldata,\n        uint256[] calldata,\n        bytes calldata\n    ) external pure override returns (bytes4) {\n        return IERC1155Receiver.onERC1155BatchReceived.selector;\n    }\n\n    function supportsInterface(bytes4 interfaceId) external view virtual override returns (bool) {\n        return\n            interfaceId == type(IERC721Receiver).interfaceId ||\n            interfaceId == type(IERC1155Receiver).interfaceId ||\n            interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"src/interfaces/PackedUserOperation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor\n * @param callData              - The method call to execute on this account.\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    bytes32 accountGasLimits;\n    uint256 preVerificationGas;\n    bytes32 gasFees;\n    bytes paymasterAndData;\n    bytes signature;\n}\n"
			},
			"src/interfaces/IEntryPoint.sol": {
				"content": "/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./PackedUserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\nimport \"./ISenderCreator.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request.\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\n     * @param sender        - The account that generates this request.\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\n     * @param nonce         - The nonce value from the request.\n     * @param success       - True if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\n     *                        validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * Account \"sender\" was deployed.\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender     - The account that is deployed\n     * @param factory    - The factory used to deploy this account (in the initCode)\n     * @param paymaster  - The paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the reverted \"callData\" call.\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the reverted call to \"postOp\".\n     */\n    event PostOpRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     */\n    event UserOperationPrefundTooLow(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce\n    );\n\n    /**\n     * An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n     * Any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n     * Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *                  so a failure can be attributed to the correct entity.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\n     * @param inner   - data from inner cought revert reason\n     * @dev note that inner is truncated to 2048 bytes\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    error PostOpReverted(bytes returnData);\n\n    /**\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\n     * @param aggregator The aggregator that failed to verify the signature\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    // Return value of getSenderAddress.\n    error SenderAddressResult(address sender);\n\n    // UserOps handled, per aggregator.\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        // Aggregator address\n        IAggregator aggregator;\n        // Aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * No signature aggregator is used.\n     * If any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops         - The operations to execute.\n     * @param beneficiary - The address to receive the fees.\n     */\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n     * @param beneficiary      - The address to receive the fees.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Generate a request Id - unique identifier for this request.\n     * The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n     * @param userOp - The user operation to generate the request ID for.\n     * @return hash the hash of this UserOperation\n     */\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Gas and return values during simulation.\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\n     * @param prefund          - The required prefund for this operation\n     * @param accountValidationData   - returned validationData from account.\n     * @param paymasterValidationData - return validationData from paymaster.\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        uint256 accountValidationData;\n        uint256 paymasterValidationData;\n        bytes paymasterContext;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * This method always revert, and returns the address in SenderAddressResult error.\n     * @notice this method cannot be used for EIP-7702 derived contracts.\n     *\n     * @param initCode - The constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    error DelegateAndRevert(bool success, bytes ret);\n\n    /**\n     * Helper method for dry-run testing.\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n     *  actual EntryPoint code is less convenient.\n     * @param target a target contract to make a delegatecall from entrypoint\n     * @param data data to pass to target in a delegatecall\n     */\n    function delegateAndRevert(address target, bytes calldata data) external;\n\n    /**\n     * @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\n     */\n    function senderCreator() external view returns (ISenderCreator);\n}\n"
			},
			"src/helpers/Helpers.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\n\n /*\n  * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n  * must return this value in case of signature failure, instead of revert.\n  */\nuint256 constant SIG_VALIDATION_FAILED = 1;\n\n\n/*\n * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n * return this value on success.\n */\nuint256 constant SIG_VALIDATION_SUCCESS = 0;\n\n\n/**\n * Returned data from validateUserOp.\n * validateUserOp returns a uint256, which is created by `_packedValidationData` and\n * parsed by `_parseValidationData`.\n * @param aggregator  - address(0) - The account validated the signature by itself.\n *                      address(1) - The account failed to validate the signature.\n *                      otherwise - This is an address of a signature aggregator that must\n *                                  be used to validate the signature.\n * @param validAfter  - This UserOp is valid only after this timestamp.\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n/**\n * Extract aggregator/sigFailed, validAfter, validUntil.\n * Also convert zero validUntil to type(uint48).max.\n * @param validationData - The packed validation data.\n * @return data - The unpacked in-memory validation data.\n */\nfunction _parseValidationData(\n    uint256 validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Helper to pack the return value for validateUserOp.\n * @param data - The ValidationData to pack.\n * @return the packed validation data.\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\n * @param sigFailed  - True for signature failure, false for success.\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n * @param validAfter - First timestamp this UserOperation is valid.\n * @return the packed validation data.\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ?  SIG_VALIDATION_FAILED : SIG_VALIDATION_SUCCESS) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n *\n * @param data - the calldata bytes array to perform keccak on.\n * @return ret - the keccak hash of the 'data' array.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n\n/**\n * The minimum of two numbers.\n * @param a - First number.\n * @param b - Second number.\n * @return - the minimum value.\n */\n    function min(uint256 a, uint256 b) pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n/**\n * standard solidity memory allocation finalization.\n * copied from solidity generated code\n * @param memPointer - The current memory pointer\n * @param allocationSize - Bytes allocated from memPointer.\n */\n    function finalizeAllocation(uint256 memPointer, uint256 allocationSize) pure {\n\n        assembly (\"memory-safe\"){\n            finalize_allocation(memPointer, allocationSize)\n\n            function finalize_allocation(memPtr, size) {\n                let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n                mstore(64, newFreePtr)\n            }\n\n            function round_up_to_mul_of_32(value) -> result {\n                result := and(add(value, 31), not(31))\n            }\n        }\n    }\n"
			},
			"src/core/BaseAccount.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-empty-blocks */\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"../utils/Exec.sol\";\nimport \"./UserOperationLib.sol\";\n\n/**\n * Basic account implementation.\n * This contract provides the basic logic for implementing the IAccount interface - validateUserOp\n * Specific account implementation should inherit it and provide the account-specific logic.\n */\nabstract contract BaseAccount is IAccount {\n    using UserOperationLib for PackedUserOperation;\n\n    struct Call {\n        address target;\n        uint256 value;\n        bytes data;\n    }\n\n    error ExecuteError(uint256 index, bytes error);\n\n    /**\n     * Return the account nonce.\n     * This method returns the next sequential nonce.\n     * For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\n     */\n    function getNonce() public view virtual returns (uint256) {\n        return entryPoint().getNonce(address(this), 0);\n    }\n\n    /**\n     * Return the entryPoint used by this account.\n     * Subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /**\n     * execute a single call from the account.\n     */\n    function execute(address target, uint256 value, bytes calldata data) virtual external {\n        _requireForExecute();\n\n        bool ok = Exec.call(target, value, data, gasleft());\n        if (!ok) {\n            Exec.revertWithReturnData();\n        }\n    }\n\n    /**\n     * execute a batch of calls.\n     * revert on the first call that fails.\n     * If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,\n     *  to mark the failing call index.\n     */\n    function executeBatch(Call[] calldata calls) virtual external {\n        _requireForExecute();\n\n        uint256 callsLength = calls.length;\n        for (uint256 i = 0; i < callsLength; i++) {\n            Call calldata call = calls[i];\n            bool ok = Exec.call(call.target, call.value, call.data, gasleft());\n            if (!ok) {\n                if (callsLength == 1) {\n                    Exec.revertWithReturnData();\n                } else {\n                    revert ExecuteError(i, Exec.getReturnData(0));\n                }\n            }\n        }\n    }\n\n    /// @inheritdoc IAccount\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external virtual override returns (uint256 validationData) {\n        _requireFromEntryPoint();\n        validationData = _validateSignature(userOp, userOpHash);\n        _validateNonce(userOp.nonce);\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * Ensure the request comes from the known entrypoint.\n     */\n    function _requireFromEntryPoint() internal view virtual {\n        require(\n            msg.sender == address(entryPoint()),\n            \"account: not from EntryPoint\"\n        );\n    }\n\n    function _requireForExecute() internal view virtual {\n        _requireFromEntryPoint();\n    }\n\n    /**\n     * Validate the signature is valid for this message.\n     * @param userOp          - Validate the userOp.signature field.\n     * @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\n     *                          (also hashes the entrypoint and chain id)\n     * @return validationData - Signature and time-range of this operation.\n     *                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n     *                                    otherwise, an address of an aggregator contract.\n     *                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          If the account doesn't use time-range, it is enough to return\n     *                          SIG_VALIDATION_FAILED value (1) for signature failure.\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash\n    ) internal virtual returns (uint256 validationData);\n\n    /**\n     * Validate the nonce of the UserOperation.\n     * This method may validate the nonce requirement of this account.\n     * e.g.\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n     *      `require(nonce < type(uint64).max)`\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\n     *      `require(nonce & type(uint64).max == 0)`\n     *\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n     * action is needed by the account itself.\n     *\n     * @param nonce to validate\n     *\n     * solhint-disable-next-line no-empty-blocks\n     */\n    function _validateNonce(uint256 nonce) internal view virtual {\n    }\n\n    /**\n     * Sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * SubClass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again).\n     * @param missingAccountFunds - The minimum value this method should send the entrypoint.\n     *                              This value MAY be zero, in case there is enough deposit,\n     *                              or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            (bool success,) = payable(msg.sender).call{\n                    value: missingAccountFunds\n                }(\"\");\n            (success);\n            // Ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n}\n"
			},
			"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"src/interfaces/ISenderCreator.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface ISenderCreator {\n    /**\n     * @dev Creates a new sender contract.\n     * @return sender Address of the newly created sender contract.\n     */\n    function createSender(bytes calldata initCode) external returns (address sender);\n\n    /**\n     * Use initCallData to initialize an EIP-7702 account.\n     * The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n     * Note: Can be called multiple times as long as an appropriate initCode is supplied\n     *\n     * @param sender - the 'sender' EIP-7702 account to be initialized.\n     * @param initCallData - the call data to be passed to the sender account call.\n     */\n    function initEip7702Sender(address sender, bytes calldata initCallData) external;\n}\n"
			},
			"src/interfaces/INonceManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     *\n     * @param key - the \"nonce key\" to increment the \"nonce sequence\" for.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"
			},
			"src/interfaces/IAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * Validate an aggregated signature.\n     * Reverts if the aggregated signature does not match the given list of operations.\n     * @param userOps   - An array of UserOperations to validate the signature for.\n     * @param signature - The aggregated signature.\n     */\n    function validateSignatures(\n        PackedUserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external;\n\n    /**\n     * Validate the signature of a single userOp.\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n     * the aggregator this account uses.\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp        - The userOperation received from the user.\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * Aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code to perform this aggregation.\n     * @param userOps              - An array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature - The aggregated signature.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"
			},
			"src/interfaces/IStakeManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    // Emitted when stake or unstake delay are modified.\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    // Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit         - The entity's deposit.\n     * @param staked          - True if this entity is staked.\n     * @param stake           - Actual amount of ether staked for this entity.\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\n     *      - 112 bit allows for 10^15 eth\n     *      - 48 bit for full timestamp\n     *      - 32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint256 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    // API struct used by getStakeInfo and simulateValidation.\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /**\n     * Get deposit info.\n     * @param account - The account to query.\n     * @return info   - Full deposit information of given account.\n     */\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /**\n     * Get account balance.\n     * @param account - The account to query.\n     * @return        - The deposit (for gas payment) of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable;\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"
			},
			"src/core/UserOperationLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"../helpers/Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            (uint256 maxPriorityFeePerGas, uint256 maxFeePerGas) = unpackUints(userOp.gasFees);\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    bytes32 internal constant PACKED_USEROP_TYPEHASH =\n    keccak256(\n        \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\"\n    );\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp.\n     */\n    function encode(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes memory ret) {\n        address sender = userOp.sender;\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = overrideInitCodeHash != 0 ? overrideInitCodeHash : calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        bytes32 gasFees = userOp.gasFees;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            UserOperationLib.PACKED_USEROP_TYPEHASH,\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas, gasFees,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackUints(\n        bytes32 packed\n    ) internal pure returns (uint256 high128, uint256 low128) {\n        return (unpackHigh128(packed), unpackLow128(packed));\n    }\n\n    // Unpack just the high 128-bits from a packed value\n    function unpackHigh128(bytes32 packed) internal pure returns (uint256) {\n        return uint256(packed) >> 128;\n    }\n\n    // Unpack just the low 128-bits from a packed value\n    function unpackLow128(bytes32 packed) internal pure returns (uint256) {\n        return uint128(uint256(packed));\n    }\n\n    function unpackMaxPriorityFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.gasFees);\n    }\n\n    function unpackMaxFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.gasFees);\n    }\n\n    function unpackVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.accountGasLimits);\n    }\n\n    function unpackCallGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.accountGasLimits);\n    }\n\n    function unpackPaymasterVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET]));\n    }\n\n    function unpackPostOpGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing.\n     */\n    function hash(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp, overrideInitCodeHash));\n    }\n}\n"
			},
			"src/utils/Exec.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n// solhint-disable no-inline-assembly\n\n/**\n * Utility functions helpful when making different kinds of contract calls in Solidity.\n */\nlibrary Exec {\n\n    function call(\n        address to,\n        uint256 value,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := call(txGas, to, value, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function staticcall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal view returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := staticcall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    function delegateCall(\n        address to,\n        bytes memory data,\n        uint256 txGas\n    ) internal returns (bool success) {\n        assembly (\"memory-safe\") {\n            success := delegatecall(txGas, to, add(data, 0x20), mload(data), 0, 0)\n        }\n    }\n\n    // get returned data from last call or delegateCall\n    // maxLen - maximum length of data to return, or zero, for the full length\n    function getReturnData(uint256 maxLen) internal pure returns (bytes memory returnData) {\n        assembly (\"memory-safe\") {\n            let len := returndatasize()\n            if gt(maxLen,0) {\n                if gt(len, maxLen) {\n                    len := maxLen\n                }\n            }\n            let ptr := mload(0x40)\n            mstore(0x40, add(ptr, add(len, 0x20)))\n            mstore(ptr, len)\n            returndatacopy(add(ptr, 0x20), 0, len)\n            returnData := ptr\n        }\n    }\n\n    // revert with explicit byte array (probably reverted info from call)\n    function revertWithData(bytes memory returnData) internal pure {\n        assembly (\"memory-safe\") {\n            revert(add(returnData, 32), mload(returnData))\n        }\n    }\n\n    // Propagate revert data from last call\n    function revertWithReturnData() internal pure {\n        revertWithData(getReturnData(0));\n    }\n}\n"
			},
			"src/interfaces/IAccount.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"./PackedUserOperation.sol\";\n\ninterface IAccount {\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp              - The operation that is about to be executed.\n     * @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n     *                              This is the minimum amount to transfer to the sender(entryPoint) to be\n     *                              able to make the call. The excess is left as a deposit in the entrypoint\n     *                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n     *                              In case there is a paymaster in the request (or the current deposit is high\n     *                              enough), this value will be zero.\n     * @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n     *                              `_unpackValidationData` to encode and decode.\n     *                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n     *                                 otherwise, an address of an \"aggregator\" contract.\n     *                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n     *                              <6-byte> validAfter - First timestamp this operation is valid\n     *                                                    If an account doesn't use time-range, it is enough to\n     *                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *                              Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external returns (uint256 validationData);\n}\n"
			},
			"src/external/solady/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Contract for EIP-712 typed structured data hashing and signing.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/EIP712.sol)\n/// @author Modified from Solbase (https://github.com/Sol-DAO/solbase/blob/main/src/utils/EIP712.sol)\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol)\n///\n/// @dev Note, this implementation:\n/// - Uses `address(this)` for the `verifyingContract` field.\n/// - Does NOT use the optional EIP-712 salt.\n/// - Does NOT use any EIP-712 extensions.\n/// This is for simplicity and to save gas.\n/// If you need to customize, please fork / modify accordingly.\nabstract contract EIP712 {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                  CONSTANTS AND IMMUTABLES                  */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`.\n    bytes32 internal constant _DOMAIN_TYPEHASH =\n        0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f;\n\n    uint256 private immutable _cachedThis;\n    uint256 private immutable _cachedChainId;\n    bytes32 private immutable _cachedNameHash;\n    bytes32 private immutable _cachedVersionHash;\n    bytes32 private immutable _cachedDomainSeparator;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                        CONSTRUCTOR                         */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Cache the hashes for cheaper runtime gas costs.\n    /// In the case of upgradeable contracts (i.e. proxies),\n    /// or if the chain id changes due to a hard fork,\n    /// the domain separator will be seamlessly calculated on-the-fly.\n    constructor() {\n        _cachedThis = uint256(uint160(address(this)));\n        _cachedChainId = block.chainid;\n\n        string memory name;\n        string memory version;\n        if (!_domainNameAndVersionMayChange()) (name, version) = _domainNameAndVersion();\n        bytes32 nameHash = _domainNameAndVersionMayChange() ? bytes32(0) : keccak256(bytes(name));\n        bytes32 versionHash =\n            _domainNameAndVersionMayChange() ? bytes32(0) : keccak256(bytes(version));\n        _cachedNameHash = nameHash;\n        _cachedVersionHash = versionHash;\n\n        bytes32 separator;\n        if (!_domainNameAndVersionMayChange()) {\n            /// @solidity memory-safe-assembly\n            assembly {\n                let m := mload(0x40) // Load the free memory pointer.\n                mstore(m, _DOMAIN_TYPEHASH)\n                mstore(add(m, 0x20), nameHash)\n                mstore(add(m, 0x40), versionHash)\n                mstore(add(m, 0x60), chainid())\n                mstore(add(m, 0x80), address())\n                separator := keccak256(m, 0xa0)\n            }\n        }\n        _cachedDomainSeparator = separator;\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                   FUNCTIONS TO OVERRIDE                    */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Please override this function to return the domain name and version.\n    /// ```\n    ///     function _domainNameAndVersion()\n    ///         internal\n    ///         pure\n    ///         virtual\n    ///         returns (string memory name, string memory version)\n    ///     {\n    ///         name = \"Solady\";\n    ///         version = \"1\";\n    ///     }\n    /// ```\n    ///\n    /// Note: If the returned result may change after the contract has been deployed,\n    /// you must override `_domainNameAndVersionMayChange()` to return true.\n    function _domainNameAndVersion()\n        internal\n        view\n        virtual\n        returns (string memory name, string memory version);\n\n    /// @dev Returns if `_domainNameAndVersion()` may change\n    /// after the contract has been deployed (i.e. after the constructor).\n    /// Default: false.\n    function _domainNameAndVersionMayChange() internal pure virtual returns (bool result) {}\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     HASHING OPERATIONS                     */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the EIP-712 domain separator.\n    function _domainSeparator() internal view virtual returns (bytes32 separator) {\n        if (_domainNameAndVersionMayChange()) {\n            separator = _buildDomainSeparator();\n        } else {\n            separator = _cachedDomainSeparator;\n            if (_cachedDomainSeparatorInvalidated()) separator = _buildDomainSeparator();\n        }\n    }\n\n    /// @dev Returns the hash of the fully encoded EIP-712 message for this domain,\n    /// given `structHash`, as defined in\n    /// https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct.\n    ///\n    /// The hash can be used together with {ECDSA-recover} to obtain the signer of a message:\n    /// ```\n    ///     bytes32 digest = _hashTypedData(keccak256(abi.encode(\n    ///         keccak256(\"Mail(address to,string contents)\"),\n    ///         mailTo,\n    ///         keccak256(bytes(mailContents))\n    ///     )));\n    ///     address signer = ECDSA.recover(digest, signature);\n    /// ```\n    function _hashTypedData(bytes32 structHash) internal view virtual returns (bytes32 digest) {\n        // We will use `digest` to store the domain separator to save a bit of gas.\n        if (_domainNameAndVersionMayChange()) {\n            digest = _buildDomainSeparator();\n        } else {\n            digest = _cachedDomainSeparator;\n            if (_cachedDomainSeparatorInvalidated()) digest = _buildDomainSeparator();\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Compute the digest.\n            mstore(0x00, 0x1901000000000000) // Store \"\\x19\\x01\".\n            mstore(0x1a, digest) // Store the domain separator.\n            mstore(0x3a, structHash) // Store the struct hash.\n            digest := keccak256(0x18, 0x42)\n            // Restore the part of the free memory slot that was overwritten.\n            mstore(0x3a, 0)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                    EIP-5267 OPERATIONS                     */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev See: https://eips.ethereum.org/EIPS/eip-5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        fields = hex\"0f\"; // `0b01111`.\n        (name, version) = _domainNameAndVersion();\n        chainId = block.chainid;\n        verifyingContract = address(this);\n        salt = salt; // `bytes32(0)`.\n        extensions = extensions; // `new uint256[](0)`.\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                      PRIVATE HELPERS                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns the EIP-712 domain separator.\n    function _buildDomainSeparator() private view returns (bytes32 separator) {\n        // We will use `separator` to store the name hash to save a bit of gas.\n        bytes32 versionHash;\n        if (_domainNameAndVersionMayChange()) {\n            (string memory name, string memory version) = _domainNameAndVersion();\n            separator = keccak256(bytes(name));\n            versionHash = keccak256(bytes(version));\n        } else {\n            separator = _cachedNameHash;\n            versionHash = _cachedVersionHash;\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Load the free memory pointer.\n            mstore(m, _DOMAIN_TYPEHASH)\n            mstore(add(m, 0x20), separator) // Name hash.\n            mstore(add(m, 0x40), versionHash)\n            mstore(add(m, 0x60), chainid())\n            mstore(add(m, 0x80), address())\n            separator := keccak256(m, 0xa0)\n        }\n    }\n\n    /// @dev Returns if the cached domain separator has been invalidated.\n    function _cachedDomainSeparatorInvalidated() private view returns (bool result) {\n        uint256 cachedChainId = _cachedChainId;\n        uint256 cachedThis = _cachedThis;\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := iszero(and(eq(chainid(), cachedChainId), eq(address(), cachedThis)))\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"@openzeppelin/=src/external/openzeppelin-contracts/"
			]
		}
	},
	"output": {
		"contracts": {
			"src/common/BaseCordylineAccount.sol": {
				"BaseCordylineAccount": {
					"abi": [
						{
							"inputs": [],
							"name": "ArrayLengthMismatch",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "error",
									"type": "bytes"
								}
							],
							"name": "ExecuteError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UpgradeFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddressNotAllowed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "addDeposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entryPoint",
							"outputs": [
								{
									"internalType": "contract IEntryPoint",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "func",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "dest",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "func",
									"type": "bytes[]"
								}
							],
							"name": "executeBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct BaseAccount.Call[]",
									"name": "calls",
									"type": "tuple[]"
								}
							],
							"name": "executeBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "dest",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "value",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes[]",
									"name": "func",
									"type": "bytes[]"
								}
							],
							"name": "executeBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "initCode",
									"type": "bytes"
								}
							],
							"name": "performCreate",
							"outputs": [
								{
									"internalType": "address",
									"name": "createdAddr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "initCode",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "performCreate2",
							"outputs": [
								{
									"internalType": "address",
									"name": "createdAddr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "missingAccountFunds",
									"type": "uint256"
								}
							],
							"name": "validateUserOp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawDepositTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"UnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized call context."
								}
							],
							"UpgradeFailed()": [
								{
									"details": "The upgrade failed."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the proxy's implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "See: https://eips.ethereum.org/EIPS/eip-5267"
							},
							"execute(address,uint256,bytes)": {
								"params": {
									"dest": "The target of the transaction.",
									"func": "The transaction's calldata.",
									"value": "The amount of wei sent in the transaction."
								}
							},
							"executeBatch(address[],bytes[])": {
								"params": {
									"dest": "An array of the targets for each transaction in the sequence.",
									"func": "An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction."
								}
							},
							"executeBatch(address[],uint256[],bytes[])": {
								"params": {
									"dest": "An array of the targets for each transaction in the sequence.",
									"func": "An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction.",
									"value": "An array of value for each transaction in the sequence."
								}
							},
							"getDeposit()": {
								"returns": {
									"_0": "The current account deposit."
								}
							},
							"getMessageHash(bytes)": {
								"params": {
									"message": "Message that should be hashed."
								},
								"returns": {
									"_0": "The replay-safe message hash."
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is a valid ERC-1271 signature from the owner (if the owner is a contract).",
								"params": {
									"hash": "Hash of the data to be signed.",
									"signature": "Signature byte array associated with the data."
								},
								"returns": {
									"_0": "Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`."
								}
							},
							"performCreate(uint256,bytes)": {
								"details": "Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract.     5. If creation failed (the address returned is zero), revert with CreateFailed().",
								"params": {
									"initCode": "The initCode to deploy.",
									"value": "The value to send to the new contract constructor."
								},
								"returns": {
									"createdAddr": "The created contract address."
								}
							},
							"performCreate2(uint256,bytes,bytes32)": {
								"details": "Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract using Create2 with the passed salt parameter.     5. If creation failed (the address returned is zero), revert with CreateFailed().",
								"params": {
									"initCode": "The initCode to deploy.",
									"salt": "The salt to use for the create2 operation.",
									"value": "The value to send to the new contract constructor."
								},
								"returns": {
									"createdAddr": "The created contract address."
								}
							},
							"proxiableUUID()": {
								"details": "Returns the storage slot used by the implementation, as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822). Note: The `notDelegated` modifier prevents accidental upgrades to an implementation that is a proxy contract."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrades the proxy's implementation to `newImplementation`. Emits a {Upgraded} event. Note: Passing in empty `data` skips the delegatecall to `newImplementation`."
							},
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
								"details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
								"params": {
									"missingAccountFunds": "- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.",
									"userOp": "- The operation that is about to be executed.",
									"userOpHash": "- Hash of the user's request data. can be used as the basis for signature."
								},
								"returns": {
									"validationData": "      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"aggregator\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."
								}
							},
							"withdrawDepositTo(address,uint256)": {
								"params": {
									"amount": "Amount to withdraw.",
									"withdrawAddress": "Target to send to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addDeposit()": "4a58db19",
							"eip712Domain()": "84b0196e",
							"entryPoint()": "b0d691fe",
							"execute(address,uint256,bytes)": "b61d27f6",
							"executeBatch((address,uint256,bytes)[])": "34fcd5be",
							"executeBatch(address[],bytes[])": "18dfb3c7",
							"executeBatch(address[],uint256[],bytes[])": "47e1da2a",
							"getDeposit()": "c399ec88",
							"getMessageHash(bytes)": "0a1028c4",
							"getNonce()": "d087d288",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"performCreate(uint256,bytes)": "4c8c9ea1",
							"performCreate2(uint256,bytes,bytes32)": "4847be6f",
							"proxiableUUID()": "52d1902d",
							"supportsInterface(bytes4)": "01ffc9a7",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c",
							"withdrawDepositTo(address,uint256)": "4d44560d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"ExecuteError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UpgradeFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"func\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BaseAccount.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dest\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"func\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"performCreate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"createdAddr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"performCreate2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"createdAddr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDepositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"UnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized call context.\"}],\"UpgradeFailed()\":[{\"details\":\"The upgrade failed.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the proxy's implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See: https://eips.ethereum.org/EIPS/eip-5267\"},\"execute(address,uint256,bytes)\":{\"params\":{\"dest\":\"The target of the transaction.\",\"func\":\"The transaction's calldata.\",\"value\":\"The amount of wei sent in the transaction.\"}},\"executeBatch(address[],bytes[])\":{\"params\":{\"dest\":\"An array of the targets for each transaction in the sequence.\",\"func\":\"An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction.\"}},\"executeBatch(address[],uint256[],bytes[])\":{\"params\":{\"dest\":\"An array of the targets for each transaction in the sequence.\",\"func\":\"An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with corresponding elements representing the parameters for each transaction.\",\"value\":\"An array of value for each transaction in the sequence.\"}},\"getDeposit()\":{\"returns\":{\"_0\":\"The current account deposit.\"}},\"getMessageHash(bytes)\":{\"params\":{\"message\":\"Message that should be hashed.\"},\"returns\":{\"_0\":\"The replay-safe message hash.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is a valid ERC-1271 signature from the owner (if the owner is a contract).\",\"params\":{\"hash\":\"Hash of the data to be signed.\",\"signature\":\"Signature byte array associated with the data.\"},\"returns\":{\"_0\":\"Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`.\"}},\"performCreate(uint256,bytes)\":{\"details\":\"Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract.     5. If creation failed (the address returned is zero), revert with CreateFailed().\",\"params\":{\"initCode\":\"The initCode to deploy.\",\"value\":\"The value to send to the new contract constructor.\"},\"returns\":{\"createdAddr\":\"The created contract address.\"}},\"performCreate2(uint256,bytes,bytes32)\":{\"details\":\"Assembly procedure:     1. Load the free memory pointer.     2. Get the initCode length.     3. Copy the initCode from callata to memory at the free memory pointer.     4. Create the contract using Create2 with the passed salt parameter.     5. If creation failed (the address returned is zero), revert with CreateFailed().\",\"params\":{\"initCode\":\"The initCode to deploy.\",\"salt\":\"The salt to use for the create2 operation.\",\"value\":\"The value to send to the new contract constructor.\"},\"returns\":{\"createdAddr\":\"The created contract address.\"}},\"proxiableUUID()\":{\"details\":\"Returns the storage slot used by the implementation, as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822). Note: The `notDelegated` modifier prevents accidental upgrades to an implementation that is a proxy contract.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrades the proxy's implementation to `newImplementation`. Emits a {Upgraded} event. Note: Passing in empty `data` skips the delegatecall to `newImplementation`.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawDepositTo(address,uint256)\":{\"params\":{\"amount\":\"Amount to withdraw.\",\"withdrawAddress\":\"Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"Deposit more funds for this account in the entry point.\"},\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Execute a transaction. This may only be called directly by an owner or by the entry point via a user operation signed by an owner.\"},\"executeBatch((address,uint256,bytes)[])\":{\"notice\":\"execute a batch of calls. revert on the first call that fails. If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,  to mark the failing call index.\"},\"executeBatch(address[],bytes[])\":{\"notice\":\"Execute a sequence of transactions.\"},\"executeBatch(address[],uint256[],bytes[])\":{\"notice\":\"Execute a sequence of transactions.\"},\"getDeposit()\":{\"notice\":\"Check current account deposit in the entry point.\"},\"getMessageHash(bytes)\":{\"notice\":\"Returns the replay-safe hash of a message that can be signed by owners.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"performCreate(uint256,bytes)\":{\"notice\":\"Creates a contract.\"},\"performCreate2(uint256,bytes,bytes32)\":{\"notice\":\"Creates a contract using create2 deterministic deployment.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"},\"withdrawDepositTo(address,uint256)\":{\"notice\":\"Withdraw value from the account's deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/common/BaseCordylineAccount.sol\":\"BaseCordylineAccount\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/common/BaseCordylineAccount.sol\":{\"keccak256\":\"0x270c3406882ff2064549d88277fd18dfae01a1976f2a335173569cd1d0724b9a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://807d5620c34131e5da329078b39a4745c904c7da6814100f36ce31051eca0567\",\"dweb:/ipfs/QmZCAxrWifDSNQVDuJfLMYoV3xEjnp2Mut4SYfr5b9PWHC\"]},\"src/common/ERC1271.sol\":{\"keccak256\":\"0xe19b6b0d53965dd5957e3396ce7207b4f21b876db7a2719843eea510db5d5e64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08432003263c8f4703be0f2af08e47f136d1a94ba3338538505f73651fd85b3c\",\"dweb:/ipfs/QmZh5MXTFiCibKUFu53jj1yYmWLds83sPQh5kY9urjVZi3\"]},\"src/core/BaseAccount.sol\":{\"keccak256\":\"0x071e38cf697bedbfe021955879277620ff763ecca1a1143ce14792e8c86c6d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d55468ffadcec140a1dc853fac153de985d7335655e70935b9d28e148a495ab\",\"dweb:/ipfs/QmXMPLx92TLCDRtNTdmTLSWBNbPVmSGeN9im2zsK9P9p4R\"]},\"src/core/UserOperationLib.sol\":{\"keccak256\":\"0xf332e1963894581e6217928dc162c13b4fdf4d3f996d9a4e365c104389a664d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f25c19e76484af2581d13bad59b32ca9befd39fefc001bc76d30132b5d9b27a\",\"dweb:/ipfs/QmZq1P6pk5KWKpPp29X4tvTKzSu6URBNJMrgsPJzrSdpvw\"]},\"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/external/solady/EIP712.sol\":{\"keccak256\":\"0xc256c8769c2aa92fa192d21f5f4bd4387dfc6ef095d1a18476a3c6ea2e43f4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6386477e8f74d89e68071c000bd98ebdab9f0ad154615b84492ff94d17a783\",\"dweb:/ipfs/QmZMX8Pivh7sJxX72pjPn2PcMREcRz1AM4oKNNgPf6bndK\"]},\"src/external/solady/UUPSUpgradeable.sol\":{\"keccak256\":\"0x46d39579c440757e6e20ed164ca4409bd8eb652d506d48a466755c165d27f8c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c21148774462900d0929d09a2d56420a6850065d91ac001c10887ee796074ac\",\"dweb:/ipfs/QmNT12cuvaqf1puHQYAJeHFoiYBfmgKKbkLkkW7ETEkjRk\"]},\"src/helpers/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"src/interfaces/IAccount.sol\":{\"keccak256\":\"0x1030b464b49ce80da46b5b6c9af357c2d526f308de61391db6a4ec767d33b864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671945f8e18e7305797312b5a209506be3c9bd1d9b9b561c1e8863bccfa61319\",\"dweb:/ipfs/QmVanLK5Aenrb7J94doiE1C9oHwo86jvv8NrpDeNHwvnii\"]},\"src/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"src/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"src/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"src/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"src/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"src/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xd91a14caef87567866880b0f01955dfa50b4bc593dcecfcb38be41d98e6b9662\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f20ba13333688a9001c5426db032e8251bb1c76087b654e5421f478f17fd26b\",\"dweb:/ipfs/QmXFbor8LktEfWcRn83F1j1T8Sc319PM24KYR9fyTaS43x\"]},\"src/utils/Exec.sol\":{\"keccak256\":\"0x9c724ee22011193ea7f92d3c3c467ee6aa27139d3ddc225c7f1254d241e6ccdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96cc246fe944a212cbb9ba82065b2d380ec80954fcdb5d8d982b476bd5b72868\",\"dweb:/ipfs/QmZ25eFixEhukbfWGz5TBjsp7YohxUqD5i2rxhaghfvHt8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addDeposit()": {
								"notice": "Deposit more funds for this account in the entry point."
							},
							"entryPoint()": {
								"notice": "Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account."
							},
							"execute(address,uint256,bytes)": {
								"notice": "Execute a transaction. This may only be called directly by an owner or by the entry point via a user operation signed by an owner."
							},
							"executeBatch((address,uint256,bytes)[])": {
								"notice": "execute a batch of calls. revert on the first call that fails. If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,  to mark the failing call index."
							},
							"executeBatch(address[],bytes[])": {
								"notice": "Execute a sequence of transactions."
							},
							"executeBatch(address[],uint256[],bytes[])": {
								"notice": "Execute a sequence of transactions."
							},
							"getDeposit()": {
								"notice": "Check current account deposit in the entry point."
							},
							"getMessageHash(bytes)": {
								"notice": "Returns the replay-safe hash of a message that can be signed by owners."
							},
							"getNonce()": {
								"notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
							},
							"performCreate(uint256,bytes)": {
								"notice": "Creates a contract."
							},
							"performCreate2(uint256,bytes,bytes32)": {
								"notice": "Creates a contract using create2 deterministic deployment."
							},
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
								"notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
							},
							"withdrawDepositTo(address,uint256)": {
								"notice": "Withdraw value from the account's deposit."
							}
						},
						"version": 1
					}
				}
			},
			"src/common/ERC1271.sol": {
				"ERC1271": {
					"abi": [
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "See: https://eips.ethereum.org/EIPS/eip-5267"
							},
							"getMessageHash(bytes)": {
								"params": {
									"message": "Message that should be hashed."
								},
								"returns": {
									"_0": "The replay-safe message hash."
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is a valid ERC-1271 signature from the owner (if the owner is a contract).",
								"params": {
									"hash": "Hash of the data to be signed.",
									"signature": "Signature byte array associated with the data."
								},
								"returns": {
									"_0": "Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`."
								}
							}
						},
						"stateVariables": {
							"_1271_MAGIC_VALUE_SUCCESS": {
								"details": "bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e",
							"getMessageHash(bytes)": "0a1028c4",
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See: https://eips.ethereum.org/EIPS/eip-5267\"},\"getMessageHash(bytes)\":{\"params\":{\"message\":\"Message that should be hashed.\"},\"returns\":{\"_0\":\"The replay-safe message hash.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is a valid ERC-1271 signature from the owner (if the owner is a contract).\",\"params\":{\"hash\":\"Hash of the data to be signed.\",\"signature\":\"Signature byte array associated with the data.\"},\"returns\":{\"_0\":\"Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`.\"}}},\"stateVariables\":{\"_1271_MAGIC_VALUE_SUCCESS\":{\"details\":\"bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getMessageHash(bytes)\":{\"notice\":\"Returns the replay-safe hash of a message that can be signed by owners.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/common/ERC1271.sol\":\"ERC1271\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/common/ERC1271.sol\":{\"keccak256\":\"0xe19b6b0d53965dd5957e3396ce7207b4f21b876db7a2719843eea510db5d5e64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08432003263c8f4703be0f2af08e47f136d1a94ba3338538505f73651fd85b3c\",\"dweb:/ipfs/QmZh5MXTFiCibKUFu53jj1yYmWLds83sPQh5kY9urjVZi3\"]},\"src/external/solady/EIP712.sol\":{\"keccak256\":\"0xc256c8769c2aa92fa192d21f5f4bd4387dfc6ef095d1a18476a3c6ea2e43f4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6386477e8f74d89e68071c000bd98ebdab9f0ad154615b84492ff94d17a783\",\"dweb:/ipfs/QmZMX8Pivh7sJxX72pjPn2PcMREcRz1AM4oKNNgPf6bndK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getMessageHash(bytes)": {
								"notice": "Returns the replay-safe hash of a message that can be signed by owners."
							}
						},
						"version": 1
					}
				}
			},
			"src/core/BaseAccount.sol": {
				"BaseAccount": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "error",
									"type": "bytes"
								}
							],
							"name": "ExecuteError",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "entryPoint",
							"outputs": [
								{
									"internalType": "contract IEntryPoint",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct BaseAccount.Call[]",
									"name": "calls",
									"type": "tuple[]"
								}
							],
							"name": "executeBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "missingAccountFunds",
									"type": "uint256"
								}
							],
							"name": "validateUserOp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
								"details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
								"params": {
									"missingAccountFunds": "- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.",
									"userOp": "- The operation that is about to be executed.",
									"userOpHash": "- Hash of the user's request data. can be used as the basis for signature."
								},
								"returns": {
									"validationData": "      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"aggregator\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"entryPoint()": "b0d691fe",
							"execute(address,uint256,bytes)": "b61d27f6",
							"executeBatch((address,uint256,bytes)[])": "34fcd5be",
							"getNonce()": "d087d288",
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"ExecuteError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct BaseAccount.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"execute a single call from the account.\"},\"executeBatch((address,uint256,bytes)[])\":{\"notice\":\"execute a batch of calls. revert on the first call that fails. If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,  to mark the failing call index.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"notice\":\"Basic account implementation. This contract provides the basic logic for implementing the IAccount interface - validateUserOp Specific account implementation should inherit it and provide the account-specific logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/core/BaseAccount.sol\":{\"keccak256\":\"0x071e38cf697bedbfe021955879277620ff763ecca1a1143ce14792e8c86c6d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d55468ffadcec140a1dc853fac153de985d7335655e70935b9d28e148a495ab\",\"dweb:/ipfs/QmXMPLx92TLCDRtNTdmTLSWBNbPVmSGeN9im2zsK9P9p4R\"]},\"src/core/UserOperationLib.sol\":{\"keccak256\":\"0xf332e1963894581e6217928dc162c13b4fdf4d3f996d9a4e365c104389a664d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f25c19e76484af2581d13bad59b32ca9befd39fefc001bc76d30132b5d9b27a\",\"dweb:/ipfs/QmZq1P6pk5KWKpPp29X4tvTKzSu6URBNJMrgsPJzrSdpvw\"]},\"src/helpers/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"src/interfaces/IAccount.sol\":{\"keccak256\":\"0x1030b464b49ce80da46b5b6c9af357c2d526f308de61391db6a4ec767d33b864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671945f8e18e7305797312b5a209506be3c9bd1d9b9b561c1e8863bccfa61319\",\"dweb:/ipfs/QmVanLK5Aenrb7J94doiE1C9oHwo86jvv8NrpDeNHwvnii\"]},\"src/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"src/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"src/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"src/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"src/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]},\"src/utils/Exec.sol\":{\"keccak256\":\"0x9c724ee22011193ea7f92d3c3c467ee6aa27139d3ddc225c7f1254d241e6ccdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96cc246fe944a212cbb9ba82065b2d380ec80954fcdb5d8d982b476bd5b72868\",\"dweb:/ipfs/QmZ25eFixEhukbfWGz5TBjsp7YohxUqD5i2rxhaghfvHt8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"entryPoint()": {
								"notice": "Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account."
							},
							"execute(address,uint256,bytes)": {
								"notice": "execute a single call from the account."
							},
							"executeBatch((address,uint256,bytes)[])": {
								"notice": "execute a batch of calls. revert on the first call that fails. If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,  to mark the failing call index."
							},
							"getNonce()": {
								"notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
							},
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
								"notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
							}
						},
						"notice": "Basic account implementation. This contract provides the basic logic for implementing the IAccount interface - validateUserOp Specific account implementation should inherit it and provide the account-specific logic.",
						"version": 1
					}
				}
			},
			"src/core/UserOperationLib.sol": {
				"UserOperationLib": {
					"abi": [
						{
							"inputs": [],
							"name": "PAYMASTER_DATA_OFFSET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAYMASTER_POSTOP_GAS_OFFSET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAYMASTER_VALIDATION_GAS_OFFSET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/core/UserOperationLib.sol\":287:5053  library UserOperationLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/core/UserOperationLib.sol\":287:5053  library UserOperationLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x25093e1b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xb29a8ff4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xede31502\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"src/core/UserOperationLib.sol\":385:441  uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36 */\n    tag_2:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/core/UserOperationLib.sol\":319:379  uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20 */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/core/UserOperationLib.sol\":447:497  uint256 public constant PAYMASTER_DATA_OFFSET = 52 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/core/UserOperationLib.sol\":385:441  uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36 */\n    tag_6:\n        /* \"src/core/UserOperationLib.sol\":439:441  36 */\n      0x24\n        /* \"src/core/UserOperationLib.sol\":385:441  uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36 */\n      dup2\n      jump\t// out\n        /* \"src/core/UserOperationLib.sol\":319:379  uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20 */\n    tag_10:\n        /* \"src/core/UserOperationLib.sol\":377:379  20 */\n      0x14\n        /* \"src/core/UserOperationLib.sol\":319:379  uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20 */\n      dup2\n      jump\t// out\n        /* \"src/core/UserOperationLib.sol\":447:497  uint256 public constant PAYMASTER_DATA_OFFSET = 52 */\n    tag_13:\n        /* \"src/core/UserOperationLib.sol\":495:497  52 */\n      0x34\n        /* \"src/core/UserOperationLib.sol\":447:497  uint256 public constant PAYMASTER_DATA_OFFSET = 52 */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_15:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:216   */\n    tag_16:\n        /* \"#utility.yul\":185:209   */\n      tag_20\n        /* \"#utility.yul\":203:208   */\n      dup2\n        /* \"#utility.yul\":185:209   */\n      tag_15\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":180:183   */\n      dup3\n        /* \"#utility.yul\":173:210   */\n      mstore\n        /* \"#utility.yul\":90:216   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:460   */\n    tag_8:\n        /* \"#utility.yul\":323:327   */\n      0x00\n        /* \"#utility.yul\":361:363   */\n      0x20\n        /* \"#utility.yul\":350:359   */\n      dup3\n        /* \"#utility.yul\":346:364   */\n      add\n        /* \"#utility.yul\":338:364   */\n      swap1\n      pop\n        /* \"#utility.yul\":374:453   */\n      tag_22\n        /* \"#utility.yul\":450:451   */\n      0x00\n        /* \"#utility.yul\":439:448   */\n      dup4\n        /* \"#utility.yul\":435:452   */\n      add\n        /* \"#utility.yul\":426:432   */\n      dup5\n        /* \"#utility.yul\":374:453   */\n      tag_16\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":222:460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122002dc84df22ddf5fa7a0f986d8a8a26a75a0a408c90d75de36f9066a1543aaed464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61010a61004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106046575f3560e01c806325093e1b14604a578063b29a8ff4146064578063ede3150214607e575b5f5ffd5b60506098565b604051605b919060bd565b60405180910390f35b606a609d565b6040516075919060bd565b60405180910390f35b608460a2565b604051608f919060bd565b60405180910390f35b602481565b601481565b603481565b5f819050919050565b60b78160a7565b82525050565b5f60208201905060ce5f83018460b0565b9291505056fea264697066735822122002dc84df22ddf5fa7a0f986d8a8a26a75a0a408c90d75de36f9066a1543aaed464736f6c634300081e0033",
							"opcodes": "PUSH2 0x10A PUSH2 0x4D PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x41 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4A JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x64 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x7E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x50 PUSH1 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5B SWAP2 SWAP1 PUSH1 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6A PUSH1 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x75 SWAP2 SWAP1 PUSH1 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8F SWAP2 SWAP1 PUSH1 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x34 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB7 DUP2 PUSH1 0xA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xCE PUSH0 DUP4 ADD DUP5 PUSH1 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDC DUP5 0xDF 0x22 0xDD CREATE2 STATICCALL PUSH27 0xF986D8A8A26A75A0A408C90D75DE36F9066A1543AAED464736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "287:4766:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PAYMASTER_DATA_OFFSET_724": {
									"entryPoint": 162,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAYMASTER_POSTOP_GAS_OFFSET_721": {
									"entryPoint": 152,
									"id": 721,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAYMASTER_VALIDATION_GAS_OFFSET_718": {
									"entryPoint": 157,
									"id": 718,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:463:19",
										"nodeType": "YulBlock",
										"src": "0:463:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:19",
													"nodeType": "YulBlock",
													"src": "52:32:19",
													"statements": [
														{
															"nativeSrc": "62:16:19",
															"nodeType": "YulAssignment",
															"src": "62:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:19",
																"nodeType": "YulIdentifier",
																"src": "73:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:19",
														"nodeType": "YulTypedName",
														"src": "34:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:19",
														"nodeType": "YulTypedName",
														"src": "44:7:19",
														"type": ""
													}
												],
												"src": "7:77:19"
											},
											{
												"body": {
													"nativeSrc": "163:53:19",
													"nodeType": "YulBlock",
													"src": "163:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "180:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "180:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "203:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "203:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "185:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "185:17:19"
																		},
																		"nativeSrc": "185:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "185:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "173:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "173:6:19"
																},
																"nativeSrc": "173:37:19",
																"nodeType": "YulFunctionCall",
																"src": "173:37:19"
															},
															"nativeSrc": "173:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "173:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nativeSrc": "90:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "151:5:19",
														"nodeType": "YulTypedName",
														"src": "151:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "158:3:19",
														"nodeType": "YulTypedName",
														"src": "158:3:19",
														"type": ""
													}
												],
												"src": "90:126:19"
											},
											{
												"body": {
													"nativeSrc": "328:132:19",
													"nodeType": "YulBlock",
													"src": "328:132:19",
													"statements": [
														{
															"nativeSrc": "338:26:19",
															"nodeType": "YulAssignment",
															"src": "338:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "350:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "350:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "361:2:19",
																		"nodeType": "YulLiteral",
																		"src": "361:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "346:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "346:3:19"
																},
																"nativeSrc": "346:18:19",
																"nodeType": "YulFunctionCall",
																"src": "346:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "338:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "338:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "426:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "426:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "439:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "439:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "450:1:19",
																				"nodeType": "YulLiteral",
																				"src": "450:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "435:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:19"
																		},
																		"nativeSrc": "435:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "435:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nativeSrc": "374:51:19",
																	"nodeType": "YulIdentifier",
																	"src": "374:51:19"
																},
																"nativeSrc": "374:79:19",
																"nodeType": "YulFunctionCall",
																"src": "374:79:19"
															},
															"nativeSrc": "374:79:19",
															"nodeType": "YulExpressionStatement",
															"src": "374:79:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nativeSrc": "222:238:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "300:9:19",
														"nodeType": "YulTypedName",
														"src": "300:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "312:6:19",
														"nodeType": "YulTypedName",
														"src": "312:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "323:4:19",
														"nodeType": "YulTypedName",
														"src": "323:4:19",
														"type": ""
													}
												],
												"src": "222:238:19"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106046575f3560e01c806325093e1b14604a578063b29a8ff4146064578063ede3150214607e575b5f5ffd5b60506098565b604051605b919060bd565b60405180910390f35b606a609d565b6040516075919060bd565b60405180910390f35b608460a2565b604051608f919060bd565b60405180910390f35b602481565b601481565b603481565b5f819050919050565b60b78160a7565b82525050565b5f60208201905060ce5f83018460b0565b9291505056fea264697066735822122002dc84df22ddf5fa7a0f986d8a8a26a75a0a408c90d75de36f9066a1543aaed464736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4A JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x64 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x7E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x50 PUSH1 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5B SWAP2 SWAP1 PUSH1 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6A PUSH1 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x75 SWAP2 SWAP1 PUSH1 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x8F SWAP2 SWAP1 PUSH1 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x34 DUP2 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB7 DUP2 PUSH1 0xA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xCE PUSH0 DUP4 ADD DUP5 PUSH1 0xB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDC DUP5 0xDF 0x22 0xDD CREATE2 STATICCALL PUSH27 0xF986D8A8A26A75A0A408C90D75DE36F9066A1543AAED464736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "287:4766:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;319:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:56;439:2;385:56;:::o;319:60::-;377:2;319:60;:::o;447:50::-;495:2;447:50;:::o;7:77:19:-;44:7;73:5;62:16;;7:77;;;:::o;90:126::-;185:24;203:5;185:24;:::i;:::-;180:3;173:37;90:126;;:::o;222:238::-;323:4;361:2;350:9;346:18;338:26;;374:79;450:1;439:9;435:17;426:6;374:79;:::i;:::-;222:238;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "53200",
								"executionCost": "128",
								"totalCost": "53328"
							},
							"external": {
								"PAYMASTER_DATA_OFFSET()": "331",
								"PAYMASTER_POSTOP_GAS_OFFSET()": "287",
								"PAYMASTER_VALIDATION_GAS_OFFSET()": "309"
							},
							"internal": {
								"encode(struct PackedUserOperation calldata,bytes32)": "infinite",
								"gasPrice(struct PackedUserOperation calldata)": "infinite",
								"hash(struct PackedUserOperation calldata,bytes32)": "infinite",
								"unpackCallGasLimit(struct PackedUserOperation calldata)": "infinite",
								"unpackHigh128(bytes32)": "infinite",
								"unpackLow128(bytes32)": "infinite",
								"unpackMaxFeePerGas(struct PackedUserOperation calldata)": "infinite",
								"unpackMaxPriorityFeePerGas(struct PackedUserOperation calldata)": "infinite",
								"unpackPaymasterStaticFields(bytes calldata)": "infinite",
								"unpackPaymasterVerificationGasLimit(struct PackedUserOperation calldata)": "infinite",
								"unpackPostOpGasLimit(struct PackedUserOperation calldata)": "infinite",
								"unpackUints(bytes32)": "infinite",
								"unpackVerificationGasLimit(struct PackedUserOperation calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 287,
									"end": 5053,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002dc84df22ddf5fa7a0f986d8a8a26a75a0a408c90d75de36f9066a1543aaed464736f6c634300081e0033",
									".code": [
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "25093E1B"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "B29A8FF4"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "EDE31502"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 5053,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 385,
											"end": 441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 319,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 447,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 447,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 385,
											"end": 441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 385,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 377,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 319,
											"end": 379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 319,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 495,
											"end": 497,
											"name": "PUSH",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 447,
											"end": 497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 447,
											"end": 497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 216,
											"name": "tag",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 90,
											"end": 216,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 185,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 203,
											"end": 208,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 185,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 185,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 185,
											"end": 209,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 185,
											"end": 209,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 180,
											"end": 183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 173,
											"end": 210,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 90,
											"end": 216,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 216,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 222,
											"end": 460,
											"name": "tag",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 222,
											"end": 460,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 323,
											"end": 327,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 363,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 359,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 346,
											"end": 364,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 338,
											"end": 364,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 338,
											"end": 364,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 374,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 448,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 435,
											"end": 452,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 374,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 374,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 374,
											"end": 453,
											"name": "tag",
											"source": 19,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 453,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 222,
											"end": 460,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 222,
											"end": 460,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 222,
											"end": 460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 222,
											"end": 460,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 222,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"src/common/BaseCordylineAccount.sol",
								"src/common/ERC1271.sol",
								"src/core/BaseAccount.sol",
								"src/core/UserOperationLib.sol",
								"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
								"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/external/solady/EIP712.sol",
								"src/external/solady/UUPSUpgradeable.sol",
								"src/helpers/Helpers.sol",
								"src/interfaces/IAccount.sol",
								"src/interfaces/IAggregator.sol",
								"src/interfaces/IEntryPoint.sol",
								"src/interfaces/INonceManager.sol",
								"src/interfaces/ISenderCreator.sol",
								"src/interfaces/IStakeManager.sol",
								"src/interfaces/PackedUserOperation.sol",
								"src/samples/callback/TokenCallbackHandler.sol",
								"src/utils/Exec.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PAYMASTER_DATA_OFFSET()": "ede31502",
							"PAYMASTER_POSTOP_GAS_OFFSET()": "25093e1b",
							"PAYMASTER_VALIDATION_GAS_OFFSET()": "b29a8ff4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/core/UserOperationLib.sol\":{\"keccak256\":\"0xf332e1963894581e6217928dc162c13b4fdf4d3f996d9a4e365c104389a664d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f25c19e76484af2581d13bad59b32ca9befd39fefc001bc76d30132b5d9b27a\",\"dweb:/ipfs/QmZq1P6pk5KWKpPp29X4tvTKzSu6URBNJMrgsPJzrSdpvw\"]},\"src/helpers/Helpers.sol\":{\"keccak256\":\"0x42b948af5fa14a96149611595df1186800c7558b2de8762e4b45a7c45c16f65e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://737a7908131ece48a5df1faaa3d0be79c42792379c27f5615dae6aa14cd68c2f\",\"dweb:/ipfs/QmPAxGMDxuek7XWSUVfZpvYE8bustfsjTDVDK8hmE88e1f\"]},\"src/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Utility functions helpful when working with UserOperation structs.",
						"version": 1
					}
				}
			},
			"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/external/solady/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/EIP712.sol)Modified from Solbase (https://github.com/Sol-DAO/solbase/blob/main/src/utils/EIP712.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol)",
						"details": "Note, this implementation: - Uses `address(this)` for the `verifyingContract` field. - Does NOT use the optional EIP-712 salt. - Does NOT use any EIP-712 extensions. This is for simplicity and to save gas. If you need to customize, please fork / modify accordingly.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Cache the hashes for cheaper runtime gas costs. In the case of upgradeable contracts (i.e. proxies), or if the chain id changes due to a hard fork, the domain separator will be seamlessly calculated on-the-fly."
							},
							"eip712Domain()": {
								"details": "See: https://eips.ethereum.org/EIPS/eip-5267"
							}
						},
						"stateVariables": {
							"_DOMAIN_TYPEHASH": {
								"details": "`keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/EIP712.sol)Modified from Solbase (https://github.com/Sol-DAO/solbase/blob/main/src/utils/EIP712.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol)\",\"details\":\"Note, this implementation: - Uses `address(this)` for the `verifyingContract` field. - Does NOT use the optional EIP-712 salt. - Does NOT use any EIP-712 extensions. This is for simplicity and to save gas. If you need to customize, please fork / modify accordingly.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Cache the hashes for cheaper runtime gas costs. In the case of upgradeable contracts (i.e. proxies), or if the chain id changes due to a hard fork, the domain separator will be seamlessly calculated on-the-fly.\"},\"eip712Domain()\":{\"details\":\"See: https://eips.ethereum.org/EIPS/eip-5267\"}},\"stateVariables\":{\"_DOMAIN_TYPEHASH\":{\"details\":\"`keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract for EIP-712 typed structured data hashing and signing.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/solady/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/external/solady/EIP712.sol\":{\"keccak256\":\"0xc256c8769c2aa92fa192d21f5f4bd4387dfc6ef095d1a18476a3c6ea2e43f4f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6386477e8f74d89e68071c000bd98ebdab9f0ad154615b84492ff94d17a783\",\"dweb:/ipfs/QmZMX8Pivh7sJxX72pjPn2PcMREcRz1AM4oKNNgPf6bndK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contract for EIP-712 typed structured data hashing and signing.",
						"version": 1
					}
				}
			},
			"src/external/solady/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "UnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UpgradeFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/UUPSUpgradeable.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol) Note: - This implementation is intended to be used with ERC1967 proxies. See: `LibClone.deployERC1967` and related functions. - This implementation is NOT compatible with legacy OpenZeppelin proxies which do not store the implementation at `_ERC1967_IMPLEMENTATION_SLOT`.",
						"errors": {
							"UnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized call context."
								}
							],
							"UpgradeFailed()": [
								{
									"details": "The upgrade failed."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the proxy's implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot used by the implementation, as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822). Note: The `notDelegated` modifier prevents accidental upgrades to an implementation that is a proxy contract."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrades the proxy's implementation to `newImplementation`. Emits a {Upgraded} event. Note: Passing in empty `data` skips the delegatecall to `newImplementation`."
							}
						},
						"stateVariables": {
							"_ERC1967_IMPLEMENTATION_SLOT": {
								"details": "The ERC-1967 storage slot for the implementation in the proxy. `uint256(keccak256(\"eip1967.proxy.implementation\")) - 1`."
							},
							"_UPGRADED_EVENT_SIGNATURE": {
								"details": "`keccak256(bytes(\"Upgraded(address)\"))`."
							},
							"__self": {
								"details": "For checking if the context is a delegate call."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UpgradeFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/UUPSUpgradeable.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol) Note: - This implementation is intended to be used with ERC1967 proxies. See: `LibClone.deployERC1967` and related functions. - This implementation is NOT compatible with legacy OpenZeppelin proxies which do not store the implementation at `_ERC1967_IMPLEMENTATION_SLOT`.\",\"errors\":{\"UnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized call context.\"}],\"UpgradeFailed()\":[{\"details\":\"The upgrade failed.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the proxy's implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot used by the implementation, as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822). Note: The `notDelegated` modifier prevents accidental upgrades to an implementation that is a proxy contract.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrades the proxy's implementation to `newImplementation`. Emits a {Upgraded} event. Note: Passing in empty `data` skips the delegatecall to `newImplementation`.\"}},\"stateVariables\":{\"_ERC1967_IMPLEMENTATION_SLOT\":{\"details\":\"The ERC-1967 storage slot for the implementation in the proxy. `uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1`.\"},\"_UPGRADED_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Upgraded(address)\\\"))`.\"},\"__self\":{\"details\":\"For checking if the context is a delegate call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"UUPS proxy mixin.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/external/solady/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/external/solady/UUPSUpgradeable.sol\":{\"keccak256\":\"0x46d39579c440757e6e20ed164ca4409bd8eb652d506d48a466755c165d27f8c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c21148774462900d0929d09a2d56420a6850065d91ac001c10887ee796074ac\",\"dweb:/ipfs/QmNT12cuvaqf1puHQYAJeHFoiYBfmgKKbkLkkW7ETEkjRk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "UUPS proxy mixin.",
						"version": 1
					}
				}
			},
			"src/interfaces/IAccount.sol": {
				"IAccount": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation",
									"name": "userOp",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "missingAccountFunds",
									"type": "uint256"
								}
							],
							"name": "validateUserOp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "validationData",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
								"details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
								"params": {
									"missingAccountFunds": "- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.",
									"userOp": "- The operation that is about to be executed.",
									"userOpHash": "- Hash of the user's request data. can be used as the basis for signature."
								},
								"returns": {
									"validationData": "      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"aggregator\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IAccount.sol\":{\"keccak256\":\"0x1030b464b49ce80da46b5b6c9af357c2d526f308de61391db6a4ec767d33b864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://671945f8e18e7305797312b5a209506be3c9bd1d9b9b561c1e8863bccfa61319\",\"dweb:/ipfs/QmVanLK5Aenrb7J94doiE1C9oHwo86jvv8NrpDeNHwvnii\"]},\"src/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
								"notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/IAggregator.sol": {
				"IAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation[]",
									"name": "userOps",
									"type": "tuple[]"
								}
							],
							"name": "aggregateSignatures",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "aggregatedSignature",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation[]",
									"name": "userOps",
									"type": "tuple[]"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "validateSignatures",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "validateUserOpSignature",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "sigForUserOp",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])": {
								"params": {
									"userOps": "- An array of UserOperations to collect the signatures from."
								},
								"returns": {
									"aggregatedSignature": "- The aggregated signature."
								}
							},
							"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)": {
								"params": {
									"signature": "- The aggregated signature.",
									"userOps": "- An array of UserOperations to validate the signature for."
								}
							},
							"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
								"params": {
									"userOp": "- The userOperation received from the user."
								},
								"returns": {
									"sigForUserOp": "- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \"multisig\"."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])": "ae574a43",
							"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)": "2dd81133",
							"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": "062a422b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- An array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- An array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code to perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate an aggregated signature. Reverts if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate the signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"src/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])": {
								"notice": "Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code to perform this aggregation."
							},
							"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)": {
								"notice": "Validate an aggregated signature. Reverts if the aggregated signature does not match the given list of operations."
							},
							"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
								"notice": "Validate the signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps."
							}
						},
						"notice": "Aggregated Signatures validator.",
						"version": 1
					}
				}
			},
			"src/interfaces/IEntryPoint.sol": {
				"IEntryPoint": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "ret",
									"type": "bytes"
								}
							],
							"name": "DelegateAndRevert",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "opIndex",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "FailedOp",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "opIndex",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								},
								{
									"internalType": "bytes",
									"name": "inner",
									"type": "bytes"
								}
							],
							"name": "FailedOpWithRevert",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "returnData",
									"type": "bytes"
								}
							],
							"name": "PostOpReverted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "SenderAddressResult",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "aggregator",
									"type": "address"
								}
							],
							"name": "SignatureValidationFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "paymaster",
									"type": "address"
								}
							],
							"name": "AccountDeployed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "BeforeExecution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDeposit",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "revertReason",
									"type": "bytes"
								}
							],
							"name": "PostOpRevertReason",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "aggregator",
									"type": "address"
								}
							],
							"name": "SignatureAggregatorChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakeDelaySec",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawTime",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "paymaster",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualGasCost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualGasUsed",
									"type": "uint256"
								}
							],
							"name": "UserOperationEvent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "UserOperationPrefundTooLow",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "userOpHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "revertReason",
									"type": "bytes"
								}
							],
							"name": "UserOperationRevertReason",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "delegateAndRevert",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "depositTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deposit",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "staked",
											"type": "bool"
										},
										{
											"internalType": "uint112",
											"name": "stake",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "unstakeDelaySec",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "withdrawTime",
											"type": "uint48"
										}
									],
									"internalType": "struct IStakeManager.DepositInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "initCode",
									"type": "bytes"
								}
							],
							"name": "getSenderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation",
									"name": "userOp",
									"type": "tuple"
								}
							],
							"name": "getUserOpHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "address",
													"name": "sender",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "nonce",
													"type": "uint256"
												},
												{
													"internalType": "bytes",
													"name": "initCode",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "callData",
													"type": "bytes"
												},
												{
													"internalType": "bytes32",
													"name": "accountGasLimits",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "preVerificationGas",
													"type": "uint256"
												},
												{
													"internalType": "bytes32",
													"name": "gasFees",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "paymasterAndData",
													"type": "bytes"
												},
												{
													"internalType": "bytes",
													"name": "signature",
													"type": "bytes"
												}
											],
											"internalType": "struct PackedUserOperation[]",
											"name": "userOps",
											"type": "tuple[]"
										},
										{
											"internalType": "contract IAggregator",
											"name": "aggregator",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct IEntryPoint.UserOpsPerAggregator[]",
									"name": "opsPerAggregator",
									"type": "tuple[]"
								},
								{
									"internalType": "address payable",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "handleAggregatedOps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "initCode",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "callData",
											"type": "bytes"
										},
										{
											"internalType": "bytes32",
											"name": "accountGasLimits",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "preVerificationGas",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "gasFees",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "paymasterAndData",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "signature",
											"type": "bytes"
										}
									],
									"internalType": "struct PackedUserOperation[]",
									"name": "ops",
									"type": "tuple[]"
								},
								{
									"internalType": "address payable",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "handleOps",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "incrementNonce",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "senderCreator",
							"outputs": [
								{
									"internalType": "contract ISenderCreator",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"FailedOp(uint256,string)": [
								{
									"params": {
										"opIndex": "- Index into the array of ops to the failed one (in simulateValidation, this is always zero).",
										"reason": "- Revert reason. The string starts with a unique code \"AAmn\",                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,                  so a failure can be attributed to the correct entity."
									}
								}
							],
							"FailedOpWithRevert(uint256,string,bytes)": [
								{
									"details": "note that inner is truncated to 2048 bytes",
									"params": {
										"inner": "- data from inner cought revert reason",
										"opIndex": "- Index into the array of ops to the failed one (in simulateValidation, this is always zero).",
										"reason": "- Revert reason. see FailedOp(uint256,string), above"
									}
								}
							],
							"SignatureValidationFailed(address)": [
								{
									"params": {
										"aggregator": "The aggregator that failed to verify the signature"
									}
								}
							]
						},
						"events": {
							"AccountDeployed(bytes32,address,address,address)": {
								"params": {
									"factory": "- The factory used to deploy this account (in the initCode)",
									"paymaster": "- The paymaster used by this UserOp",
									"sender": "- The account that is deployed",
									"userOpHash": "- The userOp that deployed this account. UserOperationEvent will follow."
								}
							},
							"PostOpRevertReason(bytes32,address,uint256,bytes)": {
								"params": {
									"nonce": "- The nonce used in the request.",
									"revertReason": "- The return bytes from the reverted call to \"postOp\".",
									"sender": "- The sender of this request.",
									"userOpHash": "- The request unique identifier."
								}
							},
							"SignatureAggregatorChanged(address)": {
								"params": {
									"aggregator": "- The aggregator used for the following UserOperationEvents."
								}
							},
							"UserOperationPrefundTooLow(bytes32,address,uint256)": {
								"params": {
									"nonce": "- The nonce used in the request.",
									"sender": "- The sender of this request.",
									"userOpHash": "- The request unique identifier."
								}
							},
							"UserOperationRevertReason(bytes32,address,uint256,bytes)": {
								"params": {
									"nonce": "- The nonce used in the request.",
									"revertReason": "- The return bytes from the reverted \"callData\" call.",
									"sender": "- The sender of this request.",
									"userOpHash": "- The request unique identifier."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"unstakeDelaySec": "- The new lock duration before the deposit can be withdrawn."
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "- The account to query."
								},
								"returns": {
									"_0": "- The deposit (for gas payment) of the account."
								}
							},
							"delegateAndRevert(address,bytes)": {
								"details": "calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.",
								"params": {
									"data": "data to pass to target in a delegatecall",
									"target": "a target contract to make a delegatecall from entrypoint"
								}
							},
							"depositTo(address)": {
								"params": {
									"account": "- The account to add to."
								}
							},
							"getDepositInfo(address)": {
								"params": {
									"account": "- The account to query."
								},
								"returns": {
									"info": "  - Full deposit information of given account."
								}
							},
							"getNonce(address,uint192)": {
								"params": {
									"key": "the high 192 bit of the nonce",
									"sender": "the account address"
								},
								"returns": {
									"nonce": "a full nonce to pass for next UserOp with this sender."
								}
							},
							"getSenderAddress(bytes)": {
								"params": {
									"initCode": "- The constructor code to be passed into the UserOperation."
								}
							},
							"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
								"params": {
									"userOp": "- The user operation to generate the request ID for."
								},
								"returns": {
									"_0": "hash the hash of this UserOperation"
								}
							},
							"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)": {
								"params": {
									"beneficiary": "- The address to receive the fees.",
									"opsPerAggregator": "- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)."
								}
							},
							"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)": {
								"params": {
									"beneficiary": "- The address to receive the fees.",
									"ops": "- The operations to execute."
								}
							},
							"incrementNonce(uint192)": {
								"params": {
									"key": "- the \"nonce key\" to increment the \"nonce sequence\" for."
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "- The address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"withdrawAddress": "- The address to send withdrawn value.",
									"withdrawAmount": "- The amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"balanceOf(address)": "70a08231",
							"delegateAndRevert(address,bytes)": "850aaf62",
							"depositTo(address)": "b760faf9",
							"getDepositInfo(address)": "5287ce12",
							"getNonce(address,uint192)": "35567e1a",
							"getSenderAddress(bytes)": "9b249f69",
							"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": "22cdde4c",
							"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)": "dbed18e0",
							"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)": "765e827f",
							"incrementNonce(uint192)": "0bd28e3b",
							"senderCreator()": "09ccb880",
							"unlockStake()": "bb9fe6bf",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderCreator\",\"outputs\":[{\"internalType\":\"contract ISenderCreator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted call to \\\"postOp\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted \\\"callData\\\" call.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op. Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error.this method cannot be used for EIP-7702 derived contracts.\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"senderCreator()\":{\"notice\":\"Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IAggregator.sol\":{\"keccak256\":\"0xdf580eafa015b81bde436d6a5468cc92b531ada84007cef885e923f6dfc5e8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99f0060626568619ac94d750eb4c0888d92ca5775a6bd957fef9847843835b77\",\"dweb:/ipfs/QmXJer3D9sTkEj3mmUDqpdqfGpe46Rn9G22nGrfZdP2wAT\"]},\"src/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3b0423737e810dd886183ed32cfed9b45edd315f5fb3e1076fc19f86791adc64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c43081efaa2eda581b6249053281bb58cb0c4eeb6bf87efc55d95daaec2fc931\",\"dweb:/ipfs/QmXRN2JnyzWZNeFMHauTnDuc7jhxGY4ZkY37HTtjXKdC87\"]},\"src/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]},\"src/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]},\"src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]},\"src/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xb15188e25e45fe73097e279675b6c0beccbd4133ead2260f8f0c4ba840046800\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d14c1edd1e95d37c26e54bb34305e2cc9dedc46eb75ec91caeb777678e8ea79\",\"dweb:/ipfs/QmcCL2syVtV7W3XvYx3si84MPkbEJKqEN8hjFNhAPoDDhK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"FailedOp(uint256,string)": [
								{
									"notice": "A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op. Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it."
								}
							],
							"FailedOpWithRevert(uint256,string,bytes)": [
								{
									"notice": "A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster."
								}
							],
							"SignatureValidationFailed(address)": [
								{
									"notice": "Error case when a signature aggregator fails to verify the aggregated signature it had created."
								}
							]
						},
						"events": {
							"AccountDeployed(bytes32,address,address,address)": {
								"notice": "Account \"sender\" was deployed."
							},
							"BeforeExecution()": {
								"notice": "An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop. Any event emitted before this event, is part of the validation."
							},
							"PostOpRevertReason(bytes32,address,uint256,bytes)": {
								"notice": "An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length."
							},
							"SignatureAggregatorChanged(address)": {
								"notice": "Signature aggregator used by the following UserOperationEvents within this bundle."
							},
							"UserOperationPrefundTooLow(bytes32,address,uint256)": {
								"notice": "UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made."
							},
							"UserOperationRevertReason(bytes32,address,uint256,bytes)": {
								"notice": "An event emitted if the UserOperation \"callData\" reverted with non-zero length."
							}
						},
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "Add to the account's stake - amount and delay any pending unstake is first cancelled."
							},
							"balanceOf(address)": {
								"notice": "Get account balance."
							},
							"delegateAndRevert(address,bytes)": {
								"notice": "Helper method for dry-run testing."
							},
							"depositTo(address)": {
								"notice": "Add to the deposit of the given account."
							},
							"getDepositInfo(address)": {
								"notice": "Get deposit info."
							},
							"getNonce(address,uint192)": {
								"notice": "Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."
							},
							"getSenderAddress(bytes)": {
								"notice": "Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error.this method cannot be used for EIP-7702 derived contracts."
							},
							"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))": {
								"notice": "Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address"
							},
							"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)": {
								"notice": "Execute a batch of UserOperation with Aggregators"
							},
							"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)": {
								"notice": "Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead."
							},
							"incrementNonce(uint192)": {
								"notice": "Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."
							},
							"senderCreator()": {
								"notice": "Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts."
							},
							"unlockStake()": {
								"notice": "Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay."
							},
							"withdrawStake(address)": {
								"notice": "Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass."
							},
							"withdrawTo(address,uint256)": {
								"notice": "Withdraw from the deposit."
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/INonceManager.sol": {
				"INonceManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "getNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint192",
									"name": "key",
									"type": "uint192"
								}
							],
							"name": "incrementNonce",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getNonce(address,uint192)": {
								"params": {
									"key": "the high 192 bit of the nonce",
									"sender": "the account address"
								},
								"returns": {
									"nonce": "a full nonce to pass for next UserOp with this sender."
								}
							},
							"incrementNonce(uint192)": {
								"params": {
									"key": "- the \"nonce key\" to increment the \"nonce sequence\" for."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getNonce(address,uint192)": "35567e1a",
							"incrementNonce(uint192)": "0bd28e3b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/INonceManager.sol\":{\"keccak256\":\"0xee493ae200b8c675bdc0da66f7ac6bb883ecea33672d7d0a95526b9eecdedf87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://979784a0333ac4ef3cc53ab9323a4b7fa574d929bd511f0eed03d3b0370db22d\",\"dweb:/ipfs/QmeiciN5gs4upM6vfKvrRxWiDBUzMU4uJQRRkJajhim9gX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getNonce(address,uint192)": {
								"notice": "Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order."
							},
							"incrementNonce(uint192)": {
								"notice": "Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key."
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/ISenderCreator.sol": {
				"ISenderCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "initCode",
									"type": "bytes"
								}
							],
							"name": "createSender",
							"outputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "initCallData",
									"type": "bytes"
								}
							],
							"name": "initEip7702Sender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createSender(bytes)": {
								"details": "Creates a new sender contract.",
								"returns": {
									"sender": "Address of the newly created sender contract."
								}
							},
							"initEip7702Sender(address,bytes)": {
								"params": {
									"initCallData": "- the call data to be passed to the sender account call.",
									"sender": "- the 'sender' EIP-7702 account to be initialized."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createSender(bytes)": "570e1a36",
							"initEip7702Sender(address,bytes)": "c09ad0d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData\",\"type\":\"bytes\"}],\"name\":\"initEip7702Sender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"details\":\"Creates a new sender contract.\",\"returns\":{\"sender\":\"Address of the newly created sender contract.\"}},\"initEip7702Sender(address,bytes)\":{\"params\":{\"initCallData\":\"- the call data to be passed to the sender account call.\",\"sender\":\"- the 'sender' EIP-7702 account to be initialized.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initEip7702Sender(address,bytes)\":{\"notice\":\"Use initCallData to initialize an EIP-7702 account. The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account. Note: Can be called multiple times as long as an appropriate initCode is supplied\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISenderCreator.sol\":\"ISenderCreator\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0x677f651d733162b80d1af7901e4f36469e362737a8353d1d0cc7bb94489e4ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6905a80acd70b444ea230b5b582164cb99aaae518bf72c88f8292df31615570\",\"dweb:/ipfs/QmfTKTPwJYf9pmA3T5PE5cCG8GLLDrLaq3jQqMP3pVRL6w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initEip7702Sender(address,bytes)": {
								"notice": "Use initCallData to initialize an EIP-7702 account. The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account. Note: Can be called multiple times as long as an appropriate initCode is supplied"
							}
						},
						"version": 1
					}
				}
			},
			"src/interfaces/IStakeManager.sol": {
				"IStakeManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalDeposit",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unstakeDelaySec",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "withdrawTime",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "unstakeDelaySec",
									"type": "uint32"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "depositTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getDepositInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "deposit",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "staked",
											"type": "bool"
										},
										{
											"internalType": "uint112",
											"name": "stake",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "unstakeDelaySec",
											"type": "uint32"
										},
										{
											"internalType": "uint48",
											"name": "withdrawTime",
											"type": "uint48"
										}
									],
									"internalType": "struct IStakeManager.DepositInfo",
									"name": "info",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "withdrawAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addStake(uint32)": {
								"params": {
									"unstakeDelaySec": "- The new lock duration before the deposit can be withdrawn."
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "- The account to query."
								},
								"returns": {
									"_0": "- The deposit (for gas payment) of the account."
								}
							},
							"depositTo(address)": {
								"params": {
									"account": "- The account to add to."
								}
							},
							"getDepositInfo(address)": {
								"params": {
									"account": "- The account to query."
								},
								"returns": {
									"info": "  - Full deposit information of given account."
								}
							},
							"withdrawStake(address)": {
								"params": {
									"withdrawAddress": "- The address to send withdrawn value."
								}
							},
							"withdrawTo(address,uint256)": {
								"params": {
									"withdrawAddress": "- The address to send withdrawn value.",
									"withdrawAmount": "- The amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addStake(uint32)": "0396cb60",
							"balanceOf(address)": "70a08231",
							"depositTo(address)": "b760faf9",
							"getDepositInfo(address)": "5287ce12",
							"unlockStake()": "bb9fe6bf",
							"withdrawStake(address)": "c23a5cea",
							"withdrawTo(address,uint256)": "205c2878"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xe48e904fcac02295aad07fbfa1c1d449a74bf44c04e432afef6f34d1ef726ae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5882b635ea6f5da9ae411485975888431de571f85d4baf35e3db1a83c1f14b85\",\"dweb:/ipfs/QmVSTX36Byr48y8JBmz1hCTGAAyQdTYegQbsSqdRNuSQYz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addStake(uint32)": {
								"notice": "Add to the account's stake - amount and delay any pending unstake is first cancelled."
							},
							"balanceOf(address)": {
								"notice": "Get account balance."
							},
							"depositTo(address)": {
								"notice": "Add to the deposit of the given account."
							},
							"getDepositInfo(address)": {
								"notice": "Get deposit info."
							},
							"unlockStake()": {
								"notice": "Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay."
							},
							"withdrawStake(address)": {
								"notice": "Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass."
							},
							"withdrawTo(address,uint256)": {
								"notice": "Withdraw from the deposit."
							}
						},
						"notice": "Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \"unstakeDelay\" by the staked entity.",
						"version": 1
					}
				}
			},
			"src/samples/callback/TokenCallbackHandler.sol": {
				"TokenCallbackHandler": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token callback handler.   Handles supported tokens' callbacks, allowing account receiving these tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/samples/callback/TokenCallbackHandler.sol\":\"TokenCallbackHandler\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xd91a14caef87567866880b0f01955dfa50b4bc593dcecfcb38be41d98e6b9662\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f20ba13333688a9001c5426db032e8251bb1c76087b654e5421f478f17fd26b\",\"dweb:/ipfs/QmXFbor8LktEfWcRn83F1j1T8Sc319PM24KYR9fyTaS43x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Token callback handler.   Handles supported tokens' callbacks, allowing account receiving these tokens.",
						"version": 1
					}
				}
			},
			"src/utils/Exec.sol": {
				"Exec": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/utils/Exec.sol\":193:2085  library Exec {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/utils/Exec.sol\":193:2085  library Exec {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212208abcce7c878d8f5577ea9eb0ee299c60d3da696600fc28c68759425e2293232364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208abcce7c878d8f5577ea9eb0ee299c60d3da696600fc28c68759425e2293232364736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xBC 0xCE PUSH29 0x878D8F5577EA9EB0EE299C60D3DA696600FC28C68759425E2293232364 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "193:1892:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208abcce7c878d8f5577ea9eb0ee299c60d3da696600fc28c68759425e2293232364736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xBC 0xCE PUSH29 0x878D8F5577EA9EB0EE299C60D3DA696600FC28C68759425E2293232364 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "193:1892:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"call(address,uint256,bytes memory,uint256)": "infinite",
								"delegateCall(address,bytes memory,uint256)": "infinite",
								"getReturnData(uint256)": "infinite",
								"revertWithData(bytes memory)": "infinite",
								"revertWithReturnData()": "infinite",
								"staticcall(address,bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 193,
									"end": 2085,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208abcce7c878d8f5577ea9eb0ee299c60d3da696600fc28c68759425e2293232364736f6c634300081e0033",
									".code": [
										{
											"begin": 193,
											"end": 2085,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 2085,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"src/common/BaseCordylineAccount.sol",
								"src/common/ERC1271.sol",
								"src/core/BaseAccount.sol",
								"src/core/UserOperationLib.sol",
								"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
								"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
								"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
								"src/external/solady/EIP712.sol",
								"src/external/solady/UUPSUpgradeable.sol",
								"src/helpers/Helpers.sol",
								"src/interfaces/IAccount.sol",
								"src/interfaces/IAggregator.sol",
								"src/interfaces/IEntryPoint.sol",
								"src/interfaces/INonceManager.sol",
								"src/interfaces/ISenderCreator.sol",
								"src/interfaces/IStakeManager.sol",
								"src/interfaces/PackedUserOperation.sol",
								"src/samples/callback/TokenCallbackHandler.sol",
								"src/utils/Exec.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when making different kinds of contract calls in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/Exec.sol\":\"Exec\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=src/external/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/utils/Exec.sol\":{\"keccak256\":\"0x9c724ee22011193ea7f92d3c3c467ee6aa27139d3ddc225c7f1254d241e6ccdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96cc246fe944a212cbb9ba82065b2d380ec80954fcdb5d8d982b476bd5b72868\",\"dweb:/ipfs/QmZ25eFixEhukbfWGz5TBjsp7YohxUqD5i2rxhaghfvHt8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Utility functions helpful when making different kinds of contract calls in Solidity.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/common/BaseCordylineAccount.sol": {
				"ast": {
					"absolutePath": "src/common/BaseCordylineAccount.sol",
					"exportedSymbols": {
						"BaseAccount": [
							708
						],
						"BaseCordylineAccount": [
							366
						],
						"ERC1271": [
							446
						],
						"IEntryPoint": [
							1933
						],
						"PackedUserOperation": [
							2097
						],
						"SIG_VALIDATION_FAILED": [
							1513
						],
						"SIG_VALIDATION_SUCCESS": [
							1516
						],
						"TokenCallbackHandler": [
							2201
						],
						"UUPSUpgradeable": [
							1508
						]
					},
					"id": 367,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "36:24:0"
						},
						{
							"absolutePath": "src/core/BaseAccount.sol",
							"file": "../core/BaseAccount.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 709,
							"src": "62:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "BaseAccount",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "70:11:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/helpers/Helpers.sol",
							"file": "../helpers/Helpers.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 1698,
							"src": "115:85:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "SIG_VALIDATION_FAILED",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1513,
										"src": "123:21:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 5,
										"name": "SIG_VALIDATION_SUCCESS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1516,
										"src": "146:22:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IEntryPoint.sol",
							"file": "../interfaces/IEntryPoint.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 1934,
							"src": "201:58:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 7,
										"name": "IEntryPoint",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1933,
										"src": "209:11:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/PackedUserOperation.sol",
							"file": "../interfaces/PackedUserOperation.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 2098,
							"src": "260:74:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 9,
										"name": "PackedUserOperation",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2097,
										"src": "268:19:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/samples/callback/TokenCallbackHandler.sol",
							"file": "../samples/callback/TokenCallbackHandler.sol",
							"id": 12,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 2202,
							"src": "335:82:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 11,
										"name": "TokenCallbackHandler",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2201,
										"src": "343:20:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/external/solady/UUPSUpgradeable.sol",
							"file": "../external/solady/UUPSUpgradeable.sol",
							"id": 14,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 1509,
							"src": "419:71:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 13,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1508,
										"src": "427:15:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/common/ERC1271.sol",
							"file": "./ERC1271.sol",
							"id": 16,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 447,
							"src": "491:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 15,
										"name": "ERC1271",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 446,
										"src": "499:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 17,
										"name": "BaseAccount",
										"nameLocations": [
											"573:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "573:11:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "573:11:0"
								},
								{
									"baseName": {
										"id": 19,
										"name": "TokenCallbackHandler",
										"nameLocations": [
											"586:20:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2201,
										"src": "586:20:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "586:20:0"
								},
								{
									"baseName": {
										"id": 21,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"608:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1508,
										"src": "608:15:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "608:15:0"
								},
								{
									"baseName": {
										"id": 23,
										"name": "ERC1271",
										"nameLocations": [
											"625:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 446,
										"src": "625:7:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "625:7:0"
								}
							],
							"canonicalName": "BaseCordylineAccount",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 366,
							"linearizedBaseContracts": [
								366,
								446,
								1419,
								1508,
								2201,
								1086,
								1116,
								1104,
								708,
								1714
							],
							"name": "BaseCordylineAccount",
							"nameLocation": "549:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "immutable",
									"name": "_ENTRY_POINT",
									"nameLocation": "670:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "639:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IEntryPoint_$1933",
										"typeString": "contract IEntryPoint"
									},
									"typeName": {
										"id": 26,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 25,
											"name": "IEntryPoint",
											"nameLocations": [
												"639:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1933,
											"src": "639:11:0"
										},
										"referencedDeclaration": 1933,
										"src": "639:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IEntryPoint_$1933",
											"typeString": "contract IEntryPoint"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "BaseCordylineAccount.SignatureType",
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "689:97:0",
										"text": "@notice Signature types used for user operation validation and ERC-1271 signature validation."
									},
									"id": 32,
									"members": [
										{
											"id": 29,
											"name": "EOA",
											"nameLocation": "820:3:0",
											"nodeType": "EnumValue",
											"src": "820:3:0"
										},
										{
											"id": 30,
											"name": "CONTRACT",
											"nameLocation": "833:8:0",
											"nodeType": "EnumValue",
											"src": "833:8:0"
										},
										{
											"id": 31,
											"name": "CONTRACT_WITH_ADDR",
											"nameLocation": "851:18:0",
											"nodeType": "EnumValue",
											"src": "851:18:0"
										}
									],
									"name": "SignatureType",
									"nameLocation": "796:13:0",
									"nodeType": "EnumDefinition",
									"src": "791:84:0"
								},
								{
									"errorSelector": "a24a13a6",
									"id": 34,
									"name": "ArrayLengthMismatch",
									"nameLocation": "887:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:0"
									},
									"src": "881:28:0"
								},
								{
									"errorSelector": "7e16b8cd",
									"id": 36,
									"name": "CreateFailed",
									"nameLocation": "920:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:0"
									},
									"src": "914:21:0"
								},
								{
									"errorSelector": "60cd402d",
									"id": 38,
									"name": "InvalidSignatureType",
									"nameLocation": "946:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:2:0"
									},
									"src": "940:29:0"
								},
								{
									"errorSelector": "4a0bfec1",
									"id": 42,
									"name": "NotAuthorized",
									"nameLocation": "980:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1002:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "994:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:16:0"
									},
									"src": "974:36:0"
								},
								{
									"errorSelector": "8579befe",
									"id": 44,
									"name": "ZeroAddressNotAllowed",
									"nameLocation": "1021:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:2:0"
									},
									"src": "1015:30:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1077:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_onlyAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "1087:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1087:17:0"
											},
											{
												"id": 49,
												"nodeType": "PlaceholderStatement",
												"src": "1114:1:0"
											}
										]
									},
									"id": 51,
									"name": "onlyAuthorized",
									"nameLocation": "1060:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:2:0"
									},
									"src": "1051:71:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "1212:2:0",
										"statements": []
									},
									"id": 55,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1212:0:0"
									},
									"scope": 366,
									"src": "1177:37:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										530
									],
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1646:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1662:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 70,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 71,
															"name": "func",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1675:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 68,
														"name": "_call",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1656:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1656:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1656:24:0"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1220:313:0",
										"text": "@notice Execute a transaction. This may only be called directly by an owner or by the entry point via a user\n operation signed by an owner.\n @param dest The target of the transaction.\n @param value The amount of wei sent in the transaction.\n @param func The transaction's calldata."
									},
									"functionSelector": "b61d27f6",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyAuthorized",
												"nameLocations": [
													"1631:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "1631:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1631:14:0"
										}
									],
									"name": "execute",
									"nameLocation": "1547:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 64,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1614:8:0"
									},
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "1563:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1555:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1577:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1569:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "1599:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1584:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 61,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1584:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:50:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:0:0"
									},
									"scope": 366,
									"src": "1538:149:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2129:236:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 87,
															"name": "dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2143:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2148:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2143:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 89,
															"name": "func",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "2158:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2163:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2158:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2143:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 96,
												"nodeType": "IfStatement",
												"src": "2139:85:0",
												"trueBody": {
													"id": 95,
													"nodeType": "Block",
													"src": "2171:53:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 92,
																	"name": "ArrayLengthMismatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2192:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2192:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 94,
															"nodeType": "RevertStatement",
															"src": "2185:28:0"
														}
													]
												}
											},
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2241:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2233:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 97,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 101,
												"initialValue": {
													"expression": {
														"id": 99,
														"name": "dest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "2250:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2255:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2250:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2233:28:0"
											},
											{
												"body": {
													"id": 122,
													"nodeType": "Block",
													"src": "2308:51:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 113,
																			"name": "dest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "2328:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 115,
																		"indexExpression": {
																			"id": 114,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2333:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2328:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2337:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"baseExpression": {
																			"id": 117,
																			"name": "func",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "2340:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "bytes calldata[] calldata"
																			}
																		},
																		"id": 119,
																		"indexExpression": {
																			"id": 118,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 103,
																			"src": "2345:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2340:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 112,
																	"name": "_call",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "2322:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bytes memory)"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2322:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "2322:26:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2291:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 107,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2295:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2291:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 123,
												"initializationExpression": {
													"assignments": [
														103
													],
													"declarations": [
														{
															"constant": false,
															"id": 103,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2284:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 123,
															"src": "2276:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2276:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 105,
													"initialValue": {
														"hexValue": "30",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2288:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2276:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2303:3:0",
														"subExpression": {
															"id": 109,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2305:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ExpressionStatement",
													"src": "2303:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2271:88:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1693:329:0",
										"text": "@notice Execute a sequence of transactions.\n @param dest An array of the targets for each transaction in the sequence.\n @param func An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with\n corresponding elements representing the parameters for each transaction."
									},
									"functionSelector": "18dfb3c7",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 85,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 84,
												"name": "onlyAuthorized",
												"nameLocations": [
													"2114:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2114:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2114:14:0"
										}
									],
									"name": "executeBatch",
									"nameLocation": "2036:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "2068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2049:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 77,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2049:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 78,
													"nodeType": "ArrayTypeName",
													"src": "2049:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "2091:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2074:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 80,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2074:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 81,
													"nodeType": "ArrayTypeName",
													"src": "2074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2048:48:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2129:0:0"
									},
									"scope": 366,
									"src": "2027:338:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2910:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 140,
																"name": "dest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2924:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2929:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2924:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 142,
																"name": "func",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "2939:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																	"typeString": "bytes calldata[] calldata"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2944:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2939:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2924:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 145,
																"name": "dest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2954:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2959:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2954:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "2969:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																	"typeString": "uint256[] calldata"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2975:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2969:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2954:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2924:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "IfStatement",
												"src": "2920:116:0",
												"trueBody": {
													"id": 154,
													"nodeType": "Block",
													"src": "2983:53:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 151,
																	"name": "ArrayLengthMismatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "3004:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3004:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 153,
															"nodeType": "RevertStatement",
															"src": "2997:28:0"
														}
													]
												}
											},
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3053:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "3045:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"expression": {
														"id": 158,
														"name": "dest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3062:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3067:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3062:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:28:0"
											},
											{
												"body": {
													"id": 183,
													"nodeType": "Block",
													"src": "3120:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 172,
																			"name": "dest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "3140:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 174,
																		"indexExpression": {
																			"id": 173,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "3145:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3140:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 132,
																			"src": "3149:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 177,
																		"indexExpression": {
																			"id": 176,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "3155:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3149:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 178,
																			"name": "func",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 135,
																			"src": "3159:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "bytes calldata[] calldata"
																			}
																		},
																		"id": 180,
																		"indexExpression": {
																			"id": 179,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "3164:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3159:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 171,
																	"name": "_call",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,uint256,bytes memory)"
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3134:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "3134:33:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "3103:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 166,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "3107:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3103:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"initializationExpression": {
													"assignments": [
														162
													],
													"declarations": [
														{
															"constant": false,
															"id": 162,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3096:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 184,
															"src": "3088:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 161,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 164,
													"initialValue": {
														"hexValue": "30",
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3100:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3088:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3115:3:0",
														"subExpression": {
															"id": 168,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "3117:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ExpressionStatement",
													"src": "3115:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3083:95:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2371:406:0",
										"text": "@notice Execute a sequence of transactions.\n @param dest An array of the targets for each transaction in the sequence.\n @param value An array of value for each transaction in the sequence.\n @param func An array of calldata for each transaction in the sequence. Must be the same length as `dest`, with\n corresponding elements representing the parameters for each transaction."
									},
									"functionSelector": "47e1da2a",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 138,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 137,
												"name": "onlyAuthorized",
												"nameLocations": [
													"2895:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2895:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2895:14:0"
										}
									],
									"name": "executeBatch",
									"nameLocation": "2791:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "2823:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2804:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 127,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2804:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 128,
													"nodeType": "ArrayTypeName",
													"src": "2804:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2848:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2829:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 130,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 131,
													"nodeType": "ArrayTypeName",
													"src": "2829:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "2872:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2855:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 133,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2855:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 134,
													"nodeType": "ArrayTypeName",
													"src": "2855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:74:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2910:0:0"
									},
									"scope": 366,
									"src": "2782:402:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3921:358:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3956:317:0",
													"nodeType": "YulBlock",
													"src": "3956:317:0",
													"statements": [
														{
															"nativeSrc": "3970:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "3970:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3987:4:0",
																		"nodeType": "YulLiteral",
																		"src": "3987:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3981:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "3981:5:0"
																},
																"nativeSrc": "3981:11:0",
																"nodeType": "YulFunctionCall",
																"src": "3981:11:0"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "3974:3:0",
																	"nodeType": "YulTypedName",
																	"src": "3974:3:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4005:26:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4005:26:0",
															"value": {
																"name": "initCode.length",
																"nativeSrc": "4016:15:0",
																"nodeType": "YulIdentifier",
																"src": "4016:15:0"
															},
															"variables": [
																{
																	"name": "len",
																	"nativeSrc": "4009:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4009:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "4057:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4057:3:0"
																	},
																	{
																		"name": "initCode.offset",
																		"nativeSrc": "4062:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "4062:15:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4079:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4079:3:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4044:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "4044:12:0"
																},
																"nativeSrc": "4044:39:0",
																"nodeType": "YulFunctionCall",
																"src": "4044:39:0"
															},
															"nativeSrc": "4044:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "4044:39:0"
														},
														{
															"nativeSrc": "4097:38:0",
															"nodeType": "YulAssignment",
															"src": "4097:38:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4119:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "4119:5:0"
																	},
																	{
																		"name": "fmp",
																		"nativeSrc": "4126:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4126:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4131:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4131:3:0"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nativeSrc": "4112:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4112:6:0"
																},
																"nativeSrc": "4112:23:0",
																"nodeType": "YulFunctionCall",
																"src": "4112:23:0"
															},
															"variableNames": [
																{
																	"name": "createdAddr",
																	"nativeSrc": "4097:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "4097:11:0"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4172:91:0",
																"nodeType": "YulBlock",
																"src": "4172:91:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4197:4:0",
																					"nodeType": "YulLiteral",
																					"src": "4197:4:0",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4203:10:0",
																					"nodeType": "YulLiteral",
																					"src": "4203:10:0",
																					"type": "",
																					"value": "0x7e16b8cd"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4190:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "4190:6:0"
																			},
																			"nativeSrc": "4190:24:0",
																			"nodeType": "YulFunctionCall",
																			"src": "4190:24:0"
																		},
																		"nativeSrc": "4190:24:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "4190:24:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4238:4:0",
																					"nodeType": "YulLiteral",
																					"src": "4238:4:0",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4244:4:0",
																					"nodeType": "YulLiteral",
																					"src": "4244:4:0",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4231:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "4231:6:0"
																			},
																			"nativeSrc": "4231:18:0",
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:0"
																		},
																		"nativeSrc": "4231:18:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "createdAddr",
																		"nativeSrc": "4159:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "4159:11:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4152:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:0"
																},
																"nativeSrc": "4152:19:0",
																"nodeType": "YulFunctionCall",
																"src": "4152:19:0"
															},
															"nativeSrc": "4149:114:0",
															"nodeType": "YulIf",
															"src": "4149:114:0"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 196,
														"isOffset": false,
														"isSlot": false,
														"src": "4097:11:0",
														"valueSize": 1
													},
													{
														"declaration": 196,
														"isOffset": false,
														"isSlot": false,
														"src": "4159:11:0",
														"valueSize": 1
													},
													{
														"declaration": 191,
														"isOffset": false,
														"isSlot": false,
														"src": "4016:15:0",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 191,
														"isOffset": true,
														"isSlot": false,
														"src": "4062:15:0",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 189,
														"isOffset": false,
														"isSlot": false,
														"src": "4119:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 198,
												"nodeType": "InlineAssembly",
												"src": "3931:342:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3190:549:0",
										"text": "@notice Creates a contract.\n @param value The value to send to the new contract constructor.\n @param initCode The initCode to deploy.\n @return createdAddr The created contract address.\n @dev Assembly procedure:\n     1. Load the free memory pointer.\n     2. Get the initCode length.\n     3. Copy the initCode from callata to memory at the free memory pointer.\n     4. Create the contract.\n     5. If creation failed (the address returned is zero), revert with CreateFailed()."
									},
									"functionSelector": "4c8c9ea1",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 193,
												"name": "onlyAuthorized",
												"nameLocations": [
													"3864:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "3864:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3864:14:0"
										}
									],
									"name": "performCreate",
									"nameLocation": "3753:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3775:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3767:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "initCode",
												"nameLocation": "3797:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3782:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3782:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3766:40:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "createdAddr",
												"nameLocation": "3904:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3896:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3895:21:0"
									},
									"scope": 366,
									"src": "3744:535:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "5178:365:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5213:324:0",
													"nodeType": "YulBlock",
													"src": "5213:324:0",
													"statements": [
														{
															"nativeSrc": "5227:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5227:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5244:4:0",
																		"nodeType": "YulLiteral",
																		"src": "5244:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5238:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "5238:5:0"
																},
																"nativeSrc": "5238:11:0",
																"nodeType": "YulFunctionCall",
																"src": "5238:11:0"
															},
															"variables": [
																{
																	"name": "fmp",
																	"nativeSrc": "5231:3:0",
																	"nodeType": "YulTypedName",
																	"src": "5231:3:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5262:26:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5262:26:0",
															"value": {
																"name": "initCode.length",
																"nativeSrc": "5273:15:0",
																"nodeType": "YulIdentifier",
																"src": "5273:15:0"
															},
															"variables": [
																{
																	"name": "len",
																	"nativeSrc": "5266:3:0",
																	"nodeType": "YulTypedName",
																	"src": "5266:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "fmp",
																		"nativeSrc": "5314:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:0"
																	},
																	{
																		"name": "initCode.offset",
																		"nativeSrc": "5319:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "5319:15:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5336:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5336:3:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5301:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "5301:12:0"
																},
																"nativeSrc": "5301:39:0",
																"nodeType": "YulFunctionCall",
																"src": "5301:39:0"
															},
															"nativeSrc": "5301:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "5301:39:0"
														},
														{
															"nativeSrc": "5354:45:0",
															"nodeType": "YulAssignment",
															"src": "5354:45:0",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5377:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "5377:5:0"
																	},
																	{
																		"name": "fmp",
																		"nativeSrc": "5384:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5384:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5389:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5389:3:0"
																	},
																	{
																		"name": "salt",
																		"nativeSrc": "5394:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5394:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nativeSrc": "5369:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "5369:7:0"
																},
																"nativeSrc": "5369:30:0",
																"nodeType": "YulFunctionCall",
																"src": "5369:30:0"
															},
															"variableNames": [
																{
																	"name": "createdAddr",
																	"nativeSrc": "5354:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "5354:11:0"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5436:91:0",
																"nodeType": "YulBlock",
																"src": "5436:91:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5461:4:0",
																					"nodeType": "YulLiteral",
																					"src": "5461:4:0",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5467:10:0",
																					"nodeType": "YulLiteral",
																					"src": "5467:10:0",
																					"type": "",
																					"value": "0x7e16b8cd"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5454:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "5454:6:0"
																			},
																			"nativeSrc": "5454:24:0",
																			"nodeType": "YulFunctionCall",
																			"src": "5454:24:0"
																		},
																		"nativeSrc": "5454:24:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "5454:24:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5502:4:0",
																					"nodeType": "YulLiteral",
																					"src": "5502:4:0",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5508:4:0",
																					"nodeType": "YulLiteral",
																					"src": "5508:4:0",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5495:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "5495:6:0"
																			},
																			"nativeSrc": "5495:18:0",
																			"nodeType": "YulFunctionCall",
																			"src": "5495:18:0"
																		},
																		"nativeSrc": "5495:18:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "5495:18:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "createdAddr",
																		"nativeSrc": "5423:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "5423:11:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5416:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5416:6:0"
																},
																"nativeSrc": "5416:19:0",
																"nodeType": "YulFunctionCall",
																"src": "5416:19:0"
															},
															"nativeSrc": "5413:114:0",
															"nodeType": "YulIf",
															"src": "5413:114:0"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "5354:11:0",
														"valueSize": 1
													},
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "5423:11:0",
														"valueSize": 1
													},
													{
														"declaration": 205,
														"isOffset": false,
														"isSlot": false,
														"src": "5273:15:0",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 205,
														"isOffset": true,
														"isSlot": false,
														"src": "5319:15:0",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 207,
														"isOffset": false,
														"isSlot": false,
														"src": "5394:4:0",
														"valueSize": 1
													},
													{
														"declaration": 203,
														"isOffset": false,
														"isSlot": false,
														"src": "5377:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 214,
												"nodeType": "InlineAssembly",
												"src": "5188:349:0"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "4285:696:0",
										"text": "@notice Creates a contract using create2 deterministic deployment.\n @param value The value to send to the new contract constructor.\n @param initCode The initCode to deploy.\n @param salt The salt to use for the create2 operation.\n @return createdAddr The created contract address.\n @dev Assembly procedure:\n     1. Load the free memory pointer.\n     2. Get the initCode length.\n     3. Copy the initCode from callata to memory at the free memory pointer.\n     4. Create the contract using Create2 with the passed salt parameter.\n     5. If creation failed (the address returned is zero), revert with CreateFailed()."
									},
									"functionSelector": "4847be6f",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 209,
												"name": "onlyAuthorized",
												"nameLocations": [
													"5121:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "5121:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5121:14:0"
										}
									],
									"name": "performCreate2",
									"nameLocation": "4995:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5018:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5010:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "initCode",
												"nameLocation": "5040:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5025:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5025:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5058:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5050:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 206,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5009:54:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "createdAddr",
												"nameLocation": "5161:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "5153:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5152:21:0"
									},
									"scope": 366,
									"src": "4986:557:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "5660:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 228,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5719:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseCordylineAccount_$366",
																		"typeString": "contract BaseCordylineAccount"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseCordylineAccount_$366",
																		"typeString": "contract BaseCordylineAccount"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5711:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 226,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5711:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5711:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 220,
																	"name": "entryPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		289
																	],
																	"referencedDeclaration": 289,
																	"src": "5670:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1933_$",
																		"typeString": "function () view returns (contract IEntryPoint)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5670:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																	"typeString": "contract IEntryPoint"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5683:9:0",
															"memberName": "depositTo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2050,
															"src": "5670:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
																"typeString": "function (address) payable external"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 223,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5700:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5704:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5700:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5670:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
															"typeString": "function (address) payable external"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5670:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "5670:55:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "5549:67:0",
										"text": "@notice Deposit more funds for this account in the entry point."
									},
									"functionSelector": "4a58db19",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDeposit",
									"nameLocation": "5630:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5640:2:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5660:0:0"
									},
									"scope": 366,
									"src": "5621:111:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "5989:164:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 243,
														"name": "withdrawAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "6003:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6030:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 244,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6022:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6022:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6003:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 253,
												"nodeType": "IfStatement",
												"src": "5999:90:0",
												"trueBody": {
													"id": 252,
													"nodeType": "Block",
													"src": "6034:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 249,
																	"name": "ZeroAddressNotAllowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "6055:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6055:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 251,
															"nodeType": "RevertStatement",
															"src": "6048:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 257,
															"name": "withdrawAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6122:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 258,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "6139:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 254,
																"name": "entryPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	289
																],
																"referencedDeclaration": 289,
																"src": "6098:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1933_$",
																	"typeString": "function () view returns (contract IEntryPoint)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6098:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6111:10:0",
														"memberName": "withdrawTo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2074,
														"src": "6098:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
															"typeString": "function (address payable,uint256) external"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6098:48:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "5738:146:0",
										"text": "@notice Withdraw value from the account's deposit.\n @param withdrawAddress Target to send to.\n @param amount Amount to withdraw."
									},
									"functionSelector": "4d44560d",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 240,
												"name": "onlyAuthorized",
												"nameLocations": [
													"5974:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "5974:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5974:14:0"
										}
									],
									"name": "withdrawDepositTo",
									"nameLocation": "5898:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "5932:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5916:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5916:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5957:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5949:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5915:49:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:0"
									},
									"scope": 366,
									"src": "5889:264:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "6324:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 273,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6372:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseCordylineAccount_$366",
																		"typeString": "contract BaseCordylineAccount"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseCordylineAccount_$366",
																		"typeString": "contract BaseCordylineAccount"
																	}
																],
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6364:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 271,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6364:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6364:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 268,
																"name": "entryPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	289
																],
																"referencedDeclaration": 289,
																"src": "6341:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1933_$",
																	"typeString": "function () view returns (contract IEntryPoint)"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6341:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6354:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2044,
														"src": "6341:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6341:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 267,
												"id": 276,
												"nodeType": "Return",
												"src": "6334:44:0"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "6159:106:0",
										"text": "@notice Check current account deposit in the entry point.\n @return The current account deposit."
									},
									"functionSelector": "c399ec88",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDeposit",
									"nameLocation": "6279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6289:2:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "6315:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6314:9:0"
									},
									"scope": 366,
									"src": "6270:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										496
									],
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "6496:36:0",
										"statements": [
											{
												"expression": {
													"id": 286,
													"name": "_ENTRY_POINT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "6513:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$1933",
														"typeString": "contract IEntryPoint"
													}
												},
												"functionReturnParameters": 285,
												"id": 287,
												"nodeType": "Return",
												"src": "6506:19:0"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "6391:27:0",
										"text": "@inheritdoc BaseAccount"
									},
									"functionSelector": "b0d691fe",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "entryPoint",
									"nameLocation": "6432:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6465:8:0"
									},
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6442:2:0"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "6483:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEntryPoint_$1933",
													"typeString": "contract IEntryPoint"
												},
												"typeName": {
													"id": 283,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 282,
														"name": "IEntryPoint",
														"nameLocations": [
															"6483:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1933,
														"src": "6483:11:0"
													},
													"referencedDeclaration": 1933,
													"src": "6483:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$1933",
														"typeString": "contract IEntryPoint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6482:13:0"
									},
									"scope": 366,
									"src": "6423:109:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "6538:61:0",
										"text": "@dev Must override to allow calls to protected functions."
									},
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_isFromOwner",
									"nameLocation": "6613:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6625:2:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6659:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6659:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:6:0"
									},
									"scope": 366,
									"src": "6604:61:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "6880:164:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 299,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6894:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6898:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6894:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "entryPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				289
																			],
																			"referencedDeclaration": 289,
																			"src": "6916:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1933_$",
																				"typeString": "function () view returns (contract IEntryPoint)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6916:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																			"typeString": "contract IEntryPoint"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																			"typeString": "contract IEntryPoint"
																		}
																	],
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6908:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6908:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6894:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 307,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6933:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6937:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6933:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 311,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6955:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_BaseCordylineAccount_$366",
																			"typeString": "contract BaseCordylineAccount"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_BaseCordylineAccount_$366",
																			"typeString": "contract BaseCordylineAccount"
																		}
																	],
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6947:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6947:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6947:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6933:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6894:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6964:15:0",
														"subExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 315,
																"name": "_isFromOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "6965:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6965:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6894:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"nodeType": "IfStatement",
												"src": "6890:148:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "6981:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 320,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7016:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7020:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7016:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 319,
																	"name": "NotAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "7002:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7002:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 323,
															"nodeType": "RevertStatement",
															"src": "6995:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "6671:163:0",
										"text": "@dev Revert if the caller is not any of:\n 1. The entry point\n 2. The account itself (when redirected through `execute`, etc.)\n 3. An owner"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_onlyAuthorized",
									"nameLocation": "6848:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6863:2:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6880:0:0"
									},
									"scope": 366,
									"src": "6839:205:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "7411:80:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 335,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "7428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 337,
														"name": "SIG_VALIDATION_FAILED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "7463:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7428:56:0",
													"trueExpression": {
														"id": 336,
														"name": "SIG_VALIDATION_SUCCESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1516,
														"src": "7438:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 334,
												"id": 339,
												"nodeType": "Return",
												"src": "7421:63:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "7050:261:0",
										"text": "@dev Convert a boolean success value to a validation data value.\n @param success The success value to be converted.\n @return validationData The validation data value. 0 if success is true, 1 (SIG_VALIDATION_FAILED) if\n success is false."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_successToValidationData",
									"nameLocation": "7325:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7355:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "7350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7350:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7349:14:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "7395:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "7387:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7386:24:0"
									},
									"scope": 366,
									"src": "7316:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "8165:332:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8200:291:0",
													"nodeType": "YulBlock",
													"src": "8200:291:0",
													"statements": [
														{
															"nativeSrc": "8214:77:0",
															"nodeType": "YulVariableDeclaration",
															"src": "8214:77:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8231:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:0"
																		},
																		"nativeSrc": "8231:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8231:5:0"
																	},
																	{
																		"name": "target",
																		"nativeSrc": "8238:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "8238:6:0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8246:5:0",
																		"nodeType": "YulIdentifier",
																		"src": "8246:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8257:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "8257:4:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8263:4:0",
																				"nodeType": "YulLiteral",
																				"src": "8263:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8253:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8253:3:0"
																		},
																		"nativeSrc": "8253:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8253:15:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8276:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "8276:4:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8270:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "8270:5:0"
																		},
																		"nativeSrc": "8270:11:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8270:11:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8283:4:0",
																		"nodeType": "YulLiteral",
																		"src": "8283:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8289:1:0",
																		"nodeType": "YulLiteral",
																		"src": "8289:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8226:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "8226:4:0"
																},
																"nativeSrc": "8226:65:0",
																"nodeType": "YulFunctionCall",
																"src": "8226:65:0"
															},
															"variables": [
																{
																	"name": "succ",
																	"nativeSrc": "8218:4:0",
																	"nodeType": "YulTypedName",
																	"src": "8218:4:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8321:160:0",
																"nodeType": "YulBlock",
																"src": "8321:160:0",
																"statements": [
																	{
																		"nativeSrc": "8339:22:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8339:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8356:4:0",
																					"nodeType": "YulLiteral",
																					"src": "8356:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8350:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "8350:5:0"
																			},
																			"nativeSrc": "8350:11:0",
																			"nodeType": "YulFunctionCall",
																			"src": "8350:11:0"
																		},
																		"variables": [
																			{
																				"name": "fmp",
																				"nativeSrc": "8343:3:0",
																				"nodeType": "YulTypedName",
																				"src": "8343:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fmp",
																					"nativeSrc": "8393:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8393:3:0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8398:4:0",
																					"nodeType": "YulLiteral",
																					"src": "8398:4:0",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8404:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "8404:14:0"
																					},
																					"nativeSrc": "8404:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "8404:16:0"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8378:14:0",
																				"nodeType": "YulIdentifier",
																				"src": "8378:14:0"
																			},
																			"nativeSrc": "8378:43:0",
																			"nodeType": "YulFunctionCall",
																			"src": "8378:43:0"
																		},
																		"nativeSrc": "8378:43:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "8378:43:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "fmp",
																					"nativeSrc": "8445:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "8445:3:0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8450:14:0",
																						"nodeType": "YulIdentifier",
																						"src": "8450:14:0"
																					},
																					"nativeSrc": "8450:16:0",
																					"nodeType": "YulFunctionCall",
																					"src": "8450:16:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8438:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "8438:6:0"
																			},
																			"nativeSrc": "8438:29:0",
																			"nodeType": "YulFunctionCall",
																			"src": "8438:29:0"
																		},
																		"nativeSrc": "8438:29:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "8438:29:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "succ",
																		"nativeSrc": "8315:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "8315:4:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8308:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8308:6:0"
																},
																"nativeSrc": "8308:12:0",
																"nodeType": "YulFunctionCall",
																"src": "8308:12:0"
															},
															"nativeSrc": "8305:176:0",
															"nodeType": "YulIf",
															"src": "8305:176:0"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "8257:4:0",
														"valueSize": 1
													},
													{
														"declaration": 348,
														"isOffset": false,
														"isSlot": false,
														"src": "8276:4:0",
														"valueSize": 1
													},
													{
														"declaration": 344,
														"isOffset": false,
														"isSlot": false,
														"src": "8238:6:0",
														"valueSize": 1
													},
													{
														"declaration": 346,
														"isOffset": false,
														"isSlot": false,
														"src": "8246:5:0",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 351,
												"nodeType": "InlineAssembly",
												"src": "8175:316:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "7497:589:0",
										"text": "@dev Assembly procedure:\n     1. Execute the call, passing:\n         1. The gas\n         2. The target address\n         3. The call value\n         4. The pointer to the start location of the callData in memory\n         5. The length of the calldata\n     2. If the call failed, bubble up the revert reason by doing the following:\n         1. Load the free memory pointer\n         2. Copy the return data (which is the revert reason) to memory at the free memory pointer\n         3. Revert with the copied return data"
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_call",
									"nameLocation": "8100:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8114:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "8106:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8130:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "8122:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8150:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "8137:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8137:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8105:50:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8165:0:0"
									},
									"scope": 366,
									"src": "8091:406:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1460
									],
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "8595:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 361,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "8606:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 362,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8605:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8605:19:0"
											}
										]
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 359,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 358,
												"name": "onlyAuthorized",
												"nameLocations": [
													"8580:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "8580:14:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8580:14:0"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "8512:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 357,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8571:8:0"
									},
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "8538:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "8530:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8529:27:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8595:0:0"
									},
									"scope": 366,
									"src": "8503:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 367,
							"src": "531:8102:0",
							"usedErrors": [
								34,
								36,
								38,
								42,
								44,
								472,
								1425,
								1428
							],
							"usedEvents": [
								1446
							]
						}
					],
					"src": "36:8598:0"
				},
				"id": 0
			},
			"src/common/ERC1271.sol": {
				"ast": {
					"absolutePath": "src/common/ERC1271.sol",
					"exportedSymbols": {
						"EIP712": [
							1419
						],
						"ERC1271": [
							446
						]
					},
					"id": 447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "src/external/solady/EIP712.sol",
							"file": "../external/solady/EIP712.sol",
							"id": 370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 447,
							"sourceUnit": 1420,
							"src": "58:53:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 369,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1419,
										"src": "66:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 371,
										"name": "EIP712",
										"nameLocations": [
											"142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1419,
										"src": "142:6:1"
									},
									"id": 372,
									"nodeType": "InheritanceSpecifier",
									"src": "142:6:1"
								}
							],
							"canonicalName": "ERC1271",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 446,
							"linearizedBaseContracts": [
								446,
								1419
							],
							"name": "ERC1271",
							"nameLocation": "131:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "155:61:1",
										"text": "@dev bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))"
									},
									"id": 376,
									"mutability": "constant",
									"name": "_1271_MAGIC_VALUE_SUCCESS",
									"nameLocation": "246:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 446,
									"src": "221:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 374,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "221:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783136323662613765",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "274:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_371636862_by_1",
											"typeString": "int_const 371636862"
										},
										"value": "0x1626ba7e"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 379,
									"mutability": "constant",
									"name": "_1271_MAGIC_VALUE_FAILURE",
									"nameLocation": "315:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 446,
									"src": "290:63:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 377,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "290:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786666666666666666",
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967295_by_1",
											"typeString": "int_const 4294967295"
										},
										"value": "0xffffffff"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 384,
									"mutability": "constant",
									"name": "_MESSAGE_TYPEHASH",
									"nameLocation": "385:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 446,
									"src": "359:97:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 380,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "436f7264796c696e654163636f756e744d657373616765286279746573206d65737361676529",
												"id": 382,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "415:40:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_cb7d198b374e49569d08ee524f815a8372822602507550536005b62725c07948",
													"typeString": "literal_string \"CordylineAccountMessage(bytes message)\""
												},
												"value": "CordylineAccountMessage(bytes message)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_cb7d198b374e49569d08ee524f815a8372822602507550536005b62725c07948",
													"typeString": "literal_string \"CordylineAccountMessage(bytes message)\""
												}
											],
											"id": 381,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "405:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "405:51:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "727:141:1",
										"statements": [
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "745:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "737:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 392,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 403,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 397,
																	"name": "_MESSAGE_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "779:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 399,
																			"name": "message",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "808:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 398,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "798:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "798:18:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 395,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "768:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "772:6:1",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "768:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "768:49:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "758:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "758:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "737:81:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "850:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 404,
														"name": "_hashTypedData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "835:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 391,
												"id": 407,
												"nodeType": "Return",
												"src": "828:33:1"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "463:183:1",
										"text": "@notice Returns the replay-safe hash of a message that can be signed by owners.\n @param message Message that should be hashed.\n @return The replay-safe message hash."
									},
									"functionSelector": "0a1028c4",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "660:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "688:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "675:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "675:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:22:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "718:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 389,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:9:1"
									},
									"scope": 446,
									"src": "651:217:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "1381:183:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 423,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1439:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"id": 421,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1428:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1432:6:1",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"src": "1428:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1428:16:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 420,
																"name": "getMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "1413:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) view returns (bytes32)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1413:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 426,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "1447:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 419,
														"name": "_isValidSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1395:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes32,bytes calldata) view returns (bool)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1395:62:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "1391:125:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "1459:57:1",
													"statements": [
														{
															"expression": {
																"id": 428,
																"name": "_1271_MAGIC_VALUE_SUCCESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "1480:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"functionReturnParameters": 418,
															"id": 429,
															"nodeType": "Return",
															"src": "1473:32:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 432,
													"name": "_1271_MAGIC_VALUE_FAILURE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "1532:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 418,
												"id": 433,
												"nodeType": "Return",
												"src": "1525:32:1"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "874:399:1",
										"text": "@dev The signature is valid if it is signed by the owner's private key (if the owner is an EOA) or if it is\n a valid ERC-1271 signature from the owner (if the owner is a contract).\n @param hash Hash of the data to be signed.\n @param signature Signature byte array associated with the data.\n @return Magic value `0x1626ba7e` if validation succeeded, else `0xffffffff`."
									},
									"functionSelector": "1626ba7e",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "1287:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1312:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1304:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 411,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1333:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1318:24:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1318:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1303:40:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1373:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 416,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:1"
									},
									"scope": 446,
									"src": "1278:286:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1570:278:1",
										"text": "@dev Must override to provide the signature verification logic.\n @param replaySafeHash The replay-safe hash that is derived from the original message.\n @param signature The signature passed to `isValidSignature`.\n @return Whether the signature is valid."
									},
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidSignature",
									"nameLocation": "1862:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "replaySafeHash",
												"nameLocation": "1888:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1880:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 437,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1919:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1904:24:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1879:50:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1961:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 442,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1961:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:6:1"
									},
									"scope": 446,
									"src": "1853:114:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 447,
							"src": "113:1856:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1938:1"
				},
				"id": 1
			},
			"src/core/BaseAccount.sol": {
				"ast": {
					"absolutePath": "src/core/BaseAccount.sol",
					"exportedSymbols": {
						"BaseAccount": [
							708
						],
						"Exec": [
							2272
						],
						"IAccount": [
							1714
						],
						"IAggregator": [
							1748
						],
						"IEntryPoint": [
							1933
						],
						"INonceManager": [
							1952
						],
						"ISenderCreator": [
							1971
						],
						"IStakeManager": [
							2075
						],
						"PackedUserOperation": [
							2097
						],
						"UserOperationLib": [
							1044
						],
						"calldataKeccak": [
							1669
						],
						"min": [
							1687
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "src/interfaces/IAccount.sol",
							"file": "../interfaces/IAccount.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 709,
							"sourceUnit": 1715,
							"src": "182:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IEntryPoint.sol",
							"file": "../interfaces/IEntryPoint.sol",
							"id": 450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 709,
							"sourceUnit": 1934,
							"src": "219:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/utils/Exec.sol",
							"file": "../utils/Exec.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 709,
							"sourceUnit": 2273,
							"src": "259:27:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/core/UserOperationLib.sol",
							"file": "./UserOperationLib.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 709,
							"sourceUnit": 1045,
							"src": "287:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "IAccount",
										"nameLocations": [
											"587:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1714,
										"src": "587:8:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "587:8:2"
								}
							],
							"canonicalName": "BaseAccount",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "321:232:2",
								"text": " Basic account implementation.\n This contract provides the basic logic for implementing the IAccount interface - validateUserOp\n Specific account implementation should inherit it and provide the account-specific logic."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708,
								1714
							],
							"name": "BaseAccount",
							"nameLocation": "572:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 459,
									"libraryName": {
										"id": 456,
										"name": "UserOperationLib",
										"nameLocations": [
											"608:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "608:16:2"
									},
									"nodeType": "UsingForDirective",
									"src": "602:47:2",
									"typeName": {
										"id": 458,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 457,
											"name": "PackedUserOperation",
											"nameLocations": [
												"629:19:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2097,
											"src": "629:19:2"
										},
										"referencedDeclaration": 2097,
										"src": "629:19:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
											"typeString": "struct PackedUserOperation"
										}
									}
								},
								{
									"canonicalName": "BaseAccount.Call",
									"id": 466,
									"members": [
										{
											"constant": false,
											"id": 461,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "685:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 466,
											"src": "677:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 460,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "677:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 463,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "709:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 466,
											"src": "701:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 462,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "701:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 465,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "730:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 466,
											"src": "724:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 464,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "724:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Call",
									"nameLocation": "662:4:2",
									"nodeType": "StructDefinition",
									"scope": 708,
									"src": "655:86:2",
									"visibility": "public"
								},
								{
									"errorSelector": "5a154675",
									"id": 472,
									"name": "ExecuteError",
									"nameLocation": "753:12:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "787:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "781:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 469,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "781:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:28:2"
									},
									"src": "747:47:2"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "1039:63:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 483,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1086:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BaseAccount_$708",
																		"typeString": "contract BaseAccount"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BaseAccount_$708",
																		"typeString": "contract BaseAccount"
																	}
																],
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1078:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1078:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1078:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1093:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 478,
																"name": "entryPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "1056:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1933_$",
																	"typeString": "function () view returns (contract IEntryPoint)"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1056:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																"typeString": "contract IEntryPoint"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1069:8:2",
														"memberName": "getNonce",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1945,
														"src": "1056:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$",
															"typeString": "function (address,uint192) view external returns (uint256)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1056:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 477,
												"id": 487,
												"nodeType": "Return",
												"src": "1049:46:2"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "800:176:2",
										"text": " Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
									},
									"functionSelector": "d087d288",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNonce",
									"nameLocation": "990:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:2:2"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1030:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:9:2"
									},
									"scope": 708,
									"src": "981:121:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1108:137:2",
										"text": " Return the entryPoint used by this account.\n Subclass should return the current entryPoint used by this account."
									},
									"functionSelector": "b0d691fe",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "entryPoint",
									"nameLocation": "1259:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1301:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IEntryPoint_$1933",
													"typeString": "contract IEntryPoint"
												},
												"typeName": {
													"id": 493,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 492,
														"name": "IEntryPoint",
														"nameLocations": [
															"1301:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1933,
														"src": "1301:11:2"
													},
													"referencedDeclaration": 1933,
													"src": "1301:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IEntryPoint_$1933",
														"typeString": "contract IEntryPoint"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:13:2"
									},
									"scope": 708,
									"src": "1250:64:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "1469:169:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 506,
														"name": "_requireForExecute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1479:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "1479:20:2"
											},
											{
												"assignments": [
													510
												],
												"declarations": [
													{
														"constant": false,
														"id": 510,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "1515:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "1510:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 509,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1510:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1530:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1538:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 515,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1545:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 516,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "1551:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1551:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 511,
															"name": "Exec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "1520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Exec_$2272_$",
																"typeString": "type(library Exec)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1525:4:2",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2219,
														"src": "1520:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory,uint256) returns (bool)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1510:51:2"
											},
											{
												"condition": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1575:3:2",
													"subExpression": {
														"id": 520,
														"name": "ok",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "1576:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "1571:61:2",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "1580:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 522,
																		"name": "Exec",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "1594:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Exec_$2272_$",
																			"typeString": "type(library Exec)"
																		}
																	},
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1599:20:2",
																	"memberName": "revertWithReturnData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2271,
																	"src": "1594:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1594:27:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 526,
															"nodeType": "ExpressionStatement",
															"src": "1594:27:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1320:58:2",
										"text": " execute a single call from the account."
									},
									"functionSelector": "b61d27f6",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "1392:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1408:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1400:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1424:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1416:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1446:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1431:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 502,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1431:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:52:2"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:2"
									},
									"scope": 708,
									"src": "1383:255:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "1949:503:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 538,
														"name": "_requireForExecute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1959:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1959:20:2"
											},
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "callsLength",
														"nameLocation": "1998:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 602,
														"src": "1990:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1990:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"expression": {
														"id": 543,
														"name": "calls",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2012:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Call_$466_calldata_ptr_$dyn_calldata_ptr",
															"typeString": "struct BaseAccount.Call calldata[] calldata"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2018:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2012:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1990:34:2"
											},
											{
												"body": {
													"id": 600,
													"nodeType": "Block",
													"src": "2076:370:2",
													"statements": [
														{
															"assignments": [
																558
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 558,
																	"mutability": "mutable",
																	"name": "call",
																	"nameLocation": "2104:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 600,
																	"src": "2090:18:2",
																	"stateVariable": false,
																	"storageLocation": "calldata",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Call_$466_calldata_ptr",
																		"typeString": "struct BaseAccount.Call"
																	},
																	"typeName": {
																		"id": 557,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 556,
																			"name": "Call",
																			"nameLocations": [
																				"2090:4:2"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 466,
																			"src": "2090:4:2"
																		},
																		"referencedDeclaration": 466,
																		"src": "2090:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Call_$466_storage_ptr",
																			"typeString": "struct BaseAccount.Call"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 562,
															"initialValue": {
																"baseExpression": {
																	"id": 559,
																	"name": "calls",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "2111:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Call_$466_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "struct BaseAccount.Call calldata[] calldata"
																	}
																},
																"id": 561,
																"indexExpression": {
																	"id": 560,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "2117:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2111:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Call_$466_calldata_ptr",
																	"typeString": "struct BaseAccount.Call calldata"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2090:29:2"
														},
														{
															"assignments": [
																564
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 564,
																	"mutability": "mutable",
																	"name": "ok",
																	"nameLocation": "2138:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 600,
																	"src": "2133:7:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 563,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "2133:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 576,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 567,
																			"name": "call",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "2153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Call_$466_calldata_ptr",
																				"typeString": "struct BaseAccount.Call calldata"
																			}
																		},
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2158:6:2",
																		"memberName": "target",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 461,
																		"src": "2153:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 569,
																			"name": "call",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "2166:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Call_$466_calldata_ptr",
																				"typeString": "struct BaseAccount.Call calldata"
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2171:5:2",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 463,
																		"src": "2166:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 571,
																			"name": "call",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "2178:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Call_$466_calldata_ptr",
																				"typeString": "struct BaseAccount.Call calldata"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2183:4:2",
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 465,
																		"src": "2178:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 573,
																			"name": "gasleft",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967289,
																			"src": "2189:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2189:9:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 565,
																		"name": "Exec",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "2143:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Exec_$2272_$",
																			"typeString": "type(library Exec)"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2148:4:2",
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2219,
																	"src": "2143:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256,bytes memory,uint256) returns (bool)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2143:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2133:66:2"
														},
														{
															"condition": {
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2217:3:2",
																"subExpression": {
																	"id": 577,
																	"name": "ok",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "2218:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 599,
															"nodeType": "IfStatement",
															"src": "2213:223:2",
															"trueBody": {
																"id": 598,
																"nodeType": "Block",
																"src": "2222:214:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 579,
																				"name": "callsLength",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 542,
																				"src": "2244:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2259:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2244:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 596,
																			"nodeType": "Block",
																			"src": "2336:86:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 589,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 547,
																								"src": "2378:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 592,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2400:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"expression": {
																										"id": 590,
																										"name": "Exec",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2272,
																										"src": "2381:4:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_Exec_$2272_$",
																											"typeString": "type(library Exec)"
																										}
																									},
																									"id": 591,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "2386:13:2",
																									"memberName": "getReturnData",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2254,
																									"src": "2381:18:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function (uint256) pure returns (bytes memory)"
																									}
																								},
																								"id": 593,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2381:21:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 588,
																							"name": "ExecuteError",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 472,
																							"src": "2365:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_error_$",
																								"typeString": "function (uint256,bytes memory) pure returns (error)"
																							}
																						},
																						"id": 594,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2365:38:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_error",
																							"typeString": "error"
																						}
																					},
																					"id": 595,
																					"nodeType": "RevertStatement",
																					"src": "2358:45:2"
																				}
																			]
																		},
																		"id": 597,
																		"nodeType": "IfStatement",
																		"src": "2240:182:2",
																		"trueBody": {
																			"id": 587,
																			"nodeType": "Block",
																			"src": "2262:68:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 582,
																								"name": "Exec",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2272,
																								"src": "2284:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Exec_$2272_$",
																									"typeString": "type(library Exec)"
																								}
																							},
																							"id": 584,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2289:20:2",
																							"memberName": "revertWithReturnData",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2271,
																							"src": "2284:25:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 585,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2284:27:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 586,
																					"nodeType": "ExpressionStatement",
																					"src": "2284:27:2"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "2054:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 551,
														"name": "callsLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "2058:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2054:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 601,
												"initializationExpression": {
													"assignments": [
														547
													],
													"declarations": [
														{
															"constant": false,
															"id": 547,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2047:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 601,
															"src": "2039:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 546,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2039:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 549,
													"initialValue": {
														"hexValue": "30",
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2051:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2039:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2071:3:2",
														"subExpression": {
															"id": 553,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "2071:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 555,
													"nodeType": "ExpressionStatement",
													"src": "2071:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2034:412:2"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "1644:238:2",
										"text": " execute a batch of calls.\n revert on the first call that fails.\n If the batch reverts, and it contains more than a single call, then wrap the revert with ExecuteError,\n  to mark the failing call index."
									},
									"functionSelector": "34fcd5be",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeBatch",
									"nameLocation": "1896:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "calls",
												"nameLocation": "1925:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1909:21:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Call_$466_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct BaseAccount.Call[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 532,
															"name": "Call",
															"nameLocations": [
																"1909:4:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 466,
															"src": "1909:4:2"
														},
														"referencedDeclaration": 466,
														"src": "1909:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Call_$466_storage_ptr",
															"typeString": "struct BaseAccount.Call"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "1909:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Call_$466_storage_$dyn_storage_ptr",
														"typeString": "struct BaseAccount.Call[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:23:2"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 708,
									"src": "1887:565:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1713
									],
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "2686:186:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 617,
														"name": "_requireFromEntryPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "2696:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2696:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "2696:24:2"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 620,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "2730:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 622,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "2766:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															{
																"id": 623,
																"name": "userOpHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "2774:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 621,
															"name": "_validateSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2747:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_PackedUserOperation_$2097_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$",
																"typeString": "function (struct PackedUserOperation calldata,bytes32) returns (uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2747:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2730:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "2730:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 628,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 607,
																"src": "2810:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2817:5:2",
															"memberName": "nonce",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2082,
															"src": "2810:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_validateNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "2795:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "2795:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "missingAccountFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2845:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "_payPrefund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "2833:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2833:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "2833:32:2"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2458:24:2",
										"text": "@inheritdoc IAccount"
									},
									"functionSelector": "19822f7c",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateUserOp",
									"nameLocation": "2496:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 613,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2644:8:2"
									},
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2549:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2520:35:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "PackedUserOperation",
														"nameLocations": [
															"2520:19:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "2520:19:2"
													},
													"referencedDeclaration": 2097,
													"src": "2520:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "2573:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2565:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 608,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "missingAccountFunds",
												"nameLocation": "2601:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2593:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2510:116:2"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "2670:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2662:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2661:24:2"
									},
									"scope": 708,
									"src": "2487:385:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "3009:127:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 642,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3040:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3044:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3040:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 646,
																			"name": "entryPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "3062:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$1933_$",
																				"typeString": "function () view returns (contract IEntryPoint)"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3062:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																			"typeString": "contract IEntryPoint"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IEntryPoint_$1933",
																			"typeString": "contract IEntryPoint"
																		}
																	],
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3054:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 644,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3054:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3054:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3040:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6163636f756e743a206e6f742066726f6d20456e747279506f696e74",
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3089:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
																"typeString": "literal_string \"account: not from EntryPoint\""
															},
															"value": "account: not from EntryPoint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50",
																"typeString": "literal_string \"account: not from EntryPoint\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3019:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3019:110:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "3019:110:2"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "2878:70:2",
										"text": " Ensure the request comes from the known entrypoint."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireFromEntryPoint",
									"nameLocation": "2962:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2984:2:2"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3009:0:2"
									},
									"scope": 708,
									"src": "2953:183:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3194:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 657,
														"name": "_requireFromEntryPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3204:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3204:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "3204:24:2"
											}
										]
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireForExecute",
									"nameLocation": "3151:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3169:2:2"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3194:0:2"
									},
									"scope": 708,
									"src": "3142:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3241:1114:2",
										"text": " Validate the signature is valid for this message.\n @param userOp          - Validate the userOp.signature field.\n @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\n                          (also hashes the entrypoint and chain id)\n @return validationData - Signature and time-range of this operation.\n                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                    otherwise, an address of an aggregator contract.\n                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          If the account doesn't use time-range, it is enough to return\n                          SIG_VALIDATION_FAILED value (1) for signature failure.\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."
									},
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_validateSignature",
									"nameLocation": "4369:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "4426:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4397:35:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "PackedUserOperation",
														"nameLocations": [
															"4397:19:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "4397:19:2"
													},
													"referencedDeclaration": 2097,
													"src": "4397:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "4450:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4442:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4387:79:2"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "4501:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "4493:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:24:2"
									},
									"scope": 708,
									"src": "4360:157:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "5229:7:2",
										"statements": []
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "4523:640:2",
										"text": " Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateNonce",
									"nameLocation": "5177:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "5200:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "5192:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5191:15:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5229:0:2"
									},
									"scope": 708,
									"src": "5168:68:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5878:283:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 685,
														"name": "missingAccountFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "5892:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5915:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5892:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 705,
												"nodeType": "IfStatement",
												"src": "5888:267:2",
												"trueBody": {
													"id": 704,
													"nodeType": "Block",
													"src": "5918:237:2",
													"statements": [
														{
															"assignments": [
																689,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 689,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "5938:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 704,
																	"src": "5933:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5933:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 700,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6041:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 692,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "5958:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5962:6:2",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "5958:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5950:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_payable_$",
																					"typeString": "type(address payable)"
																				},
																				"typeName": {
																					"id": 690,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5950:8:2",
																					"stateMutability": "payable",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5950:19:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5970:4:2",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "5950:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 696,
																			"name": "missingAccountFunds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 682,
																			"src": "6003:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "5950:90:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5950:94:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5932:112:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 701,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "6059:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 702,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6058:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 703,
															"nodeType": "ExpressionStatement",
															"src": "6058:9:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "5242:564:2",
										"text": " Sends to the entrypoint (msg.sender) the missing funds for this transaction.\n SubClass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again).\n @param missingAccountFunds - The minimum value this method should send the entrypoint.\n                              This value MAY be zero, in case there is enough deposit,\n                              or the userOp has a paymaster."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_payPrefund",
									"nameLocation": "5820:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "missingAccountFunds",
												"nameLocation": "5840:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5832:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:29:2"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5878:0:2"
									},
									"scope": 708,
									"src": "5811:350:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 709,
							"src": "554:5609:2",
							"usedErrors": [
								472
							],
							"usedEvents": []
						}
					],
					"src": "32:6132:2"
				},
				"id": 2
			},
			"src/core/UserOperationLib.sol": {
				"ast": {
					"absolutePath": "src/core/UserOperationLib.sol",
					"exportedSymbols": {
						"PackedUserOperation": [
							2097
						],
						"UserOperationLib": [
							1044
						],
						"calldataKeccak": [
							1669
						],
						"min": [
							1687
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "src/interfaces/PackedUserOperation.sol",
							"file": "../interfaces/PackedUserOperation.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 2098,
							"src": "100:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/helpers/Helpers.sol",
							"file": "../helpers/Helpers.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1045,
							"sourceUnit": 1698,
							"src": "148:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 712,
										"name": "calldataKeccak",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1669,
										"src": "156:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 713,
										"name": "min",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1687,
										"src": "172:3:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UserOperationLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 715,
								"nodeType": "StructuredDocumentation",
								"src": "209:77:3",
								"text": " Utility functions helpful when working with UserOperation structs."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044
							],
							"name": "UserOperationLib",
							"nameLocation": "295:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "b29a8ff4",
									"id": 718,
									"mutability": "constant",
									"name": "PAYMASTER_VALIDATION_GAS_OFFSET",
									"nameLocation": "343:31:3",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "319:60:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 716,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 717,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "377:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "25093e1b",
									"id": 721,
									"mutability": "constant",
									"name": "PAYMASTER_POSTOP_GAS_OFFSET",
									"nameLocation": "409:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "385:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 719,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3336",
										"id": 720,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "439:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_36_by_1",
											"typeString": "int_const 36"
										},
										"value": "36"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ede31502",
									"id": 724,
									"mutability": "constant",
									"name": "PAYMASTER_DATA_OFFSET",
									"nameLocation": "471:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "447:50:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 722,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "447:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3532",
										"id": 723,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "495:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_52_by_1",
											"typeString": "int_const 52"
										},
										"value": "52"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "804:209:3",
										"statements": [
											{
												"id": 750,
												"nodeType": "UncheckedBlock",
												"src": "814:193:3",
												"statements": [
													{
														"assignments": [
															734,
															736
														],
														"declarations": [
															{
																"constant": false,
																"id": 734,
																"mutability": "mutable",
																"name": "maxPriorityFeePerGas",
																"nameLocation": "847:20:3",
																"nodeType": "VariableDeclaration",
																"scope": 750,
																"src": "839:28:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 733,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "839:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 736,
																"mutability": "mutable",
																"name": "maxFeePerGas",
																"nameLocation": "877:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 750,
																"src": "869:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 735,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "869:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 741,
														"initialValue": {
															"arguments": [
																{
																	"expression": {
																		"id": 738,
																		"name": "userOp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "905:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																			"typeString": "struct PackedUserOperation calldata"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "912:7:3",
																	"memberName": "gasFees",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "905:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 737,
																"name": "unpackUints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "893:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (bytes32) pure returns (uint256,uint256)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "893:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "838:82:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 743,
																	"name": "maxFeePerGas",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "945:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 744,
																		"name": "maxPriorityFeePerGas",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "959:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 745,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "982:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "988:7:3",
																		"memberName": "basefee",
																		"nodeType": "MemberAccess",
																		"src": "982:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "959:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 742,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1687,
																"src": "941:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "941:55:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 732,
														"id": 749,
														"nodeType": "Return",
														"src": "934:62:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "504:194:3",
										"text": " Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gasPrice",
									"nameLocation": "712:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "759:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "730:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 727,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 726,
														"name": "PackedUserOperation",
														"nameLocations": [
															"730:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "730:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "730:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:51:3"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "795:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:9:3"
									},
									"scope": 1044,
									"src": "703:310:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 757,
									"mutability": "constant",
									"name": "PACKED_USEROP_TYPEHASH",
									"nameLocation": "1045:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 1044,
									"src": "1019:252:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 753,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1019:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5061636b6564557365724f7065726174696f6e28616464726573732073656e6465722c75696e74323536206e6f6e63652c627974657320696e6974436f64652c62797465732063616c6c446174612c62797465733332206163636f756e744761734c696d6974732c75696e7432353620707265566572696669636174696f6e4761732c6279746573333220676173466565732c6279746573207061796d6173746572416e644461746129",
												"id": 755,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1093:172:3",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e",
													"typeString": "literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""
												},
												"value": "PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e",
													"typeString": "literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""
												}
											],
											"id": 754,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1074:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 756,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1074:197:3",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "1650:761:3",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "1668:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "1660:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 768,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1660:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"expression": {
														"id": 770,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "1677:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
															"typeString": "struct PackedUserOperation calldata"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1684:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2080,
													"src": "1677:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1660:30:3"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "1708:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "1700:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1700:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"expression": {
														"id": 775,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "1716:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
															"typeString": "struct PackedUserOperation calldata"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1723:5:3",
													"memberName": "nonce",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2082,
													"src": "1716:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1700:28:3"
											},
											{
												"assignments": [
													779
												],
												"declarations": [
													{
														"constant": false,
														"id": 779,
														"mutability": "mutable",
														"name": "hashInitCode",
														"nameLocation": "1746:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "1738:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 778,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1738:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 789,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 780,
															"name": "overrideInitCodeHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "1761:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1785:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1761:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 785,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "1827:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																		"typeString": "struct PackedUserOperation calldata"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1834:8:3",
																"memberName": "initCode",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2084,
																"src": "1827:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															],
															"id": 784,
															"name": "calldataKeccak",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1669,
															"src": "1812:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes calldata) pure returns (bytes32)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1812:31:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1761:82:3",
													"trueExpression": {
														"id": 783,
														"name": "overrideInitCodeHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "1789:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1738:105:3"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "hashCallData",
														"nameLocation": "1861:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "1853:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 790,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1853:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 793,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "1891:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1898:8:3",
															"memberName": "callData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2086,
															"src": "1891:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 792,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "1876:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1876:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1853:54:3"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "accountGasLimits",
														"nameLocation": "1925:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "1917:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 797,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1917:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"expression": {
														"id": 799,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "1944:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
															"typeString": "struct PackedUserOperation calldata"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1951:16:3",
													"memberName": "accountGasLimits",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2088,
													"src": "1944:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1917:50:3"
											},
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "preVerificationGas",
														"nameLocation": "1985:18:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "1977:26:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 802,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1977:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"expression": {
														"id": 804,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "2006:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
															"typeString": "struct PackedUserOperation calldata"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2013:18:3",
													"memberName": "preVerificationGas",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2090,
													"src": "2006:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1977:54:3"
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "gasFees",
														"nameLocation": "2049:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "2041:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 807,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2041:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"expression": {
														"id": 809,
														"name": "userOp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "2059:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
															"typeString": "struct PackedUserOperation calldata"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2066:7:3",
													"memberName": "gasFees",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2092,
													"src": "2059:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2041:32:3"
											},
											{
												"assignments": [
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "hashPaymasterAndData",
														"nameLocation": "2091:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "2083:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 812,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2083:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 815,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "2129:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2136:16:3",
															"memberName": "paymasterAndData",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2094,
															"src": "2129:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 814,
														"name": "calldataKeccak",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "2114:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes calldata) pure returns (bytes32)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2114:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2083:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 821,
																"name": "UserOperationLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "2195:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_UserOperationLib_$1044_$",
																	"typeString": "type(library UserOperationLib)"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2212:22:3",
															"memberName": "PACKED_USEROP_TYPEHASH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 757,
															"src": "2195:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 823,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "2248:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "2256:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 825,
															"name": "hashInitCode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "2275:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 826,
															"name": "hashCallData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2289:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 827,
															"name": "accountGasLimits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2315:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 828,
															"name": "preVerificationGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "2333:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 829,
															"name": "gasFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "2353:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 830,
															"name": "hashPaymasterAndData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2374:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 819,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2171:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2175:6:3",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "2171:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:233:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 767,
												"id": 832,
												"nodeType": "Return",
												"src": "2164:240:3"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "1278:221:3",
										"text": " Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nameLocation": "1513:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1558:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1529:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 759,
														"name": "PackedUserOperation",
														"nameLocations": [
															"1529:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "1529:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "1529:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "overrideInitCodeHash",
												"nameLocation": "1582:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1574:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 762,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1519:89:3"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "1645:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1632:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1632:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:18:3"
									},
									"scope": 1044,
									"src": "1504:907:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "2524:69:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 844,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "2556:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 843,
																"name": "unpackHigh128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "2542:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
																	"typeString": "function (bytes32) pure returns (uint256)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2542:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 847,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "2578:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 846,
																"name": "unpackLow128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "2565:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
																	"typeString": "function (bytes32) pure returns (uint256)"
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2565:20:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 849,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2541:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 842,
												"id": 850,
												"nodeType": "Return",
												"src": "2534:52:3"
											}
										]
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackUints",
									"nameLocation": "2426:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "2455:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2447:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:30:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "high128",
												"nameLocation": "2499:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2491:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2491:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "low128",
												"nameLocation": "2516:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2508:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:33:3"
									},
									"scope": 1044,
									"src": "2417:176:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "2727:46:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 861,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "2752:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2744:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 859,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2744:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2744:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "313238",
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2763:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "2744:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 858,
												"id": 865,
												"nodeType": "Return",
												"src": "2737:29:3"
											}
										]
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackHigh128",
									"nameLocation": "2665:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "2687:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2679:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 853,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:16:3"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "2718:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:9:3"
									},
									"scope": 1044,
									"src": "2656:117:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2905:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 878,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "2938:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2930:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 876,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2930:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2930:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2922:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 874,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "2922:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 873,
												"id": 881,
												"nodeType": "Return",
												"src": "2915:31:3"
											}
										]
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackLow128",
									"nameLocation": "2844:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "2865:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2857:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 868,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:16:3"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2896:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2895:9:3"
									},
									"scope": 1044,
									"src": "2835:118:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "3068:53:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 892,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "3099:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3106:7:3",
															"memberName": "gasFees",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2092,
															"src": "3099:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 891,
														"name": "unpackHigh128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "3085:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) pure returns (uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3085:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 895,
												"nodeType": "Return",
												"src": "3078:36:3"
											}
										]
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackMaxPriorityFeePerGas",
									"nameLocation": "2968:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3024:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2995:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 884,
														"name": "PackedUserOperation",
														"nameLocations": [
															"2995:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "2995:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "2995:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2994:37:3"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "3059:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3058:9:3"
									},
									"scope": 1044,
									"src": "2959:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "3228:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 906,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "3258:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3265:7:3",
															"memberName": "gasFees",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2092,
															"src": "3258:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 905,
														"name": "unpackLow128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "3245:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) pure returns (uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 904,
												"id": 909,
												"nodeType": "Return",
												"src": "3238:35:3"
											}
										]
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackMaxFeePerGas",
									"nameLocation": "3136:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3184:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3155:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 899,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 898,
														"name": "PackedUserOperation",
														"nameLocations": [
															"3155:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "3155:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "3155:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3154:37:3"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "3219:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:9:3"
									},
									"scope": 1044,
									"src": "3127:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "3395:62:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 920,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "3426:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3433:16:3",
															"memberName": "accountGasLimits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2088,
															"src": "3426:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 919,
														"name": "unpackHigh128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "3412:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) pure returns (uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 918,
												"id": 923,
												"nodeType": "Return",
												"src": "3405:45:3"
											}
										]
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackVerificationGasLimit",
									"nameLocation": "3295:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3351:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3322:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 912,
														"name": "PackedUserOperation",
														"nameLocations": [
															"3322:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "3322:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "3322:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3321:37:3"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3386:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:9:3"
									},
									"scope": 1044,
									"src": "3286:171:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "3564:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 934,
																"name": "userOp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "3594:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																	"typeString": "struct PackedUserOperation calldata"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3601:16:3",
															"memberName": "accountGasLimits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2088,
															"src": "3594:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 933,
														"name": "unpackLow128",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "3581:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) pure returns (uint256)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3581:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 932,
												"id": 937,
												"nodeType": "Return",
												"src": "3574:44:3"
											}
										]
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackCallGasLimit",
									"nameLocation": "3472:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3520:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "3491:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 927,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 926,
														"name": "PackedUserOperation",
														"nameLocations": [
															"3491:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "3491:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "3491:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:37:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "3555:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:9:3"
									},
									"scope": 1044,
									"src": "3463:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3749:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"baseExpression": {
																		"expression": {
																			"id": 951,
																			"name": "userOp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "3782:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																				"typeString": "struct PackedUserOperation calldata"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3789:16:3",
																		"memberName": "paymasterAndData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2094,
																		"src": "3782:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"endExpression": {
																		"id": 954,
																		"name": "PAYMASTER_POSTOP_GAS_OFFSET",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "3840:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexRangeAccess",
																	"src": "3782:86:3",
																	"startExpression": {
																		"id": 953,
																		"name": "PAYMASTER_VALIDATION_GAS_OFFSET",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "3806:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr_slice",
																		"typeString": "bytes calldata slice"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr_slice",
																		"typeString": "bytes calldata slice"
																	}
																],
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3774:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes16_$",
																	"typeString": "type(bytes16)"
																},
																"typeName": {
																	"id": 949,
																	"name": "bytes16",
																	"nodeType": "ElementaryTypeName",
																	"src": "3774:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3774:95:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes16",
																"typeString": "bytes16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes16",
																"typeString": "bytes16"
															}
														],
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3766:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 947,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3766:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3766:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 946,
												"id": 958,
												"nodeType": "Return",
												"src": "3759:111:3"
											}
										]
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackPaymasterVerificationGasLimit",
									"nameLocation": "3640:35:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3705:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3676:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 941,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 940,
														"name": "PackedUserOperation",
														"nameLocations": [
															"3676:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "3676:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "3676:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:37:3"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3740:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:9:3"
									},
									"scope": 1044,
									"src": "3631:246:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "3986:118:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"baseExpression": {
																		"expression": {
																			"id": 972,
																			"name": "userOp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 963,
																			"src": "4019:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																				"typeString": "struct PackedUserOperation calldata"
																			}
																		},
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4026:16:3",
																		"memberName": "paymasterAndData",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2094,
																		"src": "4019:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"endExpression": {
																		"id": 975,
																		"name": "PAYMASTER_DATA_OFFSET",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "4073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexRangeAccess",
																	"src": "4019:76:3",
																	"startExpression": {
																		"id": 974,
																		"name": "PAYMASTER_POSTOP_GAS_OFFSET",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "4043:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr_slice",
																		"typeString": "bytes calldata slice"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr_slice",
																		"typeString": "bytes calldata slice"
																	}
																],
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4011:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes16_$",
																	"typeString": "type(bytes16)"
																},
																"typeName": {
																	"id": 970,
																	"name": "bytes16",
																	"nodeType": "ElementaryTypeName",
																	"src": "4011:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4011:85:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes16",
																"typeString": "bytes16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes16",
																"typeString": "bytes16"
															}
														],
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4003:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 968,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "4003:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4003:94:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 967,
												"id": 979,
												"nodeType": "Return",
												"src": "3996:101:3"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackPostOpGasLimit",
									"nameLocation": "3892:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "3942:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3913:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 962,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 961,
														"name": "PackedUserOperation",
														"nameLocations": [
															"3913:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "3913:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "3913:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:37:3"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "3977:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3977:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3976:9:3"
									},
									"scope": 1044,
									"src": "3883:221:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "4288:329:3",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 996,
																				"name": "paymasterAndData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "4335:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"endExpression": {
																				"id": 997,
																				"name": "PAYMASTER_VALIDATION_GAS_OFFSET",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 718,
																				"src": "4354:31:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexRangeAccess",
																			"src": "4335:51:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		],
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4327:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes20_$",
																			"typeString": "type(bytes20)"
																		},
																		"typeName": {
																			"id": 994,
																			"name": "bytes20",
																			"nodeType": "ElementaryTypeName",
																			"src": "4327:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4327:60:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4319:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 992,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4319:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1005,
																				"name": "paymasterAndData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "4418:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"endExpression": {
																				"id": 1007,
																				"name": "PAYMASTER_POSTOP_GAS_OFFSET",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "4469:27:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexRangeAccess",
																			"src": "4418:79:3",
																			"startExpression": {
																				"id": 1006,
																				"name": "PAYMASTER_VALIDATION_GAS_OFFSET",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 718,
																				"src": "4435:31:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		],
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4410:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes16_$",
																			"typeString": "type(bytes16)"
																		},
																		"typeName": {
																			"id": 1003,
																			"name": "bytes16",
																			"nodeType": "ElementaryTypeName",
																			"src": "4410:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4410:88:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes16",
																		"typeString": "bytes16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes16",
																		"typeString": "bytes16"
																	}
																],
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4402:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint128_$",
																	"typeString": "type(uint128)"
																},
																"typeName": {
																	"id": 1001,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "4402:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4402:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1015,
																				"name": "paymasterAndData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 983,
																				"src": "4529:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"endExpression": {
																				"id": 1017,
																				"name": "PAYMASTER_DATA_OFFSET",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "4576:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexRangeAccess",
																			"src": "4529:69:3",
																			"startExpression": {
																				"id": 1016,
																				"name": "PAYMASTER_POSTOP_GAS_OFFSET",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 721,
																				"src": "4546:27:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr_slice",
																				"typeString": "bytes calldata slice"
																			}
																		],
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4521:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes16_$",
																			"typeString": "type(bytes16)"
																		},
																		"typeName": {
																			"id": 1013,
																			"name": "bytes16",
																			"nodeType": "ElementaryTypeName",
																			"src": "4521:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4521:78:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes16",
																		"typeString": "bytes16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes16",
																		"typeString": "bytes16"
																	}
																],
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4513:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint128_$",
																	"typeString": "type(uint128)"
																},
																"typeName": {
																	"id": 1011,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "4513:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4513:87:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"id": 1021,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4305:305:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint128_$_t_uint128_$",
														"typeString": "tuple(address,uint128,uint128)"
													}
												},
												"functionReturnParameters": 991,
												"id": 1022,
												"nodeType": "Return",
												"src": "4298:312:3"
											}
										]
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpackPaymasterStaticFields",
									"nameLocation": "4119:27:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "paymasterAndData",
												"nameLocation": "4171:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4156:31:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4156:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4146:47:3"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "paymaster",
												"nameLocation": "4225:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4217:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4217:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "validationGasLimit",
												"nameLocation": "4244:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4236:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "postOpGasLimit",
												"nameLocation": "4272:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "4264:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4216:71:3"
									},
									"scope": 1044,
									"src": "4110:507:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "4980:71:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1037,
																	"name": "userOp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "5014:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																		"typeString": "struct PackedUserOperation calldata"
																	}
																},
																{
																	"id": 1038,
																	"name": "overrideInitCodeHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "5022:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
																		"typeString": "struct PackedUserOperation calldata"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1036,
																"name": "encode",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "5007:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_struct$_PackedUserOperation_$2097_calldata_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (struct PackedUserOperation calldata,bytes32) pure returns (bytes memory)"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5007:36:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1035,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4997:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4997:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1041,
												"nodeType": "Return",
												"src": "4990:54:3"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "4623:217:3",
										"text": " Hash the user operation data.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "4854:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "4897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "4868:35:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 1027,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1026,
														"name": "PackedUserOperation",
														"nameLocations": [
															"4868:19:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "4868:19:3"
													},
													"referencedDeclaration": 2097,
													"src": "4868:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "overrideInitCodeHash",
												"nameLocation": "4921:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "4913:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4913:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4858:89:3"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "4971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4970:9:3"
									},
									"scope": 1044,
									"src": "4845:206:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "287:4766:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5022:3"
				},
				"id": 3
			},
			"src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1086
						],
						"IERC165": [
							1116
						]
					},
					"id": 1087,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1087,
							"sourceUnit": 1117,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1047,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1116,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1050,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1116,
										"src": "357:7:4"
									},
									"id": 1051,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1049,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1086,
							"linearizedBaseContracts": [
								1086,
								1116
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1086,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1073,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1074,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1076,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1077,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1082,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1086,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1087,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1104
						]
					},
					"id": 1105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1088,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1089,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1104,
							"linearizedBaseContracts": [
								1104
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "867:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "940:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:5"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "984:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:5"
									},
									"scope": 1104,
									"src": "832:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1105,
							"src": "295:699:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:5"
				},
				"id": 5
			},
			"src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1116
						]
					},
					"id": 1117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1107,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1116,
							"linearizedBaseContracts": [
								1116
							],
							"name": "IERC165",
							"nameLocation": "431:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "817:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:6"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "860:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:6"
									},
									"scope": 1116,
									"src": "790:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1117,
							"src": "421:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:6"
				},
				"id": 6
			},
			"src/external/solady/EIP712.sol": {
				"ast": {
					"absolutePath": "src/external/solady/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							1419
						]
					},
					"id": 1420,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1119,
								"nodeType": "StructuredDocumentation",
								"src": "57:714:7",
								"text": "@notice Contract for EIP-712 typed structured data hashing and signing.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/EIP712.sol)\n @author Modified from Solbase (https://github.com/Sol-DAO/solbase/blob/main/src/utils/EIP712.sol)\n @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/EIP712.sol)\n @dev Note, this implementation:\n - Uses `address(this)` for the `verifyingContract` field.\n - Does NOT use the optional EIP-712 salt.\n - Does NOT use any EIP-712 extensions.\n This is for simplicity and to save gas.\n If you need to customize, please fork / modify accordingly."
							},
							"fullyImplemented": false,
							"id": 1419,
							"linearizedBaseContracts": [
								1419
							],
							"name": "EIP712",
							"nameLocation": "789:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "1085:107:7",
										"text": "@dev `keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\")`."
									},
									"id": 1123,
									"mutability": "constant",
									"name": "_DOMAIN_TYPEHASH",
									"nameLocation": "1223:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "1197:119:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1121,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1197:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307838623733633363363962623866653364353132656363346366373539636337393233396637623137396230666661636161396137356435323262333934303066",
										"id": 1122,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1250:66:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_63076024560530113402979550242307453568063438748328787417531900361828837441551_by_1",
											"typeString": "int_const 6307...(69 digits omitted)...1551"
										},
										"value": "0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1125,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "1349:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "1323:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1124,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1323:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1127,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "1392:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "1366:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1366:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1129,
									"mutability": "immutable",
									"name": "_cachedNameHash",
									"nameLocation": "1438:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "1412:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1128,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1412:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1131,
									"mutability": "immutable",
									"name": "_cachedVersionHash",
									"nameLocation": "1485:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "1459:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1130,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1459:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1133,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "1535:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1419,
									"src": "1509:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1132,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1509:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "2109:1116:7",
										"statements": [
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1137,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2119:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1144,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2157:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_EIP712_$1419",
																					"typeString": "contract EIP712"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_EIP712_$1419",
																					"typeString": "contract EIP712"
																				}
																			],
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2149:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1142,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2149:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2149:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2141:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1140,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "2141:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2141:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2133:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1138,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2133:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2133:31:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2119:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2119:45:7"
											},
											{
												"expression": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1150,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "2174:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1151,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2191:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2197:7:7",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "2191:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2174:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "2174:30:7"
											},
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "name",
														"nameLocation": "2229:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "2215:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1155,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2215:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"nodeType": "VariableDeclarationStatement",
												"src": "2215:18:7"
											},
											{
												"assignments": [
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "version",
														"nameLocation": "2257:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "2243:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1158,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2243:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"nodeType": "VariableDeclarationStatement",
												"src": "2243:21:7"
											},
											{
												"condition": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2278:33:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1161,
															"name": "_domainNameAndVersionMayChange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "2279:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
																"typeString": "function () pure returns (bool)"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2279:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "2274:80:7",
												"trueBody": {
													"expression": {
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1164,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "2314:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 1165,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "2320:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"id": 1166,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "2313:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
																"typeString": "tuple(string memory,string memory)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1167,
																"name": "_domainNameAndVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "2331:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory,string memory)"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2331:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
																"typeString": "tuple(string memory,string memory)"
															}
														},
														"src": "2313:41:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1170,
													"nodeType": "ExpressionStatement",
													"src": "2313:41:7"
												}
											},
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "nameHash",
														"nameLocation": "2372:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "2364:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1172,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2364:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"condition": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1174,
															"name": "_domainNameAndVersionMayChange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "2383:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
																"typeString": "function () pure returns (bool)"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2383:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1183,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1156,
																		"src": "2447:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2441:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1181,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2441:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2441:11:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1180,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2431:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2431:22:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2383:70:7",
													"trueExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2426:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2418:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1176,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2418:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2418:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2364:89:7"
											},
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "versionHash",
														"nameLocation": "2471:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "2463:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1188,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2463:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1203,
												"initialValue": {
													"condition": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1190,
															"name": "_domainNameAndVersionMayChange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "2497:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
																"typeString": "function () pure returns (bool)"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2497:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1199,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1159,
																		"src": "2561:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2555:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1197,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2555:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2555:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1196,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2545:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2545:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2497:73:7",
													"trueExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2540:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2532:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 1192,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2532:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2532:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2463:107:7"
											},
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1204,
														"name": "_cachedNameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "2580:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1205,
														"name": "nameHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2598:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2580:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "2580:26:7"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1208,
														"name": "_cachedVersionHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2616:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1209,
														"name": "versionHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "2637:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2616:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "2616:32:7"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "separator",
														"nameLocation": "2667:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "2659:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1212,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2659:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"nodeType": "VariableDeclarationStatement",
												"src": "2659:17:7"
											},
											{
												"condition": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2690:33:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1215,
															"name": "_domainNameAndVersionMayChange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "2691:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
																"typeString": "function () pure returns (bool)"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2691:32:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "IfStatement",
												"src": "2686:489:7",
												"trueBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "2725:450:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "2795:370:7",
																"nodeType": "YulBlock",
																"src": "2795:370:7",
																"statements": [
																	{
																		"nativeSrc": "2813:20:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2813:20:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2828:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2828:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2822:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:5:7"
																			},
																			"nativeSrc": "2822:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:11:7"
																		},
																		"variables": [
																			{
																				"name": "m",
																				"nativeSrc": "2817:1:7",
																				"nodeType": "YulTypedName",
																				"src": "2817:1:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "m",
																					"nativeSrc": "2890:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2890:1:7"
																				},
																				{
																					"name": "_DOMAIN_TYPEHASH",
																					"nativeSrc": "2893:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "2893:16:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2883:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2883:6:7"
																			},
																			"nativeSrc": "2883:27:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2883:27:7"
																		},
																		"nativeSrc": "2883:27:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2883:27:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nativeSrc": "2938:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2938:1:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2941:4:7",
																							"nodeType": "YulLiteral",
																							"src": "2941:4:7",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2934:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2934:3:7"
																					},
																					"nativeSrc": "2934:12:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2934:12:7"
																				},
																				{
																					"name": "nameHash",
																					"nativeSrc": "2948:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2948:8:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2927:6:7"
																			},
																			"nativeSrc": "2927:30:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:30:7"
																		},
																		"nativeSrc": "2927:30:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:30:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nativeSrc": "2985:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2985:1:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2988:4:7",
																							"nodeType": "YulLiteral",
																							"src": "2988:4:7",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2981:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2981:3:7"
																					},
																					"nativeSrc": "2981:12:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2981:12:7"
																				},
																				{
																					"name": "versionHash",
																					"nativeSrc": "2995:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "2995:11:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2974:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2974:6:7"
																			},
																			"nativeSrc": "2974:33:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2974:33:7"
																		},
																		"nativeSrc": "2974:33:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2974:33:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nativeSrc": "3035:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "3035:1:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3038:4:7",
																							"nodeType": "YulLiteral",
																							"src": "3038:4:7",
																							"type": "",
																							"value": "0x60"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3031:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3031:3:7"
																					},
																					"nativeSrc": "3031:12:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3031:12:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "chainid",
																						"nativeSrc": "3045:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "3045:7:7"
																					},
																					"nativeSrc": "3045:9:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3045:9:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3024:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3024:6:7"
																			},
																			"nativeSrc": "3024:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3024:31:7"
																		},
																		"nativeSrc": "3024:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3024:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "m",
																							"nativeSrc": "3083:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "3083:1:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3086:4:7",
																							"nodeType": "YulLiteral",
																							"src": "3086:4:7",
																							"type": "",
																							"value": "0x80"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3079:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3079:3:7"
																					},
																					"nativeSrc": "3079:12:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3079:12:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "address",
																						"nativeSrc": "3093:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "3093:7:7"
																					},
																					"nativeSrc": "3093:9:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3093:9:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3072:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3072:6:7"
																			},
																			"nativeSrc": "3072:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3072:31:7"
																		},
																		"nativeSrc": "3072:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3072:31:7"
																	},
																	{
																		"nativeSrc": "3120:31:7",
																		"nodeType": "YulAssignment",
																		"src": "3120:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "m",
																					"nativeSrc": "3143:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "3143:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3146:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3146:4:7",
																					"type": "",
																					"value": "0xa0"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "3133:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:9:7"
																			},
																			"nativeSrc": "3133:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:18:7"
																		},
																		"variableNames": [
																			{
																				"name": "separator",
																				"nativeSrc": "3120:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3120:9:7"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1123,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2893:16:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1173,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2948:8:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1213,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3120:9:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1189,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2995:11:7",
																	"valueSize": 1
																}
															],
															"id": 1218,
															"nodeType": "InlineAssembly",
															"src": "2786:379:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1221,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "3184:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1222,
														"name": "separator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "3209:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3184:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "3184:34:7"
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "1847:243:7",
										"text": "@dev Cache the hashes for cheaper runtime gas costs.\n In the case of upgradeable contracts (i.e. proxies),\n or if the chain id changes due to a hard fork,\n the domain separator will be seamlessly calculated on-the-fly."
									},
									"id": 1226,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2106:2:7"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2109:0:7"
									},
									"scope": 1419,
									"src": "2095:1130:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "3514:547:7",
										"text": "@dev Please override this function to return the domain name and version.\n ```\n     function _domainNameAndVersion()\n         internal\n         pure\n         virtual\n         returns (string memory name, string memory version)\n     {\n         name = \"Solady\";\n         version = \"1\";\n     }\n ```\n Note: If the returned result may change after the contract has been deployed,\n you must override `_domainNameAndVersionMayChange()` to return true."
									},
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_domainNameAndVersion",
									"nameLocation": "4075:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4096:2:7"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "4176:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4162:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4162:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4196:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4182:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4182:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4161:43:7"
									},
									"scope": 1419,
									"src": "4066:139:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "4457:2:7",
										"statements": []
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "4211:155:7",
										"text": "@dev Returns if `_domainNameAndVersion()` may change\n after the contract has been deployed (i.e. after the constructor).\n Default: false."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainNameAndVersionMayChange",
									"nameLocation": "4380:30:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4410:2:7"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4449:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4444:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4444:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4443:13:7"
									},
									"scope": 1419,
									"src": "4371:88:7",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "4877:269:7",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1247,
														"name": "_domainNameAndVersionMayChange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "4891:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
															"typeString": "function () pure returns (bool)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4891:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "4991:149:7",
													"statements": [
														{
															"expression": {
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1255,
																	"name": "separator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "5005:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1256,
																	"name": "_cachedDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "5017:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "5005:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1258,
															"nodeType": "ExpressionStatement",
															"src": "5005:34:7"
														},
														{
															"condition": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1259,
																	"name": "_cachedDomainSeparatorInvalidated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "5057:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5057:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1266,
															"nodeType": "IfStatement",
															"src": "5053:76:7",
															"trueBody": {
																"expression": {
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1261,
																		"name": "separator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5094:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1262,
																			"name": "_buildDomainSeparator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1402,
																			"src": "5106:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																				"typeString": "function () view returns (bytes32)"
																			}
																		},
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5106:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "5094:35:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1265,
																"nodeType": "ExpressionStatement",
																"src": "5094:35:7"
															}
														}
													]
												},
												"id": 1268,
												"nodeType": "IfStatement",
												"src": "4887:253:7",
												"trueBody": {
													"id": 1254,
													"nodeType": "Block",
													"src": "4925:60:7",
													"statements": [
														{
															"expression": {
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1249,
																	"name": "separator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "4939:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1250,
																		"name": "_buildDomainSeparator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "4951:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																			"typeString": "function () view returns (bytes32)"
																		}
																	},
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4951:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "4939:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1253,
															"nodeType": "ExpressionStatement",
															"src": "4939:35:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "4748:46:7",
										"text": "@dev Returns the EIP-712 domain separator."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparator",
									"nameLocation": "4808:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4824:2:7"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "separator",
												"nameLocation": "4866:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "4858:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4857:19:7"
									},
									"scope": 1419,
									"src": "4799:347:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "5848:794:7",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1278,
														"name": "_domainNameAndVersionMayChange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5946:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
															"typeString": "function () pure returns (bool)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1298,
													"nodeType": "Block",
													"src": "6043:143:7",
													"statements": [
														{
															"expression": {
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1286,
																	"name": "digest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "6057:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1287,
																	"name": "_cachedDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "6066:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "6057:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1289,
															"nodeType": "ExpressionStatement",
															"src": "6057:31:7"
														},
														{
															"condition": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1290,
																	"name": "_cachedDomainSeparatorInvalidated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "6106:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6106:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1297,
															"nodeType": "IfStatement",
															"src": "6102:73:7",
															"trueBody": {
																"expression": {
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1292,
																		"name": "digest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "6143:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1293,
																			"name": "_buildDomainSeparator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1402,
																			"src": "6152:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																				"typeString": "function () view returns (bytes32)"
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6152:23:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "6143:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1296,
																"nodeType": "ExpressionStatement",
																"src": "6143:32:7"
															}
														}
													]
												},
												"id": 1299,
												"nodeType": "IfStatement",
												"src": "5942:244:7",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "5980:57:7",
													"statements": [
														{
															"expression": {
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1280,
																	"name": "digest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "5994:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1281,
																		"name": "_buildDomainSeparator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "6003:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																			"typeString": "function () view returns (bytes32)"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6003:23:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "5994:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1284,
															"nodeType": "ExpressionStatement",
															"src": "5994:32:7"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "6247:389:7",
													"nodeType": "YulBlock",
													"src": "6247:389:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6303:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6303:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6309:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6309:18:7",
																		"type": "",
																		"value": "0x1901000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6296:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6296:6:7"
																},
																"nativeSrc": "6296:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6296:32:7"
															},
															"nativeSrc": "6296:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "6296:32:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6369:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6369:4:7",
																		"type": "",
																		"value": "0x1a"
																	},
																	{
																		"name": "digest",
																		"nativeSrc": "6375:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6375:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:7"
																},
																"nativeSrc": "6362:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6362:20:7"
															},
															"nativeSrc": "6362:20:7",
															"nodeType": "YulExpressionStatement",
															"src": "6362:20:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6433:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6433:4:7",
																		"type": "",
																		"value": "0x3a"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "6439:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "6439:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:7"
																},
																"nativeSrc": "6426:24:7",
																"nodeType": "YulFunctionCall",
																"src": "6426:24:7"
															},
															"nativeSrc": "6426:24:7",
															"nodeType": "YulExpressionStatement",
															"src": "6426:24:7"
														},
														{
															"nativeSrc": "6489:31:7",
															"nodeType": "YulAssignment",
															"src": "6489:31:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6509:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6509:4:7",
																		"type": "",
																		"value": "0x18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6515:4:7",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6499:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6499:9:7"
																},
																"nativeSrc": "6499:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6499:21:7"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "6489:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6489:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6618:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6618:4:7",
																		"type": "",
																		"value": "0x3a"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6624:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6624:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6611:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6611:6:7"
																},
																"nativeSrc": "6611:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6611:15:7"
															},
															"nativeSrc": "6611:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6611:15:7"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1276,
														"isOffset": false,
														"isSlot": false,
														"src": "6375:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1276,
														"isOffset": false,
														"isSlot": false,
														"src": "6489:6:7",
														"valueSize": 1
													},
													{
														"declaration": 1273,
														"isOffset": false,
														"isSlot": false,
														"src": "6439:10:7",
														"valueSize": 1
													}
												],
												"id": 1300,
												"nodeType": "InlineAssembly",
												"src": "6238:398:7"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "5152:600:7",
										"text": "@dev Returns the hash of the fully encoded EIP-712 message for this domain,\n given `structHash`, as defined in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct.\n The hash can be used together with {ECDSA-recover} to obtain the signer of a message:\n ```\n     bytes32 digest = _hashTypedData(keccak256(abi.encode(\n         keccak256(\"Mail(address to,string contents)\"),\n         mailTo,\n         keccak256(bytes(mailContents))\n     )));\n     address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedData",
									"nameLocation": "5766:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "5789:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5781:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5781:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5780:20:7"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "5840:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5832:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:16:7"
									},
									"scope": 1419,
									"src": "5757:885:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "7317:268:7",
										"statements": [
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "fields",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1306,
														"src": "7327:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "0f",
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "hexString",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7336:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
															"typeString": "literal_string hex\"0f\""
														},
														"value": "\u000f"
													},
													"src": "7327:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "7327:16:7"
											},
											{
												"expression": {
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1325,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "7368:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1326,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "7374:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"id": 1327,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7367:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
															"typeString": "tuple(string memory,string memory)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1328,
															"name": "_domainNameAndVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "7385:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
																"typeString": "function () view returns (string memory,string memory)"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7385:23:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
															"typeString": "tuple(string memory,string memory)"
														}
													},
													"src": "7367:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "7367:41:7"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1332,
														"name": "chainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "7418:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1333,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7428:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7434:7:7",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "7428:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7418:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "7418:23:7"
											},
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1337,
														"name": "verifyingContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "7451:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1340,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "7479:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$1419",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$1419",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7471:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1338,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7471:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7471:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7451:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "7451:33:7"
											},
											{
												"expression": {
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1344,
														"name": "salt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "7494:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1345,
														"name": "salt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "7501:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7494:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "7494:11:7"
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1348,
														"name": "extensions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "7532:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1349,
														"name": "extensions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "7545:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "7532:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "7532:23:7"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "6931:53:7",
										"text": "@dev See: https://eips.ethereum.org/EIPS/eip-5267"
									},
									"functionSelector": "84b0196e",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "6998:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7010:2:7"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "7094:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7087:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "7087:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "7128:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7114:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7114:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "7160:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7146:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1309,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7146:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "7189:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7181:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "7218:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7210:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7210:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "7257:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7249:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7249:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "7292:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7275:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1317,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7275:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1318,
													"nodeType": "ArrayTypeName",
													"src": "7275:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7073:239:7"
									},
									"scope": 1419,
									"src": "6989:596:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "7999:876:7",
										"statements": [
											{
												"assignments": [
													1360
												],
												"declarations": [
													{
														"constant": false,
														"id": 1360,
														"mutability": "mutable",
														"name": "versionHash",
														"nameLocation": "8097:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "8089:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1359,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8089:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1361,
												"nodeType": "VariableDeclarationStatement",
												"src": "8089:19:7"
											},
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1362,
														"name": "_domainNameAndVersionMayChange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "8122:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bool_$",
															"typeString": "function () pure returns (bool)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8122:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1398,
													"nodeType": "Block",
													"src": "8357:98:7",
													"statements": [
														{
															"expression": {
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1390,
																	"name": "separator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "8371:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1391,
																	"name": "_cachedNameHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "8383:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8371:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1393,
															"nodeType": "ExpressionStatement",
															"src": "8371:27:7"
														},
														{
															"expression": {
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1394,
																	"name": "versionHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "8412:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1395,
																	"name": "_cachedVersionHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "8426:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8412:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1397,
															"nodeType": "ExpressionStatement",
															"src": "8412:32:7"
														}
													]
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "8118:337:7",
												"trueBody": {
													"id": 1389,
													"nodeType": "Block",
													"src": "8156:195:7",
													"statements": [
														{
															"assignments": [
																1365,
																1367
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1365,
																	"mutability": "mutable",
																	"name": "name",
																	"nameLocation": "8185:4:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1389,
																	"src": "8171:18:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1364,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "8171:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1367,
																	"mutability": "mutable",
																	"name": "version",
																	"nameLocation": "8205:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1389,
																	"src": "8191:21:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 1366,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "8191:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1370,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1368,
																	"name": "_domainNameAndVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "8216:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$",
																		"typeString": "function () view returns (string memory,string memory)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8216:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$",
																	"typeString": "tuple(string memory,string memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8170:69:7"
														},
														{
															"expression": {
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1371,
																	"name": "separator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "8253:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1375,
																					"name": "name",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "8281:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8275:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1373,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "8275:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8275:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1372,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "8265:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8265:22:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8253:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1379,
															"nodeType": "ExpressionStatement",
															"src": "8253:34:7"
														},
														{
															"expression": {
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1380,
																	"name": "versionHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "8301:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1384,
																					"name": "version",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1367,
																					"src": "8331:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8325:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1382,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "8325:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8325:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1381,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "8315:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 1386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8315:25:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "8301:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1388,
															"nodeType": "ExpressionStatement",
															"src": "8301:39:7"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "8516:353:7",
													"nodeType": "YulBlock",
													"src": "8516:353:7",
													"statements": [
														{
															"nativeSrc": "8530:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8530:20:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8545:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8545:4:7",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8539:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8539:5:7"
																},
																"nativeSrc": "8539:11:7",
																"nodeType": "YulFunctionCall",
																"src": "8539:11:7"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "8534:1:7",
																	"nodeType": "YulTypedName",
																	"src": "8534:1:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "8603:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8603:1:7"
																	},
																	{
																		"name": "_DOMAIN_TYPEHASH",
																		"nativeSrc": "8606:16:7",
																		"nodeType": "YulIdentifier",
																		"src": "8606:16:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8596:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8596:6:7"
																},
																"nativeSrc": "8596:27:7",
																"nodeType": "YulFunctionCall",
																"src": "8596:27:7"
															},
															"nativeSrc": "8596:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "8596:27:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "8647:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8647:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8650:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8650:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8643:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:7"
																		},
																		"nativeSrc": "8643:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8643:12:7"
																	},
																	{
																		"name": "separator",
																		"nativeSrc": "8657:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8657:9:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8636:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8636:6:7"
																},
																"nativeSrc": "8636:31:7",
																"nodeType": "YulFunctionCall",
																"src": "8636:31:7"
															},
															"nativeSrc": "8636:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "8636:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "8705:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8705:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8708:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8708:4:7",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8701:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8701:3:7"
																		},
																		"nativeSrc": "8701:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8701:12:7"
																	},
																	{
																		"name": "versionHash",
																		"nativeSrc": "8715:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8715:11:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8694:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8694:6:7"
																},
																"nativeSrc": "8694:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8694:33:7"
															},
															"nativeSrc": "8694:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8694:33:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "8751:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8751:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8754:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8754:4:7",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8747:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8747:3:7"
																		},
																		"nativeSrc": "8747:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8747:12:7"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "chainid",
																			"nativeSrc": "8761:7:7",
																			"nodeType": "YulIdentifier",
																			"src": "8761:7:7"
																		},
																		"nativeSrc": "8761:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:9:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8740:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8740:6:7"
																},
																"nativeSrc": "8740:31:7",
																"nodeType": "YulFunctionCall",
																"src": "8740:31:7"
															},
															"nativeSrc": "8740:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "8740:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "m",
																				"nativeSrc": "8795:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "8795:1:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8798:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8798:4:7",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8791:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8791:3:7"
																		},
																		"nativeSrc": "8791:12:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8791:12:7"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nativeSrc": "8805:7:7",
																			"nodeType": "YulIdentifier",
																			"src": "8805:7:7"
																		},
																		"nativeSrc": "8805:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8805:9:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8784:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8784:6:7"
																},
																"nativeSrc": "8784:31:7",
																"nodeType": "YulFunctionCall",
																"src": "8784:31:7"
															},
															"nativeSrc": "8784:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "8784:31:7"
														},
														{
															"nativeSrc": "8828:31:7",
															"nodeType": "YulAssignment",
															"src": "8828:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "8851:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8851:1:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8854:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8854:4:7",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "8841:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8841:9:7"
																},
																"nativeSrc": "8841:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8841:18:7"
															},
															"variableNames": [
																{
																	"name": "separator",
																	"nativeSrc": "8828:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8828:9:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1123,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:16:7",
														"valueSize": 1
													},
													{
														"declaration": 1357,
														"isOffset": false,
														"isSlot": false,
														"src": "8657:9:7",
														"valueSize": 1
													},
													{
														"declaration": 1357,
														"isOffset": false,
														"isSlot": false,
														"src": "8828:9:7",
														"valueSize": 1
													},
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": false,
														"src": "8715:11:7",
														"valueSize": 1
													}
												],
												"id": 1400,
												"nodeType": "InlineAssembly",
												"src": "8507:362:7"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "7874:46:7",
										"text": "@dev Returns the EIP-712 domain separator."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "7934:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7955:2:7"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "separator",
												"nameLocation": "7988:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "7980:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:19:7"
									},
									"scope": 1419,
									"src": "7925:950:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "9035:260:7",
										"statements": [
											{
												"assignments": [
													1409
												],
												"declarations": [
													{
														"constant": false,
														"id": 1409,
														"mutability": "mutable",
														"name": "cachedChainId",
														"nameLocation": "9053:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "9045:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1408,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9045:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"id": 1410,
													"name": "_cachedChainId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1127,
													"src": "9069:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9045:38:7"
											},
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "cachedThis",
														"nameLocation": "9101:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "9093:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9093:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1415,
												"initialValue": {
													"id": 1414,
													"name": "_cachedThis",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1125,
													"src": "9114:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9093:32:7"
											},
											{
												"AST": {
													"nativeSrc": "9187:102:7",
													"nodeType": "YulBlock",
													"src": "9187:102:7",
													"statements": [
														{
															"nativeSrc": "9201:78:7",
															"nodeType": "YulAssignment",
															"src": "9201:78:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "chainid",
																							"nativeSrc": "9225:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9225:7:7"
																						},
																						"nativeSrc": "9225:9:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9225:9:7"
																					},
																					{
																						"name": "cachedChainId",
																						"nativeSrc": "9236:13:7",
																						"nodeType": "YulIdentifier",
																						"src": "9236:13:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9222:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9222:2:7"
																				},
																				"nativeSrc": "9222:28:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9222:28:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "address",
																							"nativeSrc": "9255:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "9255:7:7"
																						},
																						"nativeSrc": "9255:9:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9255:9:7"
																					},
																					{
																						"name": "cachedThis",
																						"nativeSrc": "9266:10:7",
																						"nodeType": "YulIdentifier",
																						"src": "9266:10:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9252:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9252:2:7"
																				},
																				"nativeSrc": "9252:25:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9252:25:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9218:3:7"
																		},
																		"nativeSrc": "9218:60:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9218:60:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:7"
																},
																"nativeSrc": "9211:68:7",
																"nodeType": "YulFunctionCall",
																"src": "9211:68:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9201:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9201:6:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1409,
														"isOffset": false,
														"isSlot": false,
														"src": "9236:13:7",
														"valueSize": 1
													},
													{
														"declaration": 1413,
														"isOffset": false,
														"isSlot": false,
														"src": "9266:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1406,
														"isOffset": false,
														"isSlot": false,
														"src": "9201:6:7",
														"valueSize": 1
													}
												],
												"id": 1416,
												"nodeType": "InlineAssembly",
												"src": "9178:111:7"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "8881:69:7",
										"text": "@dev Returns if the cached domain separator has been invalidated."
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_cachedDomainSeparatorInvalidated",
									"nameLocation": "8964:33:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8997:2:7"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "9027:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "9022:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9022:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9021:13:7"
									},
									"scope": 1419,
									"src": "8955:340:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1420,
							"src": "771:8526:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:9265:7"
				},
				"id": 7
			},
			"src/external/solady/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "src/external/solady/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"UUPSUpgradeable": [
							1508
						]
					},
					"id": 1509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1421,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1422,
								"nodeType": "StructuredDocumentation",
								"src": "57:578:8",
								"text": "@notice UUPS proxy mixin.\n @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/UUPSUpgradeable.sol)\n @author Modified from OpenZeppelin\n (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/proxy/utils/UUPSUpgradeable.sol)\n Note:\n - This implementation is intended to be used with ERC1967 proxies.\n See: `LibClone.deployERC1967` and related functions.\n - This implementation is NOT compatible with legacy OpenZeppelin proxies\n which do not store the implementation at `_ERC1967_IMPLEMENTATION_SLOT`."
							},
							"fullyImplemented": false,
							"id": 1508,
							"linearizedBaseContracts": [
								1508
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "653:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "958:28:8",
										"text": "@dev The upgrade failed."
									},
									"errorSelector": "55299b49",
									"id": 1425,
									"name": "UpgradeFailed",
									"nameLocation": "997:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:2:8"
									},
									"src": "991:22:8"
								},
								{
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "1019:55:8",
										"text": "@dev The call is from an unauthorized call context."
									},
									"errorSelector": "9f03a026",
									"id": 1428,
									"name": "UnauthorizedCallContext",
									"nameLocation": "1085:23:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:8"
									},
									"src": "1079:32:8"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "1400:56:8",
										"text": "@dev For checking if the context is a delegate call."
									},
									"id": 1441,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1487:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1508,
									"src": "1461:66:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1461:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"arguments": [
															{
																"id": 1437,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1520:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$1508",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$1508",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1512:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1435,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1512:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1512:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													],
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "1504:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint160_$",
														"typeString": "type(uint160)"
													},
													"typeName": {
														"id": 1433,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1504:7:8",
														"typeDescriptions": {}
													}
												},
												"id": 1439,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "1504:22:8",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											],
											"id": 1432,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1496:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint256_$",
												"typeString": "type(uint256)"
											},
											"typeName": {
												"id": 1431,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1496:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 1440,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1496:31:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "1817:61:8",
										"text": "@dev Emitted when the proxy's implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1446,
									"name": "Upgraded",
									"nameLocation": "1889:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1914:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "1898:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:32:8"
									},
									"src": "1883:47:8"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "1936:49:8",
										"text": "@dev `keccak256(bytes(\"Upgraded(address)\"))`."
									},
									"id": 1450,
									"mutability": "constant",
									"name": "_UPGRADED_EVENT_SIGNATURE",
									"nameLocation": "2015:25:8",
									"nodeType": "VariableDeclaration",
									"scope": 1508,
									"src": "1990:127:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1448,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1990:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307862633763643735613230656532376664396164656261623332303431663735353231346462633662666661393063633032323562333964613265356332643362",
										"id": 1449,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2051:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_85255390875014325802867460126659607941379558699672153012307716606304121007419_by_1",
											"typeString": "int_const 8525...(69 digits omitted)...7419"
										},
										"value": "0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "2407:137:8",
										"text": "@dev The ERC-1967 storage slot for the implementation in the proxy.\n `uint256(keccak256(\"eip1967.proxy.implementation\")) - 1`."
									},
									"id": 1454,
									"mutability": "constant",
									"name": "_ERC1967_IMPLEMENTATION_SLOT",
									"nameLocation": "2575:28:8",
									"nodeType": "VariableDeclaration",
									"scope": 1508,
									"src": "2549:131:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1452,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2549:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1453,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2614:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "2970:251:8",
										"text": "@dev Please override this function to check if `msg.sender` is authorized\n to upgrade the proxy to `newImplementation`, reverting if not.\n ```\n     function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "3235:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3261:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3253:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:27:8"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3296:0:8"
									},
									"scope": 1508,
									"src": "3226:71:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "3655:151:8",
										"statements": [
											{
												"expression": {
													"id": 1468,
													"name": "_ERC1967_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1454,
													"src": "3771:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1467,
												"id": 1469,
												"nodeType": "Return",
												"src": "3764:35:8"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "3303:271:8",
										"text": "@dev Returns the storage slot used by the implementation,\n as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822).\n Note: The `notDelegated` modifier prevents accidental upgrades to\n an implementation that is a proxy contract."
									},
									"functionSelector": "52d1902d",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1463,
												"name": "notDelegated",
												"nameLocations": [
													"3624:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1507,
												"src": "3624:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3624:12:8"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3588:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3601:2:8"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "3646:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3645:9:8"
									},
									"scope": 1508,
									"src": "3579:227:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "4155:1432:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1482,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4183:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1481,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "4165:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4165:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "4165:36:8"
											},
											{
												"AST": {
													"nativeSrc": "4263:1318:8",
													"nodeType": "YulBlock",
													"src": "4263:1318:8",
													"statements": [
														{
															"nativeSrc": "4277:56:8",
															"nodeType": "YulAssignment",
															"src": "4277:56:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4302:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4302:2:8",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4310:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4310:2:8",
																				"type": "",
																				"value": "96"
																			},
																			{
																				"name": "newImplementation",
																				"nativeSrc": "4314:17:8",
																				"nodeType": "YulIdentifier",
																				"src": "4314:17:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4306:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:8"
																		},
																		"nativeSrc": "4306:26:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4306:26:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4298:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4298:3:8"
																},
																"nativeSrc": "4298:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4298:35:8"
															},
															"variableNames": [
																{
																	"name": "newImplementation",
																	"nativeSrc": "4277:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4277:17:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4378:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4378:4:8",
																		"type": "",
																		"value": "0x01"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:10:8",
																		"nodeType": "YulLiteral",
																		"src": "4384:10:8",
																		"type": "",
																		"value": "0x52d1902d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4371:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:8"
																},
																"nativeSrc": "4371:24:8",
																"nodeType": "YulFunctionCall",
																"src": "4371:24:8"
															},
															"nativeSrc": "4371:24:8",
															"nodeType": "YulExpressionStatement",
															"src": "4371:24:8"
														},
														{
															"nativeSrc": "4430:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4430:37:8",
															"value": {
																"name": "_ERC1967_IMPLEMENTATION_SLOT",
																"nativeSrc": "4439:28:8",
																"nodeType": "YulIdentifier",
																"src": "4439:28:8"
															},
															"variables": [
																{
																	"name": "s",
																	"nativeSrc": "4434:1:8",
																	"nodeType": "YulTypedName",
																	"src": "4434:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4648:113:8",
																"nodeType": "YulBlock",
																"src": "4648:113:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4673:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4673:4:8",
																					"type": "",
																					"value": "0x01"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4679:10:8",
																					"nodeType": "YulLiteral",
																					"src": "4679:10:8",
																					"type": "",
																					"value": "0x55299b49"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4666:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4666:6:8"
																			},
																			"nativeSrc": "4666:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4666:24:8"
																		},
																		"nativeSrc": "4666:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4666:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4736:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4736:4:8",
																					"type": "",
																					"value": "0x1d"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4742:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4742:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4729:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4729:6:8"
																			},
																			"nativeSrc": "4729:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4729:18:8"
																		},
																		"nativeSrc": "4729:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4729:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "gas",
																									"nativeSrc": "4592:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4592:3:8"
																								},
																								"nativeSrc": "4592:5:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4592:5:8"
																							},
																							{
																								"name": "newImplementation",
																								"nativeSrc": "4599:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4599:17:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4618:4:8",
																								"nodeType": "YulLiteral",
																								"src": "4618:4:8",
																								"type": "",
																								"value": "0x1d"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4624:4:8",
																								"nodeType": "YulLiteral",
																								"src": "4624:4:8",
																								"type": "",
																								"value": "0x04"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4630:4:8",
																								"nodeType": "YulLiteral",
																								"src": "4630:4:8",
																								"type": "",
																								"value": "0x01"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4636:4:8",
																								"nodeType": "YulLiteral",
																								"src": "4636:4:8",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "staticcall",
																							"nativeSrc": "4581:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4581:10:8"
																						},
																						"nativeSrc": "4581:60:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4581:60:8"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "4575:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4575:5:8"
																				},
																				"nativeSrc": "4575:67:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4575:67:8"
																			},
																			{
																				"name": "s",
																				"nativeSrc": "4644:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4644:1:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4572:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4572:2:8"
																		},
																		"nativeSrc": "4572:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4572:74:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4565:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4565:6:8"
																},
																"nativeSrc": "4565:82:8",
																"nodeType": "YulFunctionCall",
																"src": "4565:82:8"
															},
															"nativeSrc": "4562:199:8",
															"nodeType": "YulIf",
															"src": "4562:199:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "codesize",
																			"nativeSrc": "4821:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "4821:8:8"
																		},
																		"nativeSrc": "4821:10:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4821:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4833:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4833:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "_UPGRADED_EVENT_SIGNATURE",
																		"nativeSrc": "4839:25:8",
																		"nodeType": "YulIdentifier",
																		"src": "4839:25:8"
																	},
																	{
																		"name": "newImplementation",
																		"nativeSrc": "4866:17:8",
																		"nodeType": "YulIdentifier",
																		"src": "4866:17:8"
																	}
																],
																"functionName": {
																	"name": "log2",
																	"nativeSrc": "4816:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4816:4:8"
																},
																"nativeSrc": "4816:68:8",
																"nodeType": "YulFunctionCall",
																"src": "4816:68:8"
															},
															"nativeSrc": "4816:68:8",
															"nodeType": "YulExpressionStatement",
															"src": "4816:68:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "s",
																		"nativeSrc": "4904:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4904:1:8"
																	},
																	{
																		"name": "newImplementation",
																		"nativeSrc": "4907:17:8",
																		"nodeType": "YulIdentifier",
																		"src": "4907:17:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4897:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:8"
																},
																"nativeSrc": "4897:28:8",
																"nodeType": "YulFunctionCall",
																"src": "4897:28:8"
															},
															"nativeSrc": "4897:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "4897:28:8"
														},
														{
															"body": {
																"nativeSrc": "5070:501:8",
																"nodeType": "YulBlock",
																"src": "5070:501:8",
																"statements": [
																	{
																		"nativeSrc": "5168:20:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5168:20:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5183:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5183:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5177:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5177:5:8"
																			},
																			"nativeSrc": "5177:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5177:11:8"
																		},
																		"variables": [
																			{
																				"name": "m",
																				"nativeSrc": "5172:1:8",
																				"nodeType": "YulTypedName",
																				"src": "5172:1:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "m",
																					"nativeSrc": "5218:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "5218:1:8"
																				},
																				{
																					"name": "data.offset",
																					"nativeSrc": "5221:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "5221:11:8"
																				},
																				{
																					"name": "data.length",
																					"nativeSrc": "5234:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "5234:11:8"
																				}
																			],
																			"functionName": {
																				"name": "calldatacopy",
																				"nativeSrc": "5205:12:8",
																				"nodeType": "YulIdentifier",
																				"src": "5205:12:8"
																			},
																			"nativeSrc": "5205:41:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5205:41:8"
																		},
																		"nativeSrc": "5205:41:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5205:41:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "5363:194:8",
																			"nodeType": "YulBlock",
																			"src": "5363:194:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "m",
																								"nativeSrc": "5465:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "5465:1:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5468:4:8",
																								"nodeType": "YulLiteral",
																								"src": "5468:4:8",
																								"type": "",
																								"value": "0x00"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "5474:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "5474:14:8"
																								},
																								"nativeSrc": "5474:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5474:16:8"
																							}
																						],
																						"functionName": {
																							"name": "returndatacopy",
																							"nativeSrc": "5450:14:8",
																							"nodeType": "YulIdentifier",
																							"src": "5450:14:8"
																						},
																						"nativeSrc": "5450:41:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5450:41:8"
																					},
																					"nativeSrc": "5450:41:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "5450:41:8"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "m",
																								"nativeSrc": "5519:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "5519:1:8"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "5522:14:8",
																									"nodeType": "YulIdentifier",
																									"src": "5522:14:8"
																								},
																								"nativeSrc": "5522:16:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5522:16:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "5512:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5512:6:8"
																						},
																						"nativeSrc": "5512:27:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5512:27:8"
																					},
																					"nativeSrc": "5512:27:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "5512:27:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "gas",
																								"nativeSrc": "5286:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "5286:3:8"
																							},
																							"nativeSrc": "5286:5:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5286:5:8"
																						},
																						{
																							"name": "newImplementation",
																							"nativeSrc": "5293:17:8",
																							"nodeType": "YulIdentifier",
																							"src": "5293:17:8"
																						},
																						{
																							"name": "m",
																							"nativeSrc": "5312:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "5312:1:8"
																						},
																						{
																							"name": "data.length",
																							"nativeSrc": "5315:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "5315:11:8"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "codesize",
																								"nativeSrc": "5328:8:8",
																								"nodeType": "YulIdentifier",
																								"src": "5328:8:8"
																							},
																							"nativeSrc": "5328:10:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5328:10:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5340:4:8",
																							"nodeType": "YulLiteral",
																							"src": "5340:4:8",
																							"type": "",
																							"value": "0x00"
																						}
																					],
																					"functionName": {
																						"name": "delegatecall",
																						"nativeSrc": "5273:12:8",
																						"nodeType": "YulIdentifier",
																						"src": "5273:12:8"
																					},
																					"nativeSrc": "5273:72:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5273:72:8"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "5266:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5266:6:8"
																			},
																			"nativeSrc": "5266:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5266:80:8"
																		},
																		"nativeSrc": "5263:294:8",
																		"nodeType": "YulIf",
																		"src": "5263:294:8"
																	}
																]
															},
															"condition": {
																"name": "data.length",
																"nativeSrc": "5058:11:8",
																"nodeType": "YulIdentifier",
																"src": "5058:11:8"
															},
															"nativeSrc": "5055:516:8",
															"nodeType": "YulIf",
															"src": "5055:516:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1454,
														"isOffset": false,
														"isSlot": false,
														"src": "4439:28:8",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "4839:25:8",
														"valueSize": 1
													},
													{
														"declaration": 1476,
														"isOffset": false,
														"isSlot": false,
														"src": "5058:11:8",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1476,
														"isOffset": false,
														"isSlot": false,
														"src": "5234:11:8",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1476,
														"isOffset": false,
														"isSlot": false,
														"src": "5315:11:8",
														"suffix": "length",
														"valueSize": 1
													},
													{
														"declaration": 1476,
														"isOffset": true,
														"isSlot": false,
														"src": "5221:11:8",
														"suffix": "offset",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "4277:17:8",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "4314:17:8",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "4599:17:8",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "4866:17:8",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "4907:17:8",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "5293:17:8",
														"valueSize": 1
													}
												],
												"id": 1485,
												"nodeType": "InlineAssembly",
												"src": "4254:1327:8"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "3812:195:8",
										"text": "@dev Upgrades the proxy's implementation to `newImplementation`.\n Emits a {Upgraded} event.\n Note: Passing in empty `data` skips the delegatecall to `newImplementation`."
									},
									"functionSelector": "4f1ef286",
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1478,
												"name": "onlyProxy",
												"nameLocations": [
													"4141:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1497,
												"src": "4141:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4141:9:8"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4021:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4046:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4038:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4080:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "4065:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4065:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:48:8"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4155:0:8"
									},
									"scope": 1508,
									"src": "4012:1575:8",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "5685:544:8",
										"statements": [
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "5703:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1496,
														"src": "5695:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5695:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1493,
												"initialValue": {
													"id": 1492,
													"name": "__self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "5707:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5695:18:8"
											},
											{
												"AST": {
													"nativeSrc": "5775:437:8",
													"nodeType": "YulBlock",
													"src": "5775:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6079:123:8",
																"nodeType": "YulBlock",
																"src": "6079:123:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6104:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6104:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6110:10:8",
																					"nodeType": "YulLiteral",
																					"src": "6110:10:8",
																					"type": "",
																					"value": "0x9f03a026"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6097:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6097:6:8"
																			},
																			"nativeSrc": "6097:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6097:24:8"
																		},
																		"nativeSrc": "6097:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6097:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6177:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6177:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6183:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6183:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6170:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6170:6:8"
																			},
																			"nativeSrc": "6170:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:8"
																		},
																		"nativeSrc": "6170:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "s",
																		"nativeSrc": "6065:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6065:1:8"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "address",
																			"nativeSrc": "6068:7:8",
																			"nodeType": "YulIdentifier",
																			"src": "6068:7:8"
																		},
																		"nativeSrc": "6068:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6068:9:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6062:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6062:2:8"
																},
																"nativeSrc": "6062:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6062:16:8"
															},
															"nativeSrc": "6059:143:8",
															"nodeType": "YulIf",
															"src": "6059:143:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1491,
														"isOffset": false,
														"isSlot": false,
														"src": "6065:1:8",
														"valueSize": 1
													}
												],
												"id": 1494,
												"nodeType": "InlineAssembly",
												"src": "5766:446:8"
											},
											{
												"id": 1495,
												"nodeType": "PlaceholderStatement",
												"src": "6221:1:8"
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "5593:66:8",
										"text": "@dev Requires that the execution is performed through a proxy."
									},
									"id": 1497,
									"name": "onlyProxy",
									"nameLocation": "5673:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5682:2:8"
									},
									"src": "5664:565:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "6380:282:8",
										"statements": [
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "6398:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1506,
														"src": "6390:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6390:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"id": 1502,
													"name": "__self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1441,
													"src": "6402:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6390:18:8"
											},
											{
												"AST": {
													"nativeSrc": "6470:175:8",
													"nodeType": "YulBlock",
													"src": "6470:175:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6512:123:8",
																"nodeType": "YulBlock",
																"src": "6512:123:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6537:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6537:4:8",
																					"type": "",
																					"value": "0x00"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6543:10:8",
																					"nodeType": "YulLiteral",
																					"src": "6543:10:8",
																					"type": "",
																					"value": "0x9f03a026"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6530:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6530:6:8"
																			},
																			"nativeSrc": "6530:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6530:24:8"
																		},
																		"nativeSrc": "6530:24:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6530:24:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6610:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6610:4:8",
																					"type": "",
																					"value": "0x1c"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6616:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6616:4:8",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6603:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6603:6:8"
																			},
																			"nativeSrc": "6603:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6603:18:8"
																		},
																		"nativeSrc": "6603:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6603:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "s",
																				"nativeSrc": "6497:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "6497:1:8"
																			},
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "address",
																					"nativeSrc": "6500:7:8",
																					"nodeType": "YulIdentifier",
																					"src": "6500:7:8"
																				},
																				"nativeSrc": "6500:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6500:9:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6494:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6494:2:8"
																		},
																		"nativeSrc": "6494:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6494:16:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6487:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6487:6:8"
																},
																"nativeSrc": "6487:24:8",
																"nodeType": "YulFunctionCall",
																"src": "6487:24:8"
															},
															"nativeSrc": "6484:151:8",
															"nodeType": "YulIf",
															"src": "6484:151:8"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1501,
														"isOffset": false,
														"isSlot": false,
														"src": "6497:1:8",
														"valueSize": 1
													}
												],
												"id": 1504,
												"nodeType": "InlineAssembly",
												"src": "6461:184:8"
											},
											{
												"id": 1505,
												"nodeType": "PlaceholderStatement",
												"src": "6654:1:8"
											}
										]
									},
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "6235:116:8",
										"text": "@dev Requires that the execution is NOT performed via delegatecall.\n This is the opposite of `onlyProxy`."
									},
									"id": 1507,
									"name": "notDelegated",
									"nameLocation": "6365:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6377:2:8"
									},
									"src": "6356:306:8",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1509,
							"src": "635:6029:8",
							"usedErrors": [
								1425,
								1428
							],
							"usedEvents": [
								1446
							]
						}
					],
					"src": "32:6632:8"
				},
				"id": 8
			},
			"src/helpers/Helpers.sol": {
				"ast": {
					"absolutePath": "src/helpers/Helpers.sol",
					"exportedSymbols": {
						"SIG_VALIDATION_FAILED": [
							1513
						],
						"SIG_VALIDATION_SUCCESS": [
							1516
						],
						"ValidationData": [
							1524
						],
						"_packValidationData": [
							1621,
							1659
						],
						"_parseValidationData": [
							1584
						],
						"calldataKeccak": [
							1669
						],
						"finalizeAllocation": [
							1697
						],
						"min": [
							1687
						]
					},
					"id": 1698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1510,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"constant": true,
							"id": 1513,
							"mutability": "constant",
							"name": "SIG_VALIDATION_FAILED",
							"nameLocation": "277:21:9",
							"nodeType": "VariableDeclaration",
							"scope": 1698,
							"src": "260:42:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1511,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "260:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "31",
								"id": 1512,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "301:1:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1_by_1",
									"typeString": "int_const 1"
								},
								"value": "1"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1516,
							"mutability": "constant",
							"name": "SIG_VALIDATION_SUCCESS",
							"nameLocation": "436:22:9",
							"nodeType": "VariableDeclaration",
							"scope": 1698,
							"src": "419:43:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1514,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "419:7:9",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "30",
								"id": 1515,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "461:1:9",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_0_by_1",
									"typeString": "int_const 0"
								},
								"value": "0"
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "ValidationData",
							"documentation": {
								"id": 1517,
								"nodeType": "StructuredDocumentation",
								"src": "466:659:9",
								"text": " Returned data from validateUserOp.\n validateUserOp returns a uint256, which is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"."
							},
							"id": 1524,
							"members": [
								{
									"constant": false,
									"id": 1519,
									"mutability": "mutable",
									"name": "aggregator",
									"nameLocation": "1162:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "1154:18:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1518,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1154:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1521,
									"mutability": "mutable",
									"name": "validAfter",
									"nameLocation": "1185:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "1178:17:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 1520,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "1178:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1523,
									"mutability": "mutable",
									"name": "validUntil",
									"nameLocation": "1208:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "1201:17:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint48",
										"typeString": "uint48"
									},
									"typeName": {
										"id": 1522,
										"name": "uint48",
										"nodeType": "ElementaryTypeName",
										"src": "1201:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidationData",
							"nameLocation": "1133:14:9",
							"nodeType": "StructDefinition",
							"scope": 1698,
							"src": "1126:95:9",
							"visibility": "public"
						},
						{
							"body": {
								"id": 1583,
								"nodeType": "Block",
								"src": "1556:314:9",
								"statements": [
									{
										"assignments": [
											1534
										],
										"declarations": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "1570:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1562:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 1542,
										"initialValue": {
											"arguments": [
												{
													"arguments": [
														{
															"id": 1539,
															"name": "validationData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "1599:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1591:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 1537,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1591:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1591:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												],
												"id": 1536,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1583:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:9",
													"typeDescriptions": {}
												}
											},
											"id": 1541,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1583:32:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1562:53:9"
									},
									{
										"assignments": [
											1544
										],
										"declarations": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "validUntil",
												"nameLocation": "1628:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1621:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1543,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1621:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 1551,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1547,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "1648:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "313630",
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1666:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "1648:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 1546,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1641:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 1545,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1641:6:9",
													"typeDescriptions": {}
												}
											},
											"id": 1550,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1641:29:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1621:49:9"
									},
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"id": 1554,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 1552,
												"name": "validUntil",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1544,
												"src": "1680:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "==",
											"rightExpression": {
												"hexValue": "30",
												"id": 1553,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1694:1:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "1680:15:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 1564,
										"nodeType": "IfStatement",
										"src": "1676:67:9",
										"trueBody": {
											"id": 1563,
											"nodeType": "Block",
											"src": "1697:46:9",
											"statements": [
												{
													"expression": {
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1555,
															"name": "validUntil",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "1707:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"arguments": [
																	{
																		"id": 1558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1725:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 1557,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "1725:6:9",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		}
																	],
																	"id": 1556,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1720:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint48",
																	"typeString": "type(uint48)"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1733:3:9",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1720:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint48",
																"typeString": "uint48"
															}
														},
														"src": "1707:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"id": 1562,
													"nodeType": "ExpressionStatement",
													"src": "1707:29:9"
												}
											]
										}
									},
									{
										"assignments": [
											1566
										],
										"declarations": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "validAfter",
												"nameLocation": "1755:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1748:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1565,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1748:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"id": 1576,
										"initialValue": {
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1569,
														"name": "validationData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "1775:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																},
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3438",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1794:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_48_by_1",
																		"typeString": "int_const 48"
																	},
																	"value": "48"
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "313630",
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1799:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_160_by_1",
																		"typeString": "int_const 160"
																	},
																	"value": "160"
																},
																"src": "1794:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_208_by_1",
																	"typeString": "int_const 208"
																}
															}
														],
														"id": 1573,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1793:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_208_by_1",
															"typeString": "int_const 208"
														}
													},
													"src": "1775:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 1568,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1768:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_uint48_$",
													"typeString": "type(uint48)"
												},
												"typeName": {
													"id": 1567,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "1768:6:9",
													"typeDescriptions": {}
												}
											},
											"id": 1575,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1768:36:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"nodeType": "VariableDeclarationStatement",
										"src": "1748:56:9"
									},
									{
										"expression": {
											"arguments": [
												{
													"id": 1578,
													"name": "aggregator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1534,
													"src": "1832:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1579,
													"name": "validAfter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1566,
													"src": "1844:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												{
													"id": 1580,
													"name": "validUntil",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1544,
													"src": "1856:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													},
													{
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												],
												"id": 1577,
												"name": "ValidationData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1524,
												"src": "1817:14:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_struct$_ValidationData_$1524_storage_ptr_$",
													"typeString": "type(struct ValidationData storage pointer)"
												}
											},
											"id": 1581,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "structConstructorCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1817:50:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$1524_memory_ptr",
												"typeString": "struct ValidationData memory"
											}
										},
										"functionReturnParameters": 1532,
										"id": 1582,
										"nodeType": "Return",
										"src": "1810:57:9"
									}
								]
							},
							"documentation": {
								"id": 1525,
								"nodeType": "StructuredDocumentation",
								"src": "1223:230:9",
								"text": " Extract aggregator/sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data.\n @return data - The unpacked in-memory validation data."
							},
							"id": 1584,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_parseValidationData",
							"nameLocation": "1463:20:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1528,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1527,
										"mutability": "mutable",
										"name": "validationData",
										"nameLocation": "1497:14:9",
										"nodeType": "VariableDeclaration",
										"scope": 1584,
										"src": "1489:22:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1526,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1483:30:9"
							},
							"returnParameters": {
								"id": 1532,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1531,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "1550:4:9",
										"nodeType": "VariableDeclaration",
										"scope": 1584,
										"src": "1528:26:9",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$1524_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 1530,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1529,
												"name": "ValidationData",
												"nameLocations": [
													"1528:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1524,
												"src": "1528:14:9"
											},
											"referencedDeclaration": 1524,
											"src": "1528:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$1524_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1527:28:9"
							},
							"scope": 1698,
							"src": "1454:416:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1620,
								"nodeType": "Block",
								"src": "2105:143:9",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1618,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1606,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"arguments": [
														{
															"expression": {
																"id": 1595,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "2134:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ValidationData_$1524_memory_ptr",
																	"typeString": "struct ValidationData memory"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2139:10:9",
															"memberName": "aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1519,
															"src": "2134:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2126:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 1593,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2126:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1600,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "2170:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ValidationData_$1524_memory_ptr",
																				"typeString": "struct ValidationData memory"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2175:10:9",
																		"memberName": "validUntil",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1523,
																		"src": "2170:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2162:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1598,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2162:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2162:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2190:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "2162:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1605,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2161:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "2126:68:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1609,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "2214:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ValidationData_$1524_memory_ptr",
																			"typeString": "struct ValidationData memory"
																		}
																	},
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2219:10:9",
																	"memberName": "validAfter",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1521,
																	"src": "2214:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2206:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1607,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2206:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2206:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2235:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2241:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "2235:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 1615,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2234:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "2206:38:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 1617,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "2205:40:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "2126:119:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 1592,
										"id": 1619,
										"nodeType": "Return",
										"src": "2111:134:9"
									}
								]
							},
							"documentation": {
								"id": 1585,
								"nodeType": "StructuredDocumentation",
								"src": "1872:146:9",
								"text": " Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack.\n @return the packed validation data."
							},
							"id": 1621,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "2028:19:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1589,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1588,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "2075:4:9",
										"nodeType": "VariableDeclaration",
										"scope": 1621,
										"src": "2053:26:9",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ValidationData_$1524_memory_ptr",
											"typeString": "struct ValidationData"
										},
										"typeName": {
											"id": 1587,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1586,
												"name": "ValidationData",
												"nameLocations": [
													"2053:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1524,
												"src": "2053:14:9"
											},
											"referencedDeclaration": 1524,
											"src": "2053:14:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ValidationData_$1524_storage_ptr",
												"typeString": "struct ValidationData"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2047:34:9"
							},
							"returnParameters": {
								"id": 1592,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1591,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1621,
										"src": "2096:7:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1590,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2096:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2095:9:9"
							},
							"scope": 1698,
							"src": "2019:229:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1658,
								"nodeType": "Block",
								"src": "2731:170:9",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1656,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1645,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"components": [
														{
															"condition": {
																"id": 1633,
																"name": "sigFailed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "2753:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1635,
																"name": "SIG_VALIDATION_SUCCESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1516,
																"src": "2790:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2753:59:9",
															"trueExpression": {
																"id": 1634,
																"name": "SIG_VALIDATION_FAILED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "2766:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1637,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2752:61:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "|",
												"rightExpression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1640,
																		"name": "validUntil",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "2833:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint48",
																			"typeString": "uint48"
																		}
																	],
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2825:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1638,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2825:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2825:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "313630",
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2848:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_160_by_1",
																	"typeString": "int_const 160"
																},
																"value": "160"
															},
															"src": "2825:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1644,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2824:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "2752:100:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "|",
											"rightExpression": {
												"components": [
													{
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1648,
																	"name": "validAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1628,
																	"src": "2872:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																],
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2864:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1646,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2864:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2864:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	},
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "313630",
																		"id": 1650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2888:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3438",
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2894:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	"src": "2888:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_208_by_1",
																		"typeString": "int_const 208"
																	}
																}
															],
															"id": 1653,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2887:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_208_by_1",
																"typeString": "int_const 208"
															}
														},
														"src": "2864:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												],
												"id": 1655,
												"isConstant": false,
												"isInlineArray": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"nodeType": "TupleExpression",
												"src": "2863:35:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "2752:146:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 1632,
										"id": 1657,
										"nodeType": "Return",
										"src": "2737:161:9"
									}
								]
							},
							"documentation": {
								"id": 1622,
								"nodeType": "StructuredDocumentation",
								"src": "2250:360:9",
								"text": " Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n @param validAfter - First timestamp this UserOperation is valid.\n @return the packed validation data."
							},
							"id": 1659,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "_packValidationData",
							"nameLocation": "2620:19:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1629,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1624,
										"mutability": "mutable",
										"name": "sigFailed",
										"nameLocation": "2650:9:9",
										"nodeType": "VariableDeclaration",
										"scope": 1659,
										"src": "2645:14:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"typeName": {
											"id": 1623,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2645:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1626,
										"mutability": "mutable",
										"name": "validUntil",
										"nameLocation": "2672:10:9",
										"nodeType": "VariableDeclaration",
										"scope": 1659,
										"src": "2665:17:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 1625,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "2665:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1628,
										"mutability": "mutable",
										"name": "validAfter",
										"nameLocation": "2695:10:9",
										"nodeType": "VariableDeclaration",
										"scope": 1659,
										"src": "2688:17:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint48",
											"typeString": "uint48"
										},
										"typeName": {
											"id": 1627,
											"name": "uint48",
											"nodeType": "ElementaryTypeName",
											"src": "2688:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2639:68:9"
							},
							"returnParameters": {
								"id": 1632,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1631,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1659,
										"src": "2722:7:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1630,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2722:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2721:9:9"
							},
							"scope": 1698,
							"src": "2611:290:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1668,
								"nodeType": "Block",
								"src": "3277:209:9",
								"statements": [
									{
										"AST": {
											"nativeSrc": "3312:168:9",
											"nodeType": "YulBlock",
											"src": "3312:168:9",
											"statements": [
												{
													"nativeSrc": "3326:22:9",
													"nodeType": "YulVariableDeclaration",
													"src": "3326:22:9",
													"value": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3343:4:9",
																"nodeType": "YulLiteral",
																"src": "3343:4:9",
																"type": "",
																"value": "0x40"
															}
														],
														"functionName": {
															"name": "mload",
															"nativeSrc": "3337:5:9",
															"nodeType": "YulIdentifier",
															"src": "3337:5:9"
														},
														"nativeSrc": "3337:11:9",
														"nodeType": "YulFunctionCall",
														"src": "3337:11:9"
													},
													"variables": [
														{
															"name": "mem",
															"nativeSrc": "3330:3:9",
															"nodeType": "YulTypedName",
															"src": "3330:3:9",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "3361:22:9",
													"nodeType": "YulVariableDeclaration",
													"src": "3361:22:9",
													"value": {
														"name": "data.length",
														"nativeSrc": "3372:11:9",
														"nodeType": "YulIdentifier",
														"src": "3372:11:9"
													},
													"variables": [
														{
															"name": "len",
															"nativeSrc": "3365:3:9",
															"nodeType": "YulTypedName",
															"src": "3365:3:9",
															"type": ""
														}
													]
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "mem",
																"nativeSrc": "3409:3:9",
																"nodeType": "YulIdentifier",
																"src": "3409:3:9"
															},
															{
																"name": "data.offset",
																"nativeSrc": "3414:11:9",
																"nodeType": "YulIdentifier",
																"src": "3414:11:9"
															},
															{
																"name": "len",
																"nativeSrc": "3427:3:9",
																"nodeType": "YulIdentifier",
																"src": "3427:3:9"
															}
														],
														"functionName": {
															"name": "calldatacopy",
															"nativeSrc": "3396:12:9",
															"nodeType": "YulIdentifier",
															"src": "3396:12:9"
														},
														"nativeSrc": "3396:35:9",
														"nodeType": "YulFunctionCall",
														"src": "3396:35:9"
													},
													"nativeSrc": "3396:35:9",
													"nodeType": "YulExpressionStatement",
													"src": "3396:35:9"
												},
												{
													"nativeSrc": "3444:26:9",
													"nodeType": "YulAssignment",
													"src": "3444:26:9",
													"value": {
														"arguments": [
															{
																"name": "mem",
																"nativeSrc": "3461:3:9",
																"nodeType": "YulIdentifier",
																"src": "3461:3:9"
															},
															{
																"name": "len",
																"nativeSrc": "3466:3:9",
																"nodeType": "YulIdentifier",
																"src": "3466:3:9"
															}
														],
														"functionName": {
															"name": "keccak256",
															"nativeSrc": "3451:9:9",
															"nodeType": "YulIdentifier",
															"src": "3451:9:9"
														},
														"nativeSrc": "3451:19:9",
														"nodeType": "YulFunctionCall",
														"src": "3451:19:9"
													},
													"variableNames": [
														{
															"name": "ret",
															"nativeSrc": "3444:3:9",
															"nodeType": "YulIdentifier",
															"src": "3444:3:9"
														}
													]
												}
											]
										},
										"evmVersion": "prague",
										"externalReferences": [
											{
												"declaration": 1662,
												"isOffset": false,
												"isSlot": false,
												"src": "3372:11:9",
												"suffix": "length",
												"valueSize": 1
											},
											{
												"declaration": 1662,
												"isOffset": true,
												"isSlot": false,
												"src": "3414:11:9",
												"suffix": "offset",
												"valueSize": 1
											},
											{
												"declaration": 1665,
												"isOffset": false,
												"isSlot": false,
												"src": "3444:3:9",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 1667,
										"nodeType": "InlineAssembly",
										"src": "3287:193:9"
									}
								]
							},
							"documentation": {
								"id": 1660,
								"nodeType": "StructuredDocumentation",
								"src": "2903:297:9",
								"text": " keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n @param data - the calldata bytes array to perform keccak on.\n @return ret - the keccak hash of the 'data' array."
							},
							"id": 1669,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "calldataKeccak",
							"nameLocation": "3214:14:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1663,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1662,
										"mutability": "mutable",
										"name": "data",
										"nameLocation": "3244:4:9",
										"nodeType": "VariableDeclaration",
										"scope": 1669,
										"src": "3229:19:9",
										"stateVariable": false,
										"storageLocation": "calldata",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_calldata_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 1661,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "3229:5:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3228:21:9"
							},
							"returnParameters": {
								"id": 1666,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1665,
										"mutability": "mutable",
										"name": "ret",
										"nameLocation": "3272:3:9",
										"nodeType": "VariableDeclaration",
										"scope": 1669,
										"src": "3264:11:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 1664,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3264:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3263:13:9"
							},
							"scope": 1698,
							"src": "3205:281:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1686,
								"nodeType": "Block",
								"src": "3679:37:9",
								"statements": [
									{
										"expression": {
											"condition": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 1681,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"id": 1679,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "3696:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": "<",
												"rightExpression": {
													"id": 1680,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1674,
													"src": "3700:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"src": "3696:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"falseExpression": {
												"id": 1683,
												"name": "b",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1674,
												"src": "3708:1:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1684,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "Conditional",
											"src": "3696:13:9",
											"trueExpression": {
												"id": 1682,
												"name": "a",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1672,
												"src": "3704:1:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 1678,
										"id": 1685,
										"nodeType": "Return",
										"src": "3689:20:9"
									}
								]
							},
							"documentation": {
								"id": 1670,
								"nodeType": "StructuredDocumentation",
								"src": "3489:127:9",
								"text": " The minimum of two numbers.\n @param a - First number.\n @param b - Second number.\n @return - the minimum value."
							},
							"id": 1687,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "min",
							"nameLocation": "3630:3:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1675,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1672,
										"mutability": "mutable",
										"name": "a",
										"nameLocation": "3642:1:9",
										"nodeType": "VariableDeclaration",
										"scope": 1687,
										"src": "3634:9:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1671,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3634:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1674,
										"mutability": "mutable",
										"name": "b",
										"nameLocation": "3653:1:9",
										"nodeType": "VariableDeclaration",
										"scope": 1687,
										"src": "3645:9:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1673,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3645:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3633:22:9"
							},
							"returnParameters": {
								"id": 1678,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1677,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1687,
										"src": "3670:7:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1676,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3670:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3669:9:9"
							},
							"scope": 1698,
							"src": "3621:95:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 1696,
								"nodeType": "Block",
								"src": "4009:430:9",
								"statements": [
									{
										"AST": {
											"nativeSrc": "4044:389:9",
											"nodeType": "YulBlock",
											"src": "4044:389:9",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"name": "memPointer",
																"nativeSrc": "4078:10:9",
																"nodeType": "YulIdentifier",
																"src": "4078:10:9"
															},
															{
																"name": "allocationSize",
																"nativeSrc": "4090:14:9",
																"nodeType": "YulIdentifier",
																"src": "4090:14:9"
															}
														],
														"functionName": {
															"name": "finalize_allocation",
															"nativeSrc": "4058:19:9",
															"nodeType": "YulIdentifier",
															"src": "4058:19:9"
														},
														"nativeSrc": "4058:47:9",
														"nodeType": "YulFunctionCall",
														"src": "4058:47:9"
													},
													"nativeSrc": "4058:47:9",
													"nodeType": "YulExpressionStatement",
													"src": "4058:47:9"
												},
												{
													"body": {
														"nativeSrc": "4162:129:9",
														"nodeType": "YulBlock",
														"src": "4162:129:9",
														"statements": [
															{
																"nativeSrc": "4180:58:9",
																"nodeType": "YulVariableDeclaration",
																"src": "4180:58:9",
																"value": {
																	"arguments": [
																		{
																			"name": "memPtr",
																			"nativeSrc": "4202:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4202:6:9"
																		},
																		{
																			"arguments": [
																				{
																					"name": "size",
																					"nativeSrc": "4232:4:9",
																					"nodeType": "YulIdentifier",
																					"src": "4232:4:9"
																				}
																			],
																			"functionName": {
																				"name": "round_up_to_mul_of_32",
																				"nativeSrc": "4210:21:9",
																				"nodeType": "YulIdentifier",
																				"src": "4210:21:9"
																			},
																			"nativeSrc": "4210:27:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4210:27:9"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nativeSrc": "4198:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4198:3:9"
																	},
																	"nativeSrc": "4198:40:9",
																	"nodeType": "YulFunctionCall",
																	"src": "4198:40:9"
																},
																"variables": [
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4184:10:9",
																		"nodeType": "YulTypedName",
																		"src": "4184:10:9",
																		"type": ""
																	}
																]
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nativeSrc": "4262:2:9",
																			"nodeType": "YulLiteral",
																			"src": "4262:2:9",
																			"type": "",
																			"value": "64"
																		},
																		{
																			"name": "newFreePtr",
																			"nativeSrc": "4266:10:9",
																			"nodeType": "YulIdentifier",
																			"src": "4266:10:9"
																		}
																	],
																	"functionName": {
																		"name": "mstore",
																		"nativeSrc": "4255:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:9"
																	},
																	"nativeSrc": "4255:22:9",
																	"nodeType": "YulFunctionCall",
																	"src": "4255:22:9"
																},
																"nativeSrc": "4255:22:9",
																"nodeType": "YulExpressionStatement",
																"src": "4255:22:9"
															}
														]
													},
													"name": "finalize_allocation",
													"nativeSrc": "4119:172:9",
													"nodeType": "YulFunctionDefinition",
													"parameters": [
														{
															"name": "memPtr",
															"nativeSrc": "4148:6:9",
															"nodeType": "YulTypedName",
															"src": "4148:6:9",
															"type": ""
														},
														{
															"name": "size",
															"nativeSrc": "4156:4:9",
															"nodeType": "YulTypedName",
															"src": "4156:4:9",
															"type": ""
														}
													],
													"src": "4119:172:9"
												},
												{
													"body": {
														"nativeSrc": "4353:70:9",
														"nodeType": "YulBlock",
														"src": "4353:70:9",
														"statements": [
															{
																"nativeSrc": "4371:38:9",
																"nodeType": "YulAssignment",
																"src": "4371:38:9",
																"value": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "4389:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4389:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4396:2:9",
																					"nodeType": "YulLiteral",
																					"src": "4396:2:9",
																					"type": "",
																					"value": "31"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4385:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4385:3:9"
																			},
																			"nativeSrc": "4385:14:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4385:14:9"
																		},
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4405:2:9",
																					"nodeType": "YulLiteral",
																					"src": "4405:2:9",
																					"type": "",
																					"value": "31"
																				}
																			],
																			"functionName": {
																				"name": "not",
																				"nativeSrc": "4401:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4401:3:9"
																			},
																			"nativeSrc": "4401:7:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4401:7:9"
																		}
																	],
																	"functionName": {
																		"name": "and",
																		"nativeSrc": "4381:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4381:3:9"
																	},
																	"nativeSrc": "4381:28:9",
																	"nodeType": "YulFunctionCall",
																	"src": "4381:28:9"
																},
																"variableNames": [
																	{
																		"name": "result",
																		"nativeSrc": "4371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4371:6:9"
																	}
																]
															}
														]
													},
													"name": "round_up_to_mul_of_32",
													"nativeSrc": "4305:118:9",
													"nodeType": "YulFunctionDefinition",
													"parameters": [
														{
															"name": "value",
															"nativeSrc": "4336:5:9",
															"nodeType": "YulTypedName",
															"src": "4336:5:9",
															"type": ""
														}
													],
													"returnVariables": [
														{
															"name": "result",
															"nativeSrc": "4346:6:9",
															"nodeType": "YulTypedName",
															"src": "4346:6:9",
															"type": ""
														}
													],
													"src": "4305:118:9"
												}
											]
										},
										"evmVersion": "prague",
										"externalReferences": [
											{
												"declaration": 1692,
												"isOffset": false,
												"isSlot": false,
												"src": "4090:14:9",
												"valueSize": 1
											},
											{
												"declaration": 1690,
												"isOffset": false,
												"isSlot": false,
												"src": "4078:10:9",
												"valueSize": 1
											}
										],
										"flags": [
											"memory-safe"
										],
										"id": 1695,
										"nodeType": "InlineAssembly",
										"src": "4020:413:9"
									}
								]
							},
							"documentation": {
								"id": 1688,
								"nodeType": "StructuredDocumentation",
								"src": "3718:209:9",
								"text": " standard solidity memory allocation finalization.\n copied from solidity generated code\n @param memPointer - The current memory pointer\n @param allocationSize - Bytes allocated from memPointer."
							},
							"id": 1697,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "finalizeAllocation",
							"nameLocation": "3941:18:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1693,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1690,
										"mutability": "mutable",
										"name": "memPointer",
										"nameLocation": "3968:10:9",
										"nodeType": "VariableDeclaration",
										"scope": 1697,
										"src": "3960:18:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1689,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3960:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1692,
										"mutability": "mutable",
										"name": "allocationSize",
										"nameLocation": "3988:14:9",
										"nodeType": "VariableDeclaration",
										"scope": 1697,
										"src": "3980:22:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1691,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3980:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3959:44:9"
							},
							"returnParameters": {
								"id": 1694,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4009:0:9"
							},
							"scope": 1698,
							"src": "3932:507:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "32:4408:9"
				},
				"id": 9
			},
			"src/interfaces/IAccount.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IAccount.sol",
					"exportedSymbols": {
						"IAccount": [
							1714
						],
						"PackedUserOperation": [
							2097
						]
					},
					"id": 1715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "src/interfaces/PackedUserOperation.sol",
							"file": "./PackedUserOperation.sol",
							"id": 1700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1715,
							"sourceUnit": 2098,
							"src": "58:35:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccount",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1714,
							"linearizedBaseContracts": [
								1714
							],
							"name": "IAccount",
							"nameLocation": "105:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "120:2304:10",
										"text": " Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp              - The operation that is about to be executed.\n @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n                              This is the minimum amount to transfer to the sender(entryPoint) to be\n                              able to make the call. The excess is left as a deposit in the entrypoint\n                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n                              In case there is a paymaster in the request (or the current deposit is high\n                              enough), this value will be zero.\n @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n                              `_unpackValidationData` to encode and decode.\n                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                 otherwise, an address of an \"aggregator\" contract.\n                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                              <6-byte> validAfter - First timestamp this operation is valid\n                                                    If an account doesn't use time-range, it is enough to\n                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n                              Note that the validation code cannot use block.timestamp (or block.number) directly."
									},
									"functionSelector": "19822f7c",
									"id": 1713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateUserOp",
									"nameLocation": "2438:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "2491:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2462:35:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 1703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1702,
														"name": "PackedUserOperation",
														"nameLocations": [
															"2462:19:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "2462:19:10"
													},
													"referencedDeclaration": 2097,
													"src": "2462:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "2515:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2507:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "missingAccountFunds",
												"nameLocation": "2543:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2535:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2452:116:10"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "validationData",
												"nameLocation": "2595:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2587:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:24:10"
									},
									"scope": 1714,
									"src": "2429:182:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1715,
							"src": "95:2518:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2582:10"
				},
				"id": 10
			},
			"src/interfaces/IAggregator.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IAggregator.sol",
					"exportedSymbols": {
						"IAggregator": [
							1748
						],
						"PackedUserOperation": [
							2097
						]
					},
					"id": 1749,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "src/interfaces/PackedUserOperation.sol",
							"file": "./PackedUserOperation.sol",
							"id": 1717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1749,
							"sourceUnit": 2098,
							"src": "58:35:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAggregator",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1718,
								"nodeType": "StructuredDocumentation",
								"src": "95:43:11",
								"text": " Aggregated Signatures validator."
							},
							"fullyImplemented": false,
							"id": 1748,
							"linearizedBaseContracts": [
								1748
							],
							"name": "IAggregator",
							"nameLocation": "149:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "167:276:11",
										"text": " Validate an aggregated signature.\n Reverts if the aggregated signature does not match the given list of operations.\n @param userOps   - An array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."
									},
									"functionSelector": "2dd81133",
									"id": 1728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateSignatures",
									"nameLocation": "457:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "userOps",
												"nameLocation": "516:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "485:38:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct PackedUserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 1721,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1720,
															"name": "PackedUserOperation",
															"nameLocations": [
																"485:19:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2097,
															"src": "485:19:11"
														},
														"referencedDeclaration": 2097,
														"src": "485:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
															"typeString": "struct PackedUserOperation"
														}
													},
													"id": 1722,
													"nodeType": "ArrayTypeName",
													"src": "485:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_storage_$dyn_storage_ptr",
														"typeString": "struct PackedUserOperation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "548:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "533:24:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1724,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "533:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:88:11"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "572:0:11"
									},
									"scope": 1748,
									"src": "448:125:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "579:614:11",
										"text": " Validate the signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."
									},
									"functionSelector": "062a422b",
									"id": 1737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validateUserOpSignature",
									"nameLocation": "1207:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "1269:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1240:35:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 1731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1730,
														"name": "PackedUserOperation",
														"nameLocations": [
															"1240:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "1240:19:11"
													},
													"referencedDeclaration": 2097,
													"src": "1240:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:51:11"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "sigForUserOp",
												"nameLocation": "1318:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "1305:25:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1305:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:27:11"
									},
									"scope": 1748,
									"src": "1198:134:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "1338:393:11",
										"text": " Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code to perform this aggregation.\n @param userOps              - An array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."
									},
									"functionSelector": "ae574a43",
									"id": 1747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "aggregateSignatures",
									"nameLocation": "1745:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "userOps",
												"nameLocation": "1805:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "1774:38:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct PackedUserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 1740,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1739,
															"name": "PackedUserOperation",
															"nameLocations": [
																"1774:19:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2097,
															"src": "1774:19:11"
														},
														"referencedDeclaration": 2097,
														"src": "1774:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
															"typeString": "struct PackedUserOperation"
														}
													},
													"id": 1741,
													"nodeType": "ArrayTypeName",
													"src": "1774:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_storage_$dyn_storage_ptr",
														"typeString": "struct PackedUserOperation[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:54:11"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "aggregatedSignature",
												"nameLocation": "1855:19:11",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "1842:32:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1842:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1841:34:11"
									},
									"scope": 1748,
									"src": "1736:140:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1749,
							"src": "139:1739:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1847:11"
				},
				"id": 11
			},
			"src/interfaces/IEntryPoint.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IEntryPoint.sol",
					"exportedSymbols": {
						"IAggregator": [
							1748
						],
						"IEntryPoint": [
							1933
						],
						"INonceManager": [
							1952
						],
						"ISenderCreator": [
							1971
						],
						"IStakeManager": [
							2075
						],
						"PackedUserOperation": [
							2097
						]
					},
					"id": 1934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1750,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "159:24:12"
						},
						{
							"absolutePath": "src/interfaces/PackedUserOperation.sol",
							"file": "./PackedUserOperation.sol",
							"id": 1751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1934,
							"sourceUnit": 2098,
							"src": "307:35:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IStakeManager.sol",
							"file": "./IStakeManager.sol",
							"id": 1752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1934,
							"sourceUnit": 2076,
							"src": "343:29:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IAggregator.sol",
							"file": "./IAggregator.sol",
							"id": 1753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1934,
							"sourceUnit": 1749,
							"src": "373:27:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/INonceManager.sol",
							"file": "./INonceManager.sol",
							"id": 1754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1934,
							"sourceUnit": 1953,
							"src": "401:29:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/ISenderCreator.sol",
							"file": "./ISenderCreator.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1934,
							"sourceUnit": 1972,
							"src": "431:30:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1756,
										"name": "IStakeManager",
										"nameLocations": [
											"488:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2075,
										"src": "488:13:12"
									},
									"id": 1757,
									"nodeType": "InheritanceSpecifier",
									"src": "488:13:12"
								},
								{
									"baseName": {
										"id": 1758,
										"name": "INonceManager",
										"nameLocations": [
											"503:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1952,
										"src": "503:13:12"
									},
									"id": 1759,
									"nodeType": "InheritanceSpecifier",
									"src": "503:13:12"
								}
							],
							"canonicalName": "IEntryPoint",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1933,
							"linearizedBaseContracts": [
								1933,
								1952,
								2075
							],
							"name": "IEntryPoint",
							"nameLocation": "473:11:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f",
									"id": 1775,
									"name": "UserOperationEvent",
									"nameLocation": "1282:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1326:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1310:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1760,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1362:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1346:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"indexed": true,
												"mutability": "mutable",
												"name": "paymaster",
												"nameLocation": "1394:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1378:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1421:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1413:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"indexed": false,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1441:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1436:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1436:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualGasCost",
												"nameLocation": "1466:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1458:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualGasUsed",
												"nameLocation": "1497:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1489:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:216:12"
									},
									"src": "1276:241:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1776,
										"nodeType": "StructuredDocumentation",
										"src": "1523:349:12",
										"text": " Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"
									},
									"eventSelector": "d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d",
									"id": 1786,
									"name": "AccountDeployed",
									"nameLocation": "1883:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "1924:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "1908:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1777,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1908:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1960:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "1944:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"indexed": false,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "1984:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "1976:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymaster",
												"nameLocation": "2009:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2001:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:126:12"
									},
									"src": "1877:148:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "2031:356:12",
										"text": " An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted \"callData\" call."
									},
									"eventSelector": "1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201",
									"id": 1797,
									"name": "UserOperationRevertReason",
									"nameLocation": "2398:25:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "2449:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2433:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1788,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2485:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2469:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2509:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2501:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"indexed": false,
												"mutability": "mutable",
												"name": "revertReason",
												"nameLocation": "2530:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2524:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2524:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2423:125:12"
									},
									"src": "2392:157:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "2555:372:12",
										"text": " An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted call to \"postOp\"."
									},
									"eventSelector": "f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792",
									"id": 1808,
									"name": "PostOpRevertReason",
									"nameLocation": "2938:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "2982:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "2966:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1799,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2966:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3018:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "3002:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3042:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "3034:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"indexed": false,
												"mutability": "mutable",
												"name": "revertReason",
												"nameLocation": "3063:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "3057:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3057:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2956:125:12"
									},
									"src": "2932:150:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "3088:284:12",
										"text": " UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."
									},
									"eventSelector": "67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e",
									"id": 1817,
									"name": "UserOperationPrefundTooLow",
									"nameLocation": "3383:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"indexed": true,
												"mutability": "mutable",
												"name": "userOpHash",
												"nameLocation": "3435:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3419:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3471:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3455:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "3495:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3487:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3487:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3409:97:12"
									},
									"src": "3377:130:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "3513:184:12",
										"text": " An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."
									},
									"eventSelector": "bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972",
									"id": 1820,
									"name": "BeforeExecution",
									"nameLocation": "3708:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3723:2:12"
									},
									"src": "3702:24:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "3732:187:12",
										"text": " Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."
									},
									"eventSelector": "575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d",
									"id": 1825,
									"name": "SignatureAggregatorChanged",
									"nameLocation": "3930:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"indexed": true,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "3973:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "3957:26:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3956:28:12"
									},
									"src": "3924:61:12"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "3991:819:12",
										"text": " A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."
									},
									"errorSelector": "220266b6",
									"id": 1832,
									"name": "FailedOp",
									"nameLocation": "4821:8:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "opIndex",
												"nameLocation": "4838:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "4830:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "4854:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "4847:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4847:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4829:32:12"
									},
									"src": "4815:47:12"
								},
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "4868:429:12",
										"text": " A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"
									},
									"errorSelector": "65c8fd4d",
									"id": 1841,
									"name": "FailedOpWithRevert",
									"nameLocation": "5308:18:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "opIndex",
												"nameLocation": "5335:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "5327:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5327:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "5351:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "5344:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5344:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "inner",
												"nameLocation": "5365:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "5359:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5359:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5326:45:12"
									},
									"src": "5302:70:12"
								},
								{
									"errorSelector": "ad7954bc",
									"id": 1845,
									"name": "PostOpReverted",
									"nameLocation": "5384:14:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "returnData",
												"nameLocation": "5405:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "5399:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5399:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5398:18:12"
									},
									"src": "5378:39:12"
								},
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "5423:190:12",
										"text": " Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"
									},
									"errorSelector": "86a9f750",
									"id": 1850,
									"name": "SignatureValidationFailed",
									"nameLocation": "5624:25:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "5658:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "5650:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5650:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5649:20:12"
									},
									"src": "5618:52:12"
								},
								{
									"errorSelector": "6ca7b806",
									"id": 1854,
									"name": "SenderAddressResult",
									"nameLocation": "5723:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5751:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "5743:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5743:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5742:16:12"
									},
									"src": "5717:42:12"
								},
								{
									"canonicalName": "IEntryPoint.UserOpsPerAggregator",
									"id": 1864,
									"members": [
										{
											"constant": false,
											"id": 1858,
											"mutability": "mutable",
											"name": "userOps",
											"nameLocation": "5865:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1864,
											"src": "5843:29:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_storage_$dyn_storage_ptr",
												"typeString": "struct PackedUserOperation[]"
											},
											"typeName": {
												"baseType": {
													"id": 1856,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1855,
														"name": "PackedUserOperation",
														"nameLocations": [
															"5843:19:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "5843:19:12"
													},
													"referencedDeclaration": 2097,
													"src": "5843:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"id": 1857,
												"nodeType": "ArrayTypeName",
												"src": "5843:21:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_storage_$dyn_storage_ptr",
													"typeString": "struct PackedUserOperation[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1861,
											"mutability": "mutable",
											"name": "aggregator",
											"nameLocation": "5924:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1864,
											"src": "5912:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IAggregator_$1748",
												"typeString": "contract IAggregator"
											},
											"typeName": {
												"id": 1860,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1859,
													"name": "IAggregator",
													"nameLocations": [
														"5912:11:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1748,
													"src": "5912:11:12"
												},
												"referencedDeclaration": 1748,
												"src": "5912:11:12",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAggregator_$1748",
													"typeString": "contract IAggregator"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1863,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "5982:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1864,
											"src": "5976:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1862,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "5976:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserOpsPerAggregator",
									"nameLocation": "5812:20:12",
									"nodeType": "StructDefinition",
									"scope": 1933,
									"src": "5805:193:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "6004:383:12",
										"text": " Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."
									},
									"functionSelector": "765e827f",
									"id": 1874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleOps",
									"nameLocation": "6401:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "ops",
												"nameLocation": "6451:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "6420:34:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct PackedUserOperation[]"
												},
												"typeName": {
													"baseType": {
														"id": 1867,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1866,
															"name": "PackedUserOperation",
															"nameLocations": [
																"6420:19:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2097,
															"src": "6420:19:12"
														},
														"referencedDeclaration": 2097,
														"src": "6420:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
															"typeString": "struct PackedUserOperation"
														}
													},
													"id": 1868,
													"nodeType": "ArrayTypeName",
													"src": "6420:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PackedUserOperation_$2097_storage_$dyn_storage_ptr",
														"typeString": "struct PackedUserOperation[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6480:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "6464:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6464:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6410:87:12"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6506:0:12"
									},
									"scope": 1933,
									"src": "6392:115:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "6513:260:12",
										"text": " Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."
									},
									"functionSelector": "dbed18e0",
									"id": 1884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "handleAggregatedOps",
									"nameLocation": "6787:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "opsPerAggregator",
												"nameLocation": "6848:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "6816:48:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$1864_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
												},
												"typeName": {
													"baseType": {
														"id": 1877,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1876,
															"name": "UserOpsPerAggregator",
															"nameLocations": [
																"6816:20:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1864,
															"src": "6816:20:12"
														},
														"referencedDeclaration": 1864,
														"src": "6816:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserOpsPerAggregator_$1864_storage_ptr",
															"typeString": "struct IEntryPoint.UserOpsPerAggregator"
														}
													},
													"id": 1878,
													"nodeType": "ArrayTypeName",
													"src": "6816:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$1864_storage_$dyn_storage_ptr",
														"typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6890:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "6874:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6874:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6806:101:12"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:0:12"
									},
									"scope": 1933,
									"src": "6778:139:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "6923:357:12",
										"text": " Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"
									},
									"functionSelector": "22cdde4c",
									"id": 1893,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getUserOpHash",
									"nameLocation": "7294:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "userOp",
												"nameLocation": "7346:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "7317:35:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PackedUserOperation_$2097_calldata_ptr",
													"typeString": "struct PackedUserOperation"
												},
												"typeName": {
													"id": 1887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1886,
														"name": "PackedUserOperation",
														"nameLocations": [
															"7317:19:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2097,
														"src": "7317:19:12"
													},
													"referencedDeclaration": 2097,
													"src": "7317:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PackedUserOperation_$2097_storage_ptr",
														"typeString": "struct PackedUserOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:51:12"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "7382:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1890,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7381:9:12"
									},
									"scope": 1933,
									"src": "7285:106:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IEntryPoint.ReturnInfo",
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "7397:474:12",
										"text": " Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"
									},
									"id": 1905,
									"members": [
										{
											"constant": false,
											"id": 1896,
											"mutability": "mutable",
											"name": "preOpGas",
											"nameLocation": "7912:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1905,
											"src": "7904:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1895,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7904:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1898,
											"mutability": "mutable",
											"name": "prefund",
											"nameLocation": "7938:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1905,
											"src": "7930:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1897,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7930:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1900,
											"mutability": "mutable",
											"name": "accountValidationData",
											"nameLocation": "7963:21:12",
											"nodeType": "VariableDeclaration",
											"scope": 1905,
											"src": "7955:29:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1899,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7955:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1902,
											"mutability": "mutable",
											"name": "paymasterValidationData",
											"nameLocation": "8002:23:12",
											"nodeType": "VariableDeclaration",
											"scope": 1905,
											"src": "7994:31:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1901,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7994:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1904,
											"mutability": "mutable",
											"name": "paymasterContext",
											"nameLocation": "8041:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 1905,
											"src": "8035:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1903,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "8035:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReturnInfo",
									"nameLocation": "7883:10:12",
									"nodeType": "StructDefinition",
									"scope": 1933,
									"src": "7876:188:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "8070:420:12",
										"text": " Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error.\n @notice this method cannot be used for EIP-7702 derived contracts.\n @param initCode - The constructor code to be passed into the UserOperation."
									},
									"functionSelector": "9b249f69",
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSenderAddress",
									"nameLocation": "8504:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "initCode",
												"nameLocation": "8534:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "8521:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1907,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8521:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8520:23:12"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8552:0:12"
									},
									"scope": 1933,
									"src": "8495:58:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"errorSelector": "99410554",
									"id": 1917,
									"name": "DelegateAndRevert",
									"nameLocation": "8565:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8588:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "8583:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1912,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8583:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "8603:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "8597:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8597:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8582:25:12"
									},
									"src": "8559:49:12"
								},
								{
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "8614:492:12",
										"text": " Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"
									},
									"functionSelector": "850aaf62",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegateAndRevert",
									"nameLocation": "9120:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9146:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "9138:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9138:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9169:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "9154:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9154:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9137:37:12"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9183:0:12"
									},
									"scope": 1933,
									"src": "9111:73:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "9190:130:12",
										"text": " @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts."
									},
									"functionSelector": "09ccb880",
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "senderCreator",
									"nameLocation": "9334:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9347:2:12"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "9373:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ISenderCreator_$1971",
													"typeString": "contract ISenderCreator"
												},
												"typeName": {
													"id": 1929,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1928,
														"name": "ISenderCreator",
														"nameLocations": [
															"9373:14:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1971,
														"src": "9373:14:12"
													},
													"referencedDeclaration": 1971,
													"src": "9373:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISenderCreator_$1971",
														"typeString": "contract ISenderCreator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9372:16:12"
									},
									"scope": 1933,
									"src": "9325:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1934,
							"src": "463:8928:12",
							"usedErrors": [
								1832,
								1841,
								1845,
								1850,
								1854,
								1917
							],
							"usedEvents": [
								1775,
								1786,
								1797,
								1808,
								1817,
								1820,
								1825,
								1980,
								1988,
								1996,
								2002,
								2010
							]
						}
					],
					"src": "159:9233:12"
				},
				"id": 12
			},
			"src/interfaces/INonceManager.sol": {
				"ast": {
					"absolutePath": "src/interfaces/INonceManager.sol",
					"exportedSymbols": {
						"INonceManager": [
							1952
						]
					},
					"id": 1953,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INonceManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1952,
							"linearizedBaseContracts": [
								1952
							],
							"name": "INonceManager",
							"nameLocation": "68:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "89:416:13",
										"text": " Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."
									},
									"functionSelector": "35567e1a",
									"id": 1945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNonce",
									"nameLocation": "519:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "536:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "528:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "528:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "552:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "544:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 1939,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:29:13"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "592:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "584:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "583:15:13"
									},
									"scope": 1952,
									"src": "510:89:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "605:531:13",
										"text": " Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key.\n @param key - the \"nonce key\" to increment the \"nonce sequence\" for."
									},
									"functionSelector": "0bd28e3b",
									"id": 1951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "incrementNonce",
									"nameLocation": "1150:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1173:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1165:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 1947,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:13:13"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1186:0:13"
									},
									"scope": 1952,
									"src": "1141:46:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1953,
							"src": "58:1131:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1158:13"
				},
				"id": 13
			},
			"src/interfaces/ISenderCreator.sol": {
				"ast": {
					"absolutePath": "src/interfaces/ISenderCreator.sol",
					"exportedSymbols": {
						"ISenderCreator": [
							1971
						]
					},
					"id": 1972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISenderCreator",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1971,
							"linearizedBaseContracts": [
								1971
							],
							"name": "ISenderCreator",
							"nameLocation": "69:14:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "90:122:14",
										"text": " @dev Creates a new sender contract.\n @return sender Address of the newly created sender contract."
									},
									"functionSelector": "570e1a36",
									"id": 1962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createSender",
									"nameLocation": "226:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "initCode",
												"nameLocation": "254:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "239:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "239:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "238:25:14"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "290:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "282:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:16:14"
									},
									"scope": 1971,
									"src": "217:81:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "304:421:14",
										"text": " Use initCallData to initialize an EIP-7702 account.\n The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n Note: Can be called multiple times as long as an appropriate initCode is supplied\n @param sender - the 'sender' EIP-7702 account to be initialized.\n @param initCallData - the call data to be passed to the sender account call."
									},
									"functionSelector": "c09ad0d9",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initEip7702Sender",
									"nameLocation": "739:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "765:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "757:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "initCallData",
												"nameLocation": "788:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "773:27:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "773:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:45:14"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:0:14"
									},
									"scope": 1971,
									"src": "730:81:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1972,
							"src": "59:754:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:781:14"
				},
				"id": 14
			},
			"src/interfaces/IStakeManager.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IStakeManager.sol",
					"exportedSymbols": {
						"IStakeManager": [
							2075
						]
					},
					"id": 2076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakeManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1974,
								"nodeType": "StructuredDocumentation",
								"src": "58:212:15",
								"text": " Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."
							},
							"fullyImplemented": false,
							"id": 2075,
							"linearizedBaseContracts": [
								2075
							],
							"name": "IStakeManager",
							"nameLocation": "281:13:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 1980,
									"name": "Deposited",
									"nameLocation": "307:9:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "333:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "317:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalDeposit",
												"nameLocation": "350:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "342:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:47:15"
									},
									"src": "301:63:15"
								},
								{
									"anonymous": false,
									"eventSelector": "d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb",
									"id": 1988,
									"name": "Withdrawn",
									"nameLocation": "376:9:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "411:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "395:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "436:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "428:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "469:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "461:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:96:15"
									},
									"src": "370:112:15"
								},
								{
									"anonymous": false,
									"eventSelector": "a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01",
									"id": 1996,
									"name": "StakeLocked",
									"nameLocation": "551:11:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "588:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "572:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalStaked",
												"nameLocation": "613:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "605:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"indexed": false,
												"mutability": "mutable",
												"name": "unstakeDelaySec",
												"nameLocation": "642:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "634:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:101:15"
									},
									"src": "545:119:15"
								},
								{
									"anonymous": false,
									"eventSelector": "fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a",
									"id": 2002,
									"name": "StakeUnlocked",
									"nameLocation": "733:13:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "763:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "747:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawTime",
												"nameLocation": "780:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "772:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:47:15"
									},
									"src": "727:67:15"
								},
								{
									"anonymous": false,
									"eventSelector": "b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3",
									"id": 2010,
									"name": "StakeWithdrawn",
									"nameLocation": "806:14:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "846:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "830:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "871:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "863:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "904:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "896:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:96:15"
									},
									"src": "800:117:15"
								},
								{
									"canonicalName": "IStakeManager.DepositInfo",
									"documentation": {
										"id": 2011,
										"nodeType": "StructuredDocumentation",
										"src": "923:697:15",
										"text": " @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"
									},
									"id": 2022,
									"members": [
										{
											"constant": false,
											"id": 2013,
											"mutability": "mutable",
											"name": "deposit",
											"nameLocation": "1662:7:15",
											"nodeType": "VariableDeclaration",
											"scope": 2022,
											"src": "1654:15:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1654:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2015,
											"mutability": "mutable",
											"name": "staked",
											"nameLocation": "1684:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2022,
											"src": "1679:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2014,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1679:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2017,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1708:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2022,
											"src": "1700:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 2016,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "1700:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "unstakeDelaySec",
											"nameLocation": "1730:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2022,
											"src": "1723:22:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2018,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "1723:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2021,
											"mutability": "mutable",
											"name": "withdrawTime",
											"nameLocation": "1762:12:15",
											"nodeType": "VariableDeclaration",
											"scope": 2022,
											"src": "1755:19:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 2020,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "1755:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DepositInfo",
									"nameLocation": "1632:11:15",
									"nodeType": "StructDefinition",
									"scope": 2075,
									"src": "1625:156:15",
									"visibility": "public"
								},
								{
									"canonicalName": "IStakeManager.StakeInfo",
									"id": 2027,
									"members": [
										{
											"constant": false,
											"id": 2024,
											"mutability": "mutable",
											"name": "stake",
											"nameLocation": "1885:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2027,
											"src": "1877:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2023,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1877:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2026,
											"mutability": "mutable",
											"name": "unstakeDelaySec",
											"nameLocation": "1908:15:15",
											"nodeType": "VariableDeclaration",
											"scope": 2027,
											"src": "1900:23:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2025,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1900:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "1857:9:15",
									"nodeType": "StructDefinition",
									"scope": 2075,
									"src": "1850:80:15",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "1936:149:15",
										"text": " Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."
									},
									"functionSelector": "5287ce12",
									"id": 2036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositInfo",
									"nameLocation": "2099:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2131:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2123:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:31:15"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "info",
												"nameLocation": "2187:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2168:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DepositInfo_$2022_memory_ptr",
													"typeString": "struct IStakeManager.DepositInfo"
												},
												"typeName": {
													"id": 2033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2032,
														"name": "DepositInfo",
														"nameLocations": [
															"2168:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2022,
														"src": "2168:11:15"
													},
													"referencedDeclaration": 2022,
													"src": "2168:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DepositInfo_$2022_storage_ptr",
														"typeString": "struct IStakeManager.DepositInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2167:25:15"
									},
									"scope": 2075,
									"src": "2090:103:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "2199:155:15",
										"text": " Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."
									},
									"functionSelector": "70a08231",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2368:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2386:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2378:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:17:15"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2418:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:9:15"
									},
									"scope": 2075,
									"src": "2359:68:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "2433:106:15",
										"text": " Add to the deposit of the given account.\n @param account - The account to add to."
									},
									"functionSelector": "b760faf9",
									"id": 2050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositTo",
									"nameLocation": "2553:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2571:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2563:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:17:15"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2596:0:15"
									},
									"scope": 2075,
									"src": "2544:53:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "2603:202:15",
										"text": " Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn."
									},
									"functionSelector": "0396cb60",
									"id": 2056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addStake",
									"nameLocation": "2819:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "unstakeDelaySec",
												"nameLocation": "2835:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2056,
												"src": "2828:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2052,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2828:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2827:24:15"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2868:0:15"
									},
									"scope": 2075,
									"src": "2810:59:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2057,
										"nodeType": "StructuredDocumentation",
										"src": "2875:128:15",
										"text": " Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."
									},
									"functionSelector": "bb9fe6bf",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unlockStake",
									"nameLocation": "3017:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:15"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3039:0:15"
									},
									"scope": 2075,
									"src": "3008:32:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "3046:197:15",
										"text": " Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."
									},
									"functionSelector": "c23a5cea",
									"id": 2066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawStake",
									"nameLocation": "3257:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "3287:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "3271:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3271:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3270:33:15"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:0:15"
									},
									"scope": 2075,
									"src": "3248:65:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "3319:170:15",
										"text": " Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."
									},
									"functionSelector": "205c2878",
									"id": 2074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawTo",
									"nameLocation": "3503:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "3539:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "3523:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3523:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "withdrawAmount",
												"nameLocation": "3572:14:15",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "3564:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:79:15"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3601:0:15"
									},
									"scope": 2075,
									"src": "3494:108:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2076,
							"src": "271:3333:15",
							"usedErrors": [],
							"usedEvents": [
								1980,
								1988,
								1996,
								2002,
								2010
							]
						}
					],
					"src": "32:3573:15"
				},
				"id": 15
			},
			"src/interfaces/PackedUserOperation.sol": {
				"ast": {
					"absolutePath": "src/interfaces/PackedUserOperation.sol",
					"exportedSymbols": {
						"PackedUserOperation": [
							2097
						]
					},
					"id": 2098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"canonicalName": "PackedUserOperation",
							"documentation": {
								"id": 2078,
								"nodeType": "StructuredDocumentation",
								"src": "58:1163:16",
								"text": " User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."
							},
							"id": 2097,
							"members": [
								{
									"constant": false,
									"id": 2080,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "1263:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1255:14:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2079,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1255:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2082,
									"mutability": "mutable",
									"name": "nonce",
									"nameLocation": "1283:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1275:13:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2081,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1275:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2084,
									"mutability": "mutable",
									"name": "initCode",
									"nameLocation": "1300:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1294:14:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2083,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1294:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2086,
									"mutability": "mutable",
									"name": "callData",
									"nameLocation": "1320:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1314:14:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2085,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1314:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2088,
									"mutability": "mutable",
									"name": "accountGasLimits",
									"nameLocation": "1342:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1334:24:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2087,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1334:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2090,
									"mutability": "mutable",
									"name": "preVerificationGas",
									"nameLocation": "1372:18:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1364:26:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2089,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1364:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2092,
									"mutability": "mutable",
									"name": "gasFees",
									"nameLocation": "1404:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1396:15:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2091,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1396:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2094,
									"mutability": "mutable",
									"name": "paymasterAndData",
									"nameLocation": "1423:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1417:22:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2093,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1417:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2096,
									"mutability": "mutable",
									"name": "signature",
									"nameLocation": "1451:9:16",
									"nodeType": "VariableDeclaration",
									"scope": 2097,
									"src": "1445:15:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2095,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1445:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PackedUserOperation",
							"nameLocation": "1229:19:16",
							"nodeType": "StructDefinition",
							"scope": 2098,
							"src": "1222:241:16",
							"visibility": "public"
						}
					],
					"src": "32:1432:16"
				},
				"id": 16
			},
			"src/samples/callback/TokenCallbackHandler.sol": {
				"ast": {
					"absolutePath": "src/samples/callback/TokenCallbackHandler.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1086
						],
						"IERC165": [
							1116
						],
						"IERC721Receiver": [
							1104
						],
						"TokenCallbackHandler": [
							2201
						]
					},
					"id": 2202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2099,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:17"
						},
						{
							"absolutePath": "src/external/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 2100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2202,
							"sourceUnit": 1117,
							"src": "97:65:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/external/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 2101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2202,
							"sourceUnit": 1105,
							"src": "163:66:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/external/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"id": 2102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2202,
							"sourceUnit": 1087,
							"src": "230:68:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2104,
										"name": "IERC721Receiver",
										"nameLocations": [
											"460:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1104,
										"src": "460:15:17"
									},
									"id": 2105,
									"nodeType": "InheritanceSpecifier",
									"src": "460:15:17"
								},
								{
									"baseName": {
										"id": 2106,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"477:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1086,
										"src": "477:16:17"
									},
									"id": 2107,
									"nodeType": "InheritanceSpecifier",
									"src": "477:16:17"
								}
							],
							"canonicalName": "TokenCallbackHandler",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2103,
								"nodeType": "StructuredDocumentation",
								"src": "300:117:17",
								"text": " Token callback handler.\n   Handles supported tokens' callbacks, allowing account receiving these tokens."
							},
							"fullyImplemented": true,
							"id": 2201,
							"linearizedBaseContracts": [
								2201,
								1086,
								1116,
								1104
							],
							"name": "TokenCallbackHandler",
							"nameLocation": "436:20:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1103
									],
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "648:65:17",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2121,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "665:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1104_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "681:16:17",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1103,
														"src": "665:32:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "698:8:17",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "665:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2120,
												"id": 2124,
												"nodeType": "Return",
												"src": "658:48:17"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "510:16:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "622:8:17"
									},
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "536:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "553:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "570:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "587:14:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "587:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:81:17"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "640:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2118,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:8:17"
									},
									"scope": 2201,
									"src": "501:212:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1067
									],
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "884:67:17",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2142,
															"name": "IERC1155Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "901:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1086_$",
																"typeString": "type(contract IERC1155Receiver)"
															}
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "918:17:17",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1067,
														"src": "901:34:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "936:8:17",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "901:43:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2145,
												"nodeType": "Return",
												"src": "894:50:17"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "728:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "858:8:17"
									},
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "755:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "772:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "789:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "806:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "823:14:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "823:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:98:17"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "876:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2139,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "876:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:8:17"
									},
									"scope": 2201,
									"src": "719:232:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "1149:72:17",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2165,
															"name": "IERC1155Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "1166:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1086_$",
																"typeString": "type(contract IERC1155Receiver)"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1183:22:17",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1085,
														"src": "1166:39:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1206:8:17",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1166:48:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2164,
												"id": 2168,
												"nodeType": "Return",
												"src": "1159:55:17"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "966:22:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2161,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1123:8:17"
									},
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "998:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1015:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1032:18:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1032:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2153,
													"nodeType": "ArrayTypeName",
													"src": "1032:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1060:18:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2155,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1060:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2156,
													"nodeType": "ArrayTypeName",
													"src": "1060:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1088:14:17",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1088:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:120:17"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1141:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1141:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:8:17"
									},
									"scope": 2201,
									"src": "957:264:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1115
									],
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "1320:205:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2178,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "1349:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2180,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "1369:15:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1104_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1104_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		],
																		"id": 2179,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1364:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1364:21:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Receiver_$1104",
																		"typeString": "type(contract IERC721Receiver)"
																	}
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1386:11:17",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1364:33:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1349:48:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2184,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "1413:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2186,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "1433:16:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1086_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1086_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		],
																		"id": 2185,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1428:4:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1428:22:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$1086",
																		"typeString": "type(contract IERC1155Receiver)"
																	}
																},
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1451:11:17",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1428:34:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1413:49:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1349:113:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2191,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "1478:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2193,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "1498:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$1116_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$1116_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 2192,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1493:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1493:13:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1116",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1507:11:17",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1493:25:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1478:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1349:169:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2177,
												"id": 2198,
												"nodeType": "Return",
												"src": "1330:188:17"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1236:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1296:8:17"
									},
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1261:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1254:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2171,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1254:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:20:17"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1314:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1314:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1313:6:17"
									},
									"scope": 2201,
									"src": "1227:298:17",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 2202,
							"src": "418:1109:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1496:17"
				},
				"id": 17
			},
			"src/utils/Exec.sol": {
				"ast": {
					"absolutePath": "src/utils/Exec.sol",
					"exportedSymbols": {
						"Exec": [
							2272
						]
					},
					"id": 2273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Exec",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2204,
								"nodeType": "StructuredDocumentation",
								"src": "97:95:18",
								"text": " Utility functions helpful when making different kinds of contract calls in Solidity."
							},
							"fullyImplemented": true,
							"id": 2272,
							"linearizedBaseContracts": [
								2272
							],
							"name": "Exec",
							"nameLocation": "201:4:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "358:134:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "393:93:18",
													"nodeType": "YulBlock",
													"src": "393:93:18",
													"statements": [
														{
															"nativeSrc": "407:69:18",
															"nodeType": "YulAssignment",
															"src": "407:69:18",
															"value": {
																"arguments": [
																	{
																		"name": "txGas",
																		"nativeSrc": "423:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "423:5:18"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "430:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "430:2:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "434:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "434:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "445:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "445:4:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "451:4:18",
																				"nodeType": "YulLiteral",
																				"src": "451:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "441:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "441:3:18"
																		},
																		"nativeSrc": "441:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "441:15:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "464:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "464:4:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "458:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "458:5:18"
																		},
																		"nativeSrc": "458:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "458:11:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "471:1:18",
																		"nodeType": "YulLiteral",
																		"src": "471:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "474:1:18",
																		"nodeType": "YulLiteral",
																		"src": "474:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "418:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "418:4:18"
																},
																"nativeSrc": "418:58:18",
																"nodeType": "YulFunctionCall",
																"src": "418:58:18"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "407:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "407:7:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2210,
														"isOffset": false,
														"isSlot": false,
														"src": "445:4:18",
														"valueSize": 1
													},
													{
														"declaration": 2210,
														"isOffset": false,
														"isSlot": false,
														"src": "464:4:18",
														"valueSize": 1
													},
													{
														"declaration": 2215,
														"isOffset": false,
														"isSlot": false,
														"src": "407:7:18",
														"valueSize": 1
													},
													{
														"declaration": 2206,
														"isOffset": false,
														"isSlot": false,
														"src": "430:2:18",
														"valueSize": 1
													},
													{
														"declaration": 2212,
														"isOffset": false,
														"isSlot": false,
														"src": "423:5:18",
														"valueSize": 1
													},
													{
														"declaration": 2208,
														"isOffset": false,
														"isSlot": false,
														"src": "434:5:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2217,
												"nodeType": "InlineAssembly",
												"src": "368:118:18"
											}
										]
									},
									"id": 2219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "call",
									"nameLocation": "222:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "244:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "236:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "264:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "256:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "256:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "292:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "279:17:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "279:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "txGas",
												"nameLocation": "314:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "306:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:99:18"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "349:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "344:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "344:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:14:18"
									},
									"scope": 2272,
									"src": "213:279:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "631:133:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "666:92:18",
													"nodeType": "YulBlock",
													"src": "666:92:18",
													"statements": [
														{
															"nativeSrc": "680:68:18",
															"nodeType": "YulAssignment",
															"src": "680:68:18",
															"value": {
																"arguments": [
																	{
																		"name": "txGas",
																		"nativeSrc": "702:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "702:5:18"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "709:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "709:2:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "717:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "717:4:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "723:4:18",
																				"nodeType": "YulLiteral",
																				"src": "723:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "713:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:18"
																		},
																		"nativeSrc": "713:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "713:15:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "736:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "736:4:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "730:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "730:5:18"
																		},
																		"nativeSrc": "730:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "730:11:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "743:1:18",
																		"nodeType": "YulLiteral",
																		"src": "743:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "746:1:18",
																		"nodeType": "YulLiteral",
																		"src": "746:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "691:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "691:10:18"
																},
																"nativeSrc": "691:57:18",
																"nodeType": "YulFunctionCall",
																"src": "691:57:18"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "680:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "680:7:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2223,
														"isOffset": false,
														"isSlot": false,
														"src": "717:4:18",
														"valueSize": 1
													},
													{
														"declaration": 2223,
														"isOffset": false,
														"isSlot": false,
														"src": "736:4:18",
														"valueSize": 1
													},
													{
														"declaration": 2228,
														"isOffset": false,
														"isSlot": false,
														"src": "680:7:18",
														"valueSize": 1
													},
													{
														"declaration": 2221,
														"isOffset": false,
														"isSlot": false,
														"src": "709:2:18",
														"valueSize": 1
													},
													{
														"declaration": 2225,
														"isOffset": false,
														"isSlot": false,
														"src": "702:5:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2230,
												"nodeType": "InlineAssembly",
												"src": "641:117:18"
											}
										]
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "staticcall",
									"nameLocation": "507:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "535:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "527:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "560:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "547:17:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "547:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "txGas",
												"nameLocation": "582:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "574:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:76:18"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "622:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "617:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:14:18"
									},
									"scope": 2272,
									"src": "498:266:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "900:135:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "935:94:18",
													"nodeType": "YulBlock",
													"src": "935:94:18",
													"statements": [
														{
															"nativeSrc": "949:70:18",
															"nodeType": "YulAssignment",
															"src": "949:70:18",
															"value": {
																"arguments": [
																	{
																		"name": "txGas",
																		"nativeSrc": "973:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:18"
																	},
																	{
																		"name": "to",
																		"nativeSrc": "980:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "980:2:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "988:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "988:4:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "994:4:18",
																				"nodeType": "YulLiteral",
																				"src": "994:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "984:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "984:3:18"
																		},
																		"nativeSrc": "984:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "984:15:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1007:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1007:4:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1001:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "1001:5:18"
																		},
																		"nativeSrc": "1001:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1001:11:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1014:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1014:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1017:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1017:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "960:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "960:12:18"
																},
																"nativeSrc": "960:59:18",
																"nodeType": "YulFunctionCall",
																"src": "960:59:18"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "949:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "949:7:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "1007:4:18",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "988:4:18",
														"valueSize": 1
													},
													{
														"declaration": 2241,
														"isOffset": false,
														"isSlot": false,
														"src": "949:7:18",
														"valueSize": 1
													},
													{
														"declaration": 2234,
														"isOffset": false,
														"isSlot": false,
														"src": "980:2:18",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "973:5:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2243,
												"nodeType": "InlineAssembly",
												"src": "910:119:18"
											}
										]
									},
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegateCall",
									"nameLocation": "779:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "809:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "801:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "801:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "834:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "821:17:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "txGas",
												"nameLocation": "856:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "848:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:76:18"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "891:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "886:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "886:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:14:18"
									},
									"scope": 2272,
									"src": "770:265:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "1263:421:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1298:380:18",
													"nodeType": "YulBlock",
													"src": "1298:380:18",
													"statements": [
														{
															"nativeSrc": "1312:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1312:27:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "1323:14:18",
																	"nodeType": "YulIdentifier",
																	"src": "1323:14:18"
																},
																"nativeSrc": "1323:16:18",
																"nodeType": "YulFunctionCall",
																"src": "1323:16:18"
															},
															"variables": [
																{
																	"name": "len",
																	"nativeSrc": "1316:3:18",
																	"nodeType": "YulTypedName",
																	"src": "1316:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1368:104:18",
																"nodeType": "YulBlock",
																"src": "1368:104:18",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "1405:53:18",
																			"nodeType": "YulBlock",
																			"src": "1405:53:18",
																			"statements": [
																				{
																					"nativeSrc": "1427:13:18",
																					"nodeType": "YulAssignment",
																					"src": "1427:13:18",
																					"value": {
																						"name": "maxLen",
																						"nativeSrc": "1434:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1434:6:18"
																					},
																					"variableNames": [
																						{
																							"name": "len",
																							"nativeSrc": "1427:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1427:3:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "len",
																					"nativeSrc": "1392:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1392:3:18"
																				},
																				{
																					"name": "maxLen",
																					"nativeSrc": "1397:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "1397:6:18"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "1389:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "1389:2:18"
																			},
																			"nativeSrc": "1389:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1389:15:18"
																		},
																		"nativeSrc": "1386:72:18",
																		"nodeType": "YulIf",
																		"src": "1386:72:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "maxLen",
																		"nativeSrc": "1358:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1358:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1355:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1355:2:18"
																},
																"nativeSrc": "1355:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:18"
															},
															"nativeSrc": "1352:120:18",
															"nodeType": "YulIf",
															"src": "1352:120:18"
														},
														{
															"nativeSrc": "1485:22:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1485:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1502:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1502:4:18",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1496:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1496:5:18"
																},
																"nativeSrc": "1496:11:18",
																"nodeType": "YulFunctionCall",
																"src": "1496:11:18"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "1489:3:18",
																	"nodeType": "YulTypedName",
																	"src": "1489:3:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1527:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1527:4:18",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "1537:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1537:3:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "len",
																						"nativeSrc": "1546:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1546:3:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1551:4:18",
																						"nodeType": "YulLiteral",
																						"src": "1551:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1542:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1542:3:18"
																				},
																				"nativeSrc": "1542:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1542:14:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1533:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1533:3:18"
																		},
																		"nativeSrc": "1533:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1533:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1520:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:18"
																},
																"nativeSrc": "1520:38:18",
																"nodeType": "YulFunctionCall",
																"src": "1520:38:18"
															},
															"nativeSrc": "1520:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "1520:38:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1578:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1578:3:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "1583:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1583:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1571:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:18"
																},
																"nativeSrc": "1571:16:18",
																"nodeType": "YulFunctionCall",
																"src": "1571:16:18"
															},
															"nativeSrc": "1571:16:18",
															"nodeType": "YulExpressionStatement",
															"src": "1571:16:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "1619:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1619:3:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1624:4:18",
																				"nodeType": "YulLiteral",
																				"src": "1624:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1615:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:18"
																		},
																		"nativeSrc": "1615:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1631:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "1634:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1634:3:18"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1600:14:18",
																	"nodeType": "YulIdentifier",
																	"src": "1600:14:18"
																},
																"nativeSrc": "1600:38:18",
																"nodeType": "YulFunctionCall",
																"src": "1600:38:18"
															},
															"nativeSrc": "1600:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "1600:38:18"
														},
														{
															"nativeSrc": "1651:17:18",
															"nodeType": "YulAssignment",
															"src": "1651:17:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "1665:3:18",
																"nodeType": "YulIdentifier",
																"src": "1665:3:18"
															},
															"variableNames": [
																{
																	"name": "returnData",
																	"nativeSrc": "1651:10:18",
																	"nodeType": "YulIdentifier",
																	"src": "1651:10:18"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2247,
														"isOffset": false,
														"isSlot": false,
														"src": "1358:6:18",
														"valueSize": 1
													},
													{
														"declaration": 2247,
														"isOffset": false,
														"isSlot": false,
														"src": "1397:6:18",
														"valueSize": 1
													},
													{
														"declaration": 2247,
														"isOffset": false,
														"isSlot": false,
														"src": "1434:6:18",
														"valueSize": 1
													},
													{
														"declaration": 2250,
														"isOffset": false,
														"isSlot": false,
														"src": "1651:10:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2252,
												"nodeType": "InlineAssembly",
												"src": "1273:405:18"
											}
										]
									},
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReturnData",
									"nameLocation": "1185:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "maxLen",
												"nameLocation": "1207:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "1199:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:16:18"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "returnData",
												"nameLocation": "1251:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "1238:23:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1238:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:25:18"
									},
									"scope": 2272,
									"src": "1176:508:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "1827:111:18",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1862:70:18",
													"nodeType": "YulBlock",
													"src": "1862:70:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "returnData",
																				"nativeSrc": "1887:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "1887:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1899:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1899:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1883:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:18"
																		},
																		"nativeSrc": "1883:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1883:19:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "returnData",
																				"nativeSrc": "1910:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "1910:10:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1904:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "1904:5:18"
																		},
																		"nativeSrc": "1904:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:17:18"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1876:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:18"
																},
																"nativeSrc": "1876:46:18",
																"nodeType": "YulFunctionCall",
																"src": "1876:46:18"
															},
															"nativeSrc": "1876:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "1876:46:18"
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2256,
														"isOffset": false,
														"isSlot": false,
														"src": "1887:10:18",
														"valueSize": 1
													},
													{
														"declaration": 2256,
														"isOffset": false,
														"isSlot": false,
														"src": "1910:10:18",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2259,
												"nodeType": "InlineAssembly",
												"src": "1837:95:18"
											}
										]
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWithData",
									"nameLocation": "1773:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "returnData",
												"nameLocation": "1801:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "1788:23:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1788:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1787:25:18"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:18"
									},
									"scope": 2272,
									"src": "1764:174:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "2034:49:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2073:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2265,
																"name": "getReturnData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2254,
																"src": "2059:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2059:16:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2264,
														"name": "revertWithData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "2044:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes memory) pure"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2044:32:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "2044:32:18"
											}
										]
									},
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revertWithReturnData",
									"nameLocation": "1997:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2017:2:18"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:18"
									},
									"scope": 2272,
									"src": "1988:95:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2273,
							"src": "193:1892:18",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2054:18"
				},
				"id": 18
			}
		}
	}
}